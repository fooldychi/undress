{
    "sourceFile": "test-api.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1752979517538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752979534114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,18 +58,30 @@\n \n // 测试获取卡片类型\n async function testGetCardTypes(token) {\n   try {\n-    const response = await axios.get('http://localhost:3007/api/admin/card-types', {\n+    const options = {\n+      hostname: 'localhost',\n+      port: 3007,\n+      path: '/api/admin/card-types',\n+      method: 'GET',\n       headers: {\n-        'Authorization': `Bearer ${token}`\n+        'Authorization': `Bearer ${token}`,\n+        'Content-Type': 'application/json'\n       }\n-    });\n+    };\n \n-    console.log('✅ 获取卡片类型成功:', response.data.data.cardTypes.length, '个类型');\n-    return response.data.data.cardTypes;\n+    const response = await makeRequest(options);\n+\n+    if (response.status === 200 && response.data.success) {\n+      console.log('✅ 获取卡片类型成功:', response.data.data.cardTypes.length, '个类型');\n+      return response.data.data.cardTypes;\n+    } else {\n+      console.error('❌ 获取卡片类型失败:', response.data);\n+      return null;\n+    }\n   } catch (error) {\n-    console.error('❌ 获取卡片类型失败:', error.response?.data || error.message);\n+    console.error('❌ 获取卡片类型失败:', error.message);\n     return null;\n   }\n }\n \n"
                },
                {
                    "date": 1752979550631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,22 +87,34 @@\n \n // 测试生成等级卡\n async function testGenerateCards(token, cardTypeId) {\n   try {\n-    const response = await axios.post('http://localhost:3007/api/admin/generate-cards', {\n+    const options = {\n+      hostname: 'localhost',\n+      port: 3007,\n+      path: '/api/admin/generate-cards',\n+      method: 'POST',\n+      headers: {\n+        'Authorization': `Bearer ${token}`,\n+        'Content-Type': 'application/json'\n+      }\n+    };\n+\n+    const response = await makeRequest(options, {\n       cardTypeId: cardTypeId,\n       count: 2\n-    }, {\n-      headers: {\n-        'Authorization': `Bearer ${token}`\n-      }\n     });\n \n-    console.log('✅ 生成等级卡成功:', response.data.message);\n-    console.log('📊 生成的卡片:', response.data.data.cards);\n-    return true;\n+    if (response.status === 200 && response.data.success) {\n+      console.log('✅ 生成等级卡成功:', response.data.message);\n+      console.log('📊 生成的卡片:', response.data.data.cards);\n+      return true;\n+    } else {\n+      console.error('❌ 生成等级卡失败:', response.data);\n+      return false;\n+    }\n   } catch (error) {\n-    console.error('❌ 生成等级卡失败:', error.response?.data || error.message);\n+    console.error('❌ 生成等级卡失败:', error.message);\n     return false;\n   }\n }\n \n"
                }
            ],
            "date": 1752979517538,
            "name": "Commit-0",
            "content": "const http = require('http');\n\n// HTTP请求辅助函数\nfunction makeRequest(options, data = null) {\n  return new Promise((resolve, reject) => {\n    const req = http.request(options, (res) => {\n      let body = '';\n      res.on('data', (chunk) => body += chunk);\n      res.on('end', () => {\n        try {\n          const parsed = JSON.parse(body);\n          resolve({ status: res.statusCode, data: parsed });\n        } catch (e) {\n          resolve({ status: res.statusCode, data: body });\n        }\n      });\n    });\n\n    req.on('error', reject);\n\n    if (data) {\n      req.write(JSON.stringify(data));\n    }\n    req.end();\n  });\n}\n\n// 测试管理员登录\nasync function testAdminLogin() {\n  try {\n    const options = {\n      hostname: 'localhost',\n      port: 3007,\n      path: '/api/admin-auth/login',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const response = await makeRequest(options, {\n      username: 'admin',\n      password: 'admin123'\n    });\n\n    if (response.status === 200 && response.data.success) {\n      console.log('✅ 登录成功');\n      return response.data.data.token;\n    } else {\n      console.error('❌ 登录失败:', response.data);\n      return null;\n    }\n  } catch (error) {\n    console.error('❌ 登录失败:', error.message);\n    return null;\n  }\n}\n\n// 测试获取卡片类型\nasync function testGetCardTypes(token) {\n  try {\n    const response = await axios.get('http://localhost:3007/api/admin/card-types', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n\n    console.log('✅ 获取卡片类型成功:', response.data.data.cardTypes.length, '个类型');\n    return response.data.data.cardTypes;\n  } catch (error) {\n    console.error('❌ 获取卡片类型失败:', error.response?.data || error.message);\n    return null;\n  }\n}\n\n// 测试生成等级卡\nasync function testGenerateCards(token, cardTypeId) {\n  try {\n    const response = await axios.post('http://localhost:3007/api/admin/generate-cards', {\n      cardTypeId: cardTypeId,\n      count: 2\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n\n    console.log('✅ 生成等级卡成功:', response.data.message);\n    console.log('📊 生成的卡片:', response.data.data.cards);\n    return true;\n  } catch (error) {\n    console.error('❌ 生成等级卡失败:', error.response?.data || error.message);\n    return false;\n  }\n}\n\n// 主测试函数\nasync function runTests() {\n  console.log('🚀 开始测试API接口...\\n');\n\n  // 1. 测试登录\n  console.log('1. 测试管理员登录...');\n  const token = await testAdminLogin();\n  if (!token) {\n    console.log('❌ 无法获取令牌，停止测试');\n    return;\n  }\n  console.log('');\n\n  // 2. 测试获取卡片类型\n  console.log('2. 测试获取卡片类型...');\n  const cardTypes = await testGetCardTypes(token);\n  if (!cardTypes || cardTypes.length === 0) {\n    console.log('❌ 无法获取卡片类型，停止测试');\n    return;\n  }\n  console.log('');\n\n  // 3. 测试生成等级卡\n  console.log('3. 测试生成等级卡...');\n  const firstCardType = cardTypes[0];\n  console.log(`使用卡片类型: ${firstCardType.name} (ID: ${firstCardType.id})`);\n  const success = await testGenerateCards(token, firstCardType.id);\n  console.log('');\n\n  if (success) {\n    console.log('🎉 所有测试通过！等级卡生成功能正常工作。');\n  } else {\n    console.log('❌ 测试失败，需要进一步调试。');\n  }\n}\n\n// 运行测试\nrunTests().catch(console.error);\n"
        }
    ]
}
{
    "sourceFile": "STARTUP_GUIDE.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752840139879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752840139879,
            "name": "Commit-0",
            "content": "# AIMagic 项目启动指南\n\n## 🚀 快速启动\n\n### 📋 启动前检查\n\n1. **环境要求**:\n   - Node.js >= 16.0.0\n   - npm 或 yarn\n   - MySQL 数据库\n\n2. **端口检查**:\n   - 确保端口 3001、3003、3007 未被占用\n   - 如有冲突，请参考 `PORT_CONFIGURATION.md`\n\n### 🔄 启动顺序\n\n#### 1️⃣ 启动后端服务 (必须首先启动)\n\n```bash\ncd server\nnpm install  # 首次运行需要安装依赖\nnpm start\n```\n\n**或使用启动脚本**:\n```bash\n# Windows\ncd server\nstart.bat\n\n# Linux/Mac\ncd server\n./start.sh\n```\n\n**验证**: 访问 http://localhost:3007 应该看到API服务响应\n\n#### 2️⃣ 启动客户端 (用户界面)\n\n```bash\ncd client\nnpm install  # 首次运行需要安装依赖\nnpm run dev\n```\n\n**验证**: 访问 http://localhost:3001 应该看到客户端界面\n\n#### 3️⃣ 启动后台管理系统 (管理员界面)\n\n```bash\ncd admin\nnpm install  # 首次运行需要安装依赖\nnpm run dev\n```\n\n**或使用启动脚本**:\n```bash\n# Windows\ncd admin\nstart.bat\n\n# Linux/Mac\ncd admin\n./start.sh\n```\n\n**验证**: 访问 http://localhost:3003 应该看到管理后台界面\n\n## 🎯 访问地址\n\n| 服务 | 地址 | 用途 |\n|------|------|------|\n| **客户端** | http://localhost:3001 | 用户前端界面 |\n| **后台管理** | http://localhost:3003 | 管理员界面 |\n| **API服务** | http://localhost:3007 | 后端API |\n\n## 🔐 默认登录信息\n\n### 后台管理系统\n- **地址**: http://localhost:3003\n- **用户名**: `admin`\n- **密码**: `admin123456`\n\n## 🛠️ 常见问题解决\n\n### 1. 端口被占用\n**错误**: `Error: listen EADDRINUSE: address already in use :::3001`\n\n**解决方案**:\n```bash\n# 查看端口占用\nnetstat -ano | findstr :3001  # Windows\nlsof -i :3001                 # Linux/Mac\n\n# 终止占用进程\ntaskkill /PID <进程ID> /F      # Windows\nkill -9 <进程ID>               # Linux/Mac\n```\n\n### 2. 依赖安装失败\n**错误**: `npm install` 失败\n\n**解决方案**:\n```bash\n# 清除缓存\nnpm cache clean --force\n\n# 删除 node_modules 重新安装\nrm -rf node_modules package-lock.json  # Linux/Mac\nrmdir /s node_modules & del package-lock.json  # Windows\nnpm install\n```\n\n### 3. API连接失败\n**错误**: 前端无法连接后端API\n\n**解决方案**:\n1. 确认后端服务已启动 (http://localhost:3007)\n2. 检查防火墙设置\n3. 检查代理配置是否正确\n\n### 4. 数据库连接失败\n**错误**: 后端启动时数据库连接失败\n\n**解决方案**:\n1. 确认MySQL服务已启动\n2. 检查数据库配置 (`server/src/config/database.js`)\n3. 确认数据库用户权限\n\n### 5. 页面白屏或加载失败\n**错误**: 前端页面无法正常显示\n\n**解决方案**:\n1. 检查浏览器控制台错误信息\n2. 清除浏览器缓存\n3. 确认前端服务正常启动\n\n## 🔧 开发模式启动\n\n### 前后端分离部署\n\n本项目采用前后端分离架构，各服务应独立启动和部署：\n\n#### 开发环境\n```bash\n# 在不同的终端窗口中分别启动各服务\n\n# 终端1: 启动后端服务\ncd server\nnpm start\n\n# 终端2: 启动客户端\ncd client\nnpm run dev\n\n# 终端3: 启动后台管理\ncd admin\nnpm run dev\n```\n\n#### 生产环境\n各服务应部署在不同的服务器或容器中，通过API接口进行通信。\n\n## 📊 服务状态检查\n\n### 检查所有服务是否正常运行:\n\n```bash\n# 检查端口占用情况\nnetstat -ano | findstr \"3001 3003 3007\"  # Windows\nlsof -i :3001 -i :3003 -i :3007          # Linux/Mac\n```\n\n### 健康检查:\n- **后端API**: `curl http://localhost:3007/health`\n- **客户端**: 浏览器访问 http://localhost:3001\n- **后台管理**: 浏览器访问 http://localhost:3003\n\n## 🔄 重启服务\n\n### 重启单个服务:\n1. 在对应终端按 `Ctrl+C` 停止服务\n2. 重新运行启动命令\n\n### 重启所有服务:\n1. 停止所有服务 (`Ctrl+C` 在每个终端)\n2. 按照启动顺序重新启动\n\n## 📝 注意事项\n\n1. **启动顺序很重要**: 必须先启动后端服务，再启动前端服务\n2. **端口冲突**: 如果端口被占用，参考端口配置文档进行调整\n3. **数据库依赖**: 后端服务依赖MySQL数据库，确保数据库服务正常\n4. **网络代理**: 前端通过代理访问后端API，确保代理配置正确\n\n## 🎉 启动成功标志\n\n当所有服务正常启动后，您应该能够：\n\n1. ✅ 访问客户端界面 (http://localhost:3001)\n2. ✅ 访问后台管理界面 (http://localhost:3003)\n3. ✅ 后台管理系统能够正常登录\n4. ✅ 前端能够正常调用API接口\n5. ✅ 数据能够正常显示和操作\n\n---\n\n**按照此指南启动，确保项目正常运行！** 🚀\n"
        }
    ]
}
{
    "sourceFile": "server/src/scripts/create-config-table-simple.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752400662011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752400662011,
            "name": "Commit-0",
            "content": "const { query } = require('../config/database');\n\nasync function createConfigTable() {\n  try {\n    console.log('🔧 开始创建配置表...');\n\n    // 1. 删除 admin_login_logs 表\n    console.log('🗑️ 删除 admin_login_logs 表...');\n    await query('DROP TABLE IF EXISTS admin_login_logs');\n    console.log('✅ admin_login_logs 表已删除');\n\n    // 2. 创建 system_config 表\n    console.log('📝 创建 system_config 表...');\n    await query(`\n      CREATE TABLE IF NOT EXISTS system_config (\n        id int(11) NOT NULL AUTO_INCREMENT,\n        config_key varchar(100) NOT NULL,\n        config_value text,\n        config_type varchar(20) DEFAULT 'string',\n        config_group varchar(50) DEFAULT 'general',\n        description varchar(255) DEFAULT NULL,\n        is_encrypted tinyint(1) DEFAULT 0,\n        created_at timestamp DEFAULT CURRENT_TIMESTAMP,\n        updated_at datetime DEFAULT NULL,\n        PRIMARY KEY (id),\n        UNIQUE KEY uk_config_key (config_key)\n      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n    `);\n    console.log('✅ system_config 表创建成功');\n\n    // 3. 插入默认配置\n    console.log('📊 插入默认配置...');\n    const configs = [\n      // 服务器配置\n      ['server.port', '3007', 'number', 'server', '服务器端口'],\n      ['server.node_env', 'development', 'string', 'server', '运行环境'],\n\n      // 数据库配置\n      ['database.host', '114.132.50.71', 'string', 'database', '数据库主机'],\n      ['database.port', '3306', 'number', 'database', '数据库端口'],\n      ['database.name', 'aimagic', 'string', 'database', '数据库名称'],\n      ['database.user', 'aimagic', 'string', 'database', '数据库用户名'],\n      ['database.password', 'dFLJYsd82irJwHX5', 'string', 'database', '数据库密码'],\n\n      // JWT配置\n      ['jwt.secret', 'aimagic.icomfy.co^~^', 'string', 'jwt', 'JWT密钥'],\n      ['jwt.expires_in', '7d', 'string', 'jwt', 'JWT过期时间'],\n\n      // CORS配置\n      ['cors.origin', 'http://localhost:3001,http://localhost:3003', 'string', 'cors', '允许的跨域源'],\n\n      // ComfyUI配置\n      ['comfyui.server_url', 'https://your-comfyui-server.com', 'string', 'comfyui', 'ComfyUI主服务器地址'],\n      ['comfyui.backup_servers', '', 'string', 'comfyui', 'ComfyUI备用服务器地址列表（每行一个）'],\n      ['comfyui.request_timeout', '30000', 'number', 'comfyui', 'ComfyUI请求超时时间（毫秒）'],\n      ['comfyui.health_check_timeout', '10000', 'number', 'comfyui', 'ComfyUI健康检查超时时间（毫秒）'],\n      ['comfyui.auto_switch', 'true', 'boolean', 'comfyui', '是否自动切换到备用服务器'],\n      ['comfyui.client_id', '', 'string', 'comfyui', 'ComfyUI客户端ID'],\n      ['comfyui.max_retries', '3', 'number', 'comfyui', '最大重试次数'],\n\n      // AI服务配置\n      ['ai.text_to_image_points', '10', 'number', 'ai', '文生图消耗积分'],\n      ['ai.face_swap_points', '5', 'number', 'ai', '换脸消耗积分'],\n      ['ai.clothing_swap_points', '8', 'number', 'ai', '换装消耗积分'],\n\n      // 前端配置\n      ['frontend.version', '1.0.0', 'string', 'frontend', '前端版本'],\n      ['frontend.title', 'AI Magic', 'string', 'frontend', '应用标题'],\n\n      // 上传配置\n      ['upload.max_file_size', '10485760', 'number', 'upload', '最大文件大小(字节)'],\n      ['upload.path', 'uploads/', 'string', 'upload', '上传路径'],\n\n      // 日志配置\n      ['log.level', 'info', 'string', 'log', '日志级别']\n    ];\n\n    for (const [key, value, type, group, desc] of configs) {\n      await query(`\n        INSERT INTO system_config (config_key, config_value, config_type, config_group, description)\n        VALUES (?, ?, ?, ?, ?)\n        ON DUPLICATE KEY UPDATE config_value = VALUES(config_value)\n      `, [key, value, type, group, desc]);\n    }\n\n    console.log(`✅ 插入了 ${configs.length} 个配置项`);\n\n    // 4. 验证结果\n    const result = await query('SELECT COUNT(*) as count FROM system_config');\n    console.log(`📊 配置表中共有 ${result[0].count} 个配置项`);\n\n    console.log('🎉 配置表创建完成！');\n\n  } catch (error) {\n    console.error('❌ 创建配置表失败:', error);\n    throw error;\n  }\n}\n\nif (require.main === module) {\n  createConfigTable()\n    .then(() => process.exit(0))\n    .catch(error => {\n      console.error('💥 失败:', error);\n      process.exit(1);\n    });\n}\n\nmodule.exports = { createConfigTable };\n"
        }
    ]
}
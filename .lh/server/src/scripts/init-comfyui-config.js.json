{
    "sourceFile": "server/src/scripts/init-comfyui-config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752513617991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752513617991,
            "name": "Commit-0",
            "content": "const { query } = require('../config/database');\n\nasync function initComfyUIConfig() {\n  try {\n    console.log('🔧 初始化ComfyUI配置...');\n\n    // ComfyUI配置项\n    const comfyuiConfigs = [\n      {\n        config_key: 'comfyui.server_url',\n        config_value: 'https://your-comfyui-server.com',\n        config_type: 'string',\n        config_group: 'comfyui',\n        description: 'ComfyUI主服务器地址',\n        is_encrypted: 0\n      },\n      {\n        config_key: 'comfyui.backup_servers',\n        config_value: '',\n        config_type: 'string',\n        config_group: 'comfyui',\n        description: 'ComfyUI备用服务器地址列表（每行一个或逗号分隔）',\n        is_encrypted: 0\n      },\n      {\n        config_key: 'comfyui.request_timeout',\n        config_value: '30000',\n        config_type: 'number',\n        config_group: 'comfyui',\n        description: 'ComfyUI请求超时时间（毫秒）',\n        is_encrypted: 0\n      },\n      {\n        config_key: 'comfyui.health_check_timeout',\n        config_value: '10000',\n        config_type: 'number',\n        config_group: 'comfyui',\n        description: 'ComfyUI健康检查超时时间（毫秒）',\n        is_encrypted: 0\n      },\n      {\n        config_key: 'comfyui.auto_switch',\n        config_value: 'true',\n        config_type: 'boolean',\n        config_group: 'comfyui',\n        description: '是否自动切换到备用服务器',\n        is_encrypted: 0\n      },\n      {\n        config_key: 'comfyui.client_id',\n        config_value: '',\n        config_type: 'string',\n        config_group: 'comfyui',\n        description: 'ComfyUI客户端ID',\n        is_encrypted: 0\n      },\n      {\n        config_key: 'comfyui.max_retries',\n        config_value: '3',\n        config_type: 'number',\n        config_group: 'comfyui',\n        description: '最大重试次数',\n        is_encrypted: 0\n      }\n    ];\n\n    // 检查并插入配置\n    for (const config of comfyuiConfigs) {\n      // 检查配置是否已存在\n      const existing = await query(\n        'SELECT id FROM system_config WHERE config_key = ?',\n        [config.config_key]\n      );\n\n      if (existing.length === 0) {\n        // 插入新配置\n        await query(`\n          INSERT INTO system_config (\n            config_key, config_value, config_type, config_group,\n            description, is_encrypted, created_at\n          ) VALUES (?, ?, ?, ?, ?, ?, NOW())\n        `, [\n          config.config_key,\n          config.config_value,\n          config.config_type,\n          config.config_group,\n          config.description,\n          config.is_encrypted\n        ]);\n\n        console.log(`✅ 添加配置: ${config.config_key}`);\n      } else {\n        console.log(`ℹ️ 配置已存在: ${config.config_key}`);\n      }\n    }\n\n    // 删除旧的基础配置和AI服务配置（如果存在）\n    const configsToRemove = [\n      'system.name',\n      'system.description',\n      'system.default_points',\n      'ai.face_swap_enabled',\n      'ai.clothing_swap_enabled',\n      'ai.text_to_image_enabled'\n    ];\n\n    for (const configKey of configsToRemove) {\n      const result = await query(\n        'DELETE FROM system_config WHERE config_key = ?',\n        [configKey]\n      );\n\n      if (result.affectedRows > 0) {\n        console.log(`🗑️ 删除旧配置: ${configKey}`);\n      }\n    }\n\n    console.log('🎉 ComfyUI配置初始化完成！');\n\n    // 显示当前配置\n    const allConfigs = await query(`\n      SELECT config_key, config_value, description\n      FROM system_config\n      WHERE config_group = 'comfyui'\n      ORDER BY config_key\n    `);\n\n    console.log('\\n📋 当前ComfyUI配置:');\n    allConfigs.forEach(config => {\n      console.log(`  ${config.config_key}: ${config.config_value} (${config.description})`);\n    });\n\n  } catch (error) {\n    console.error('❌ 初始化ComfyUI配置失败:', error);\n    throw error;\n  }\n}\n\n// 如果直接运行此脚本\nif (require.main === module) {\n  initComfyUIConfig()\n    .then(() => {\n      console.log('✅ 脚本执行完成');\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error('❌ 脚本执行失败:', error);\n      process.exit(1);\n    });\n}\n\nmodule.exports = { initComfyUIConfig };\n"
        }
    ]
}
{
    "sourceFile": "server/scripts/tools/check-system-config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752329625449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752329625449,
            "name": "Commit-0",
            "content": "require('dotenv').config({ path: './server/.env' });\nconst mysql = require('mysql2/promise');\n\nasync function checkSystemConfig() {\n  console.log('🔍 检查系统配置表...\\n');\n\n  try {\n    const connection = await mysql.createConnection({\n      host: process.env.DB_HOST,\n      port: process.env.DB_PORT,\n      user: process.env.DB_USER,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_NAME,\n      charset: 'utf8mb4'\n    });\n\n    console.log('✅ 数据库连接成功\\n');\n\n    // 检查system_config表是否存在\n    try {\n      const [tables] = await connection.execute(`\n        SHOW TABLES LIKE 'system_config'\n      `);\n\n      if (tables.length === 0) {\n        console.log('❌ system_config表不存在，需要创建');\n\n        // 创建system_config表\n        await connection.execute(`\n          CREATE TABLE system_config (\n            id INT AUTO_INCREMENT PRIMARY KEY,\n            config_key VARCHAR(100) NOT NULL UNIQUE,\n            config_value TEXT,\n            config_type ENUM('string', 'number', 'boolean', 'json') DEFAULT 'string',\n            config_category VARCHAR(50) DEFAULT 'general',\n            description VARCHAR(255),\n            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n          )\n        `);\n\n        console.log('✅ system_config表创建成功');\n\n        // 插入默认配置\n        const defaultConfigs = [\n          // 服务器配置\n          ['server.port', '3006', 'number', 'server', '服务器端口'],\n          ['server.host', 'localhost', 'string', 'server', '服务器主机'],\n\n          // 数据库配置\n          ['database.host', process.env.DB_HOST, 'string', 'database', '数据库主机'],\n          ['database.port', process.env.DB_PORT, 'number', 'database', '数据库端口'],\n          ['database.name', process.env.DB_NAME, 'string', 'database', '数据库名称'],\n\n          // JWT配置\n          ['jwt.secret', process.env.JWT_SECRET || 'your-secret-key', 'string', 'jwt', 'JWT密钥'],\n          ['jwt.expires_in', '7d', 'string', 'jwt', 'JWT过期时间'],\n\n          // ComfyUI配置\n          ['comfyui.server_url', 'https://your-comfyui-server.com', 'string', 'comfyui', 'ComfyUI服务器地址'],\n          ['comfyui.client_id', 'your-comfyui-client-id', 'string', 'comfyui', 'ComfyUI客户端ID'],\n          ['comfyui.timeout', '300000', 'number', 'comfyui', 'ComfyUI请求超时时间(毫秒)'],\n\n          // AI功能配置\n          ['ai.text_to_image_points', '20', 'number', 'ai', '文生图消耗积分'],\n          ['ai.face_swap_points', '20', 'number', 'ai', '换脸消耗积分'],\n          ['ai.undress_points', '20', 'number', 'ai', '换衣消耗积分'],\n\n          // 前端配置\n          ['frontend.api_base_url', 'https://your-api-server.com/api', 'string', 'frontend', '前端API基础地址'],\n          ['frontend.title', 'AI Magic - AI图像处理平台', 'string', 'frontend', '应用标题'],\n          ['frontend.version', '1.0.0', 'string', 'frontend', '应用版本'],\n\n          // CORS配置\n          ['cors.allowed_origins', 'http://localhost:3000,http://localhost:3001,http://localhost:3007', 'string', 'cors', '允许的跨域源'],\n\n          // 文件上传配置\n          ['upload.max_file_size', '10485760', 'number', 'upload', '最大文件大小(字节)'],\n          ['upload.allowed_types', 'jpg,jpeg,png,gif', 'string', 'upload', '允许的文件类型'],\n\n          // 日志配置\n          ['log.level', 'info', 'string', 'log', '日志级别'],\n          ['log.file_path', './logs/app.log', 'string', 'log', '日志文件路径']\n        ];\n\n        for (const config of defaultConfigs) {\n          await connection.execute(`\n            INSERT INTO system_config (config_key, config_value, config_type, config_category, description)\n            VALUES (?, ?, ?, ?, ?)\n          `, config);\n        }\n\n        console.log(`✅ 插入了${defaultConfigs.length}条默认配置`);\n\n      } else {\n        console.log('✅ system_config表已存在');\n      }\n\n      // 查看表结构\n      const [columns] = await connection.execute(`\n        DESCRIBE system_config\n      `);\n\n      console.log('\\n📋 system_config表结构:');\n      columns.forEach(col => {\n        console.log(`   ${col.Field}: ${col.Type} ${col.Null === 'YES' ? '(可空)' : '(非空)'}`);\n      });\n\n      // 查询现有配置\n      const [configs] = await connection.execute(`\n        SELECT * FROM system_config LIMIT 10\n      `);\n\n      console.log('\\n🎯 现有配置示例:');\n      configs.forEach(config => {\n        console.log(`   ${config.config_key || config.key}: ${config.config_value || config.value}`);\n      });\n\n    } catch (error) {\n      console.error('❌ 检查配置表失败:', error.message);\n    }\n\n    await connection.end();\n\n  } catch (error) {\n    console.error('❌ 数据库连接失败:', error.message);\n  }\n}\n\ncheckSystemConfig();\n\n"
        }
    ]
}
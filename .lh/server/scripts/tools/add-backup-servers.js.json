{
    "sourceFile": "server/scripts/tools/add-backup-servers.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752513572231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752513572231,
            "name": "Commit-0",
            "content": "require('dotenv').config({ path: './server/.env' });\nconst mysql = require('mysql2/promise');\n\nasync function addBackupServers() {\n  console.log('🔧 添加ComfyUI备用服务器配置...\\n');\n\n  try {\n    const connection = await mysql.createConnection({\n      host: process.env.DB_HOST,\n      port: process.env.DB_PORT,\n      user: process.env.DB_USER,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_NAME,\n      charset: 'utf8mb4'\n    });\n\n    console.log('✅ 数据库连接成功\\n');\n\n    // 查看添加前的ComfyUI配置\n    console.log('📋 添加前的ComfyUI配置:');\n    const [beforeConfigs] = await connection.execute(`\n      SELECT config_key, config_value, description\n      FROM system_config\n      WHERE config_group = 'comfyui'\n      ORDER BY config_key\n    `);\n\n    beforeConfigs.forEach(config => {\n      console.log(`   ${config.config_key}: ${config.config_value}`);\n      console.log(`      描述: ${config.description}`);\n    });\n\n    // 添加备用服务器配置\n    const backupConfigs = [\n      ['comfyui.backup_servers', 'https://backup1.your-domain.com,https://backup2.comfyui.com', 'string', 'comfyui', 'ComfyUI备用服务器地址列表（每行一个或逗号分隔）', 0],\n      ['comfyui.auto_switch', 'true', 'boolean', 'comfyui', '是否启用自动切换备用服务器', 0],\n      ['comfyui.health_check_timeout', '10000', 'number', 'comfyui', '服务器健康检查超时时间(毫秒)', 0],\n      ['comfyui.retry_attempts', '3', 'number', 'comfyui', '服务器重试次数', 0],\n      ['comfyui.switch_threshold', '2', 'number', 'comfyui', '连续失败多少次后切换服务器', 0]\n    ];\n\n    console.log('\\n🔧 添加备用服务器配置...');\n\n    for (const config of backupConfigs) {\n      try {\n        // 检查配置是否已存在\n        const [existing] = await connection.execute(`\n          SELECT config_key FROM system_config WHERE config_key = ?\n        `, [config[0]]);\n\n        if (existing.length > 0) {\n          console.log(`⚠️ 配置 ${config[0]} 已存在，跳过`);\n          continue;\n        }\n\n        // 插入新配置\n        await connection.execute(`\n          INSERT INTO system_config (config_key, config_value, config_type, config_group, description, is_encrypted)\n          VALUES (?, ?, ?, ?, ?, ?)\n        `, config);\n\n        console.log(`✅ 添加配置: ${config[0]} = ${config[1]}`);\n      } catch (error) {\n        console.log(`❌ 添加配置失败: ${config[0]} - ${error.message}`);\n      }\n    }\n\n    // 查看添加后的ComfyUI配置\n    console.log('\\n📋 添加后的ComfyUI配置:');\n    const [afterConfigs] = await connection.execute(`\n      SELECT config_key, config_value, description\n      FROM system_config\n      WHERE config_group = 'comfyui'\n      ORDER BY config_key\n    `);\n\n    afterConfigs.forEach(config => {\n      console.log(`   ${config.config_key}: ${config.config_value}`);\n      console.log(`      描述: ${config.description}`);\n    });\n\n    console.log(`\\n📊 配置结果: ${beforeConfigs.length} → ${afterConfigs.length} 项配置`);\n\n    await connection.end();\n\n  } catch (error) {\n    console.error('❌ 添加失败:', error.message);\n  }\n}\n\naddBackupServers();\n"
        }
    ]
}
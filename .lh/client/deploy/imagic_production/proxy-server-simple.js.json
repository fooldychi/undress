{
    "sourceFile": "client/deploy/imagic_production/proxy-server-simple.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1752328484917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752328900494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n const app = express();\r\n const PORT = process.env.PORT || 3008;\r\n \r\n // ComfyUI服务器地址\r\n-const COMFYUI_BASE_URL = process.env.COMFYUI_URL || 'https://your-comfyui-server.com';\r\n+const COMFYUI_BASE_URL = process.env.COMFYUI_URL || 'https://dzqgp58z0s-8188.cnb.run';\r\n \r\n console.log('🚀 启动Imagic代理服务器...');\r\n \r\n // 启用CORS\r\n@@ -35,10 +35,10 @@\n }));\r\n \r\n // 健康检查\r\n app.get('/health', (req, res) => {\r\n-  res.json({\r\n-    status: 'ok',\r\n+  res.json({ \r\n+    status: 'ok', \r\n     message: 'Imagic代理服务器运行正常',\r\n     target: COMFYUI_BASE_URL,\r\n     timestamp: new Date().toISOString()\r\n   });\r\n@@ -62,10 +62,10 @@\n   },\r\n   onError: (err, req, res) => {\r\n     console.error('❌ 代理错误:', err.message);\r\n     if (!res.headersSent) {\r\n-      res.status(500).json({\r\n-        error: '代理请求失败',\r\n+      res.status(500).json({ \r\n+        error: '代理请求失败', \r\n         details: err.message,\r\n         target: COMFYUI_BASE_URL\r\n       });\r\n     }\r\n@@ -80,9 +80,9 @@\n   // 如果是API请求但没有被代理处理，返回404\r\n   if (req.path.startsWith('/api/')) {\r\n     return res.status(404).json({ error: 'API endpoint not found' });\r\n   }\r\n-\r\n+  \r\n   // 其他所有请求返回index.html（SPA路由）\r\n   res.sendFile(path.join(__dirname, 'index.html'));\r\n });\r\n \r\n@@ -130,9 +130,9 @@\n   server.close(() => {\r\n     console.log('✅ 服务器已安全关闭');\r\n     process.exit(0);\r\n   });\r\n-\r\n+  \r\n   // 强制关闭超时\r\n   setTimeout(() => {\r\n     console.log('⚠️ 强制关闭服务器');\r\n     process.exit(1);\r\n@@ -148,7 +148,7 @@\n   const rl = readline.createInterface({\r\n     input: process.stdin,\r\n     output: process.stdout\r\n   });\r\n-\r\n+  \r\n   rl.on('SIGINT', gracefulShutdown);\r\n }\r\n"
                },
                {
                    "date": 1753557022700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,14 @@\n-// 简化版ComfyUI代理服务器 - 生产环境专用\r\n+// Imagic静态文件服务器 - 生产环境专用\r\n const express = require('express');\r\n-const { createProxyMiddleware } = require('http-proxy-middleware');\r\n const cors = require('cors');\r\n const path = require('path');\r\n \r\n const app = express();\r\n const PORT = process.env.PORT || 3008;\r\n \r\n-// ComfyUI服务器地址\r\n-const COMFYUI_BASE_URL = process.env.COMFYUI_URL || 'https://dzqgp58z0s-8188.cnb.run';\r\n+console.log('🚀 启动Imagic静态文件服务器...');\r\n \r\n-console.log('🚀 启动Imagic代理服务器...');\r\n-\r\n // 启用CORS\r\n app.use(cors({\r\n   origin: true, // 允许所有来源\r\n   credentials: true\r\n@@ -35,10 +31,10 @@\n }));\r\n \r\n // 健康检查\r\n app.get('/health', (req, res) => {\r\n-  res.json({ \r\n-    status: 'ok', \r\n+  res.json({\r\n+    status: 'ok',\r\n     message: 'Imagic代理服务器运行正常',\r\n     target: COMFYUI_BASE_URL,\r\n     timestamp: new Date().toISOString()\r\n   });\r\n@@ -62,10 +58,10 @@\n   },\r\n   onError: (err, req, res) => {\r\n     console.error('❌ 代理错误:', err.message);\r\n     if (!res.headersSent) {\r\n-      res.status(500).json({ \r\n-        error: '代理请求失败', \r\n+      res.status(500).json({\r\n+        error: '代理请求失败',\r\n         details: err.message,\r\n         target: COMFYUI_BASE_URL\r\n       });\r\n     }\r\n@@ -80,9 +76,9 @@\n   // 如果是API请求但没有被代理处理，返回404\r\n   if (req.path.startsWith('/api/')) {\r\n     return res.status(404).json({ error: 'API endpoint not found' });\r\n   }\r\n-  \r\n+\r\n   // 其他所有请求返回index.html（SPA路由）\r\n   res.sendFile(path.join(__dirname, 'index.html'));\r\n });\r\n \r\n@@ -130,9 +126,9 @@\n   server.close(() => {\r\n     console.log('✅ 服务器已安全关闭');\r\n     process.exit(0);\r\n   });\r\n-  \r\n+\r\n   // 强制关闭超时\r\n   setTimeout(() => {\r\n     console.log('⚠️ 强制关闭服务器');\r\n     process.exit(1);\r\n@@ -148,7 +144,7 @@\n   const rl = readline.createInterface({\r\n     input: process.stdin,\r\n     output: process.stdout\r\n   });\r\n-  \r\n+\r\n   rl.on('SIGINT', gracefulShutdown);\r\n }\r\n"
                },
                {
                    "date": 1753557034658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,9 @@\n // 健康检查\r\n app.get('/health', (req, res) => {\r\n   res.json({\r\n     status: 'ok',\r\n-    message: 'Imagic代理服务器运行正常',\r\n-    target: COMFYUI_BASE_URL,\r\n+    message: 'Imagic静态文件服务器运行正常',\r\n     timestamp: new Date().toISOString()\r\n   });\r\n });\r\n \r\n"
                },
                {
                    "date": 1753557054086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,47 +38,11 @@\n     timestamp: new Date().toISOString()\r\n   });\r\n });\r\n \r\n-// API代理配置\r\n-const proxyOptions = {\r\n-  target: COMFYUI_BASE_URL,\r\n-  changeOrigin: true,\r\n-  timeout: 60000, // 60秒超时\r\n-  proxyTimeout: 60000,\r\n-  pathRewrite: {\r\n-    '^/api': '',\r\n-  },\r\n-  onProxyReq: (proxyReq, req, res) => {\r\n-    console.log(`📡 代理请求: ${req.method} ${req.url}`);\r\n-    proxyReq.setTimeout(60000);\r\n-  },\r\n-  onProxyRes: (proxyRes, req, res) => {\r\n-    console.log(`📥 代理响应: ${proxyRes.statusCode} ${req.url}`);\r\n-  },\r\n-  onError: (err, req, res) => {\r\n-    console.error('❌ 代理错误:', err.message);\r\n-    if (!res.headersSent) {\r\n-      res.status(500).json({\r\n-        error: '代理请求失败',\r\n-        details: err.message,\r\n-        target: COMFYUI_BASE_URL\r\n-      });\r\n-    }\r\n-  }\r\n-};\r\n-\r\n-// 代理所有API请求\r\n-app.use('/api', createProxyMiddleware(proxyOptions));\r\n-\r\n-// SPA路由支持 - 所有非API请求返回index.html\r\n+// SPA路由支持 - 所有请求返回index.html\r\n app.get('*', (req, res) => {\r\n-  // 如果是API请求但没有被代理处理，返回404\r\n-  if (req.path.startsWith('/api/')) {\r\n-    return res.status(404).json({ error: 'API endpoint not found' });\r\n-  }\r\n-\r\n-  // 其他所有请求返回index.html（SPA路由）\r\n+  // 所有请求返回index.html（SPA路由）\r\n   res.sendFile(path.join(__dirname, 'index.html'));\r\n });\r\n \r\n // 全局错误处理\r\n"
                },
                {
                    "date": 1753557080559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,27 +47,24 @@\n \r\n // 全局错误处理\r\n process.on('uncaughtException', (error) => {\r\n   console.error('❌ 未捕获的异常:', error.message);\r\n-  console.error('请检查ComfyUI服务器连接:', COMFYUI_BASE_URL);\r\n   // 不退出进程，继续运行\r\n });\r\n \r\n process.on('unhandledRejection', (reason, promise) => {\r\n   console.error('❌ 未处理的Promise拒绝:', reason);\r\n-  console.error('请检查网络连接和ComfyUI服务器状态');\r\n   // 不退出进程，继续运行\r\n });\r\n \r\n // 启动服务器\r\n const server = app.listen(PORT, () => {\r\n-  console.log(`✅ Imagic服务器启动成功!`);\r\n+  console.log(`✅ Imagic静态文件服务器启动成功!`);\r\n   console.log(`🌐 访问地址: http://localhost:${PORT}`);\r\n-  console.log(`📡 API代理: http://localhost:${PORT}/api/*`);\r\n-  console.log(`🎯 目标服务器: ${COMFYUI_BASE_URL}`);\r\n   console.log(`🔧 健康检查: http://localhost:${PORT}/health`);\r\n   console.log('');\r\n   console.log('🎉 现在可以在浏览器中访问Imagic应用了！');\r\n+  console.log('📝 注意：应用将直接连接到ComfyUI服务器，无需代理');\r\n });\r\n \r\n // 处理服务器错误\r\n server.on('error', (error) => {\r\n"
                }
            ],
            "date": 1752328484917,
            "name": "Commit-0",
            "content": "// 简化版ComfyUI代理服务器 - 生产环境专用\r\nconst express = require('express');\r\nconst { createProxyMiddleware } = require('http-proxy-middleware');\r\nconst cors = require('cors');\r\nconst path = require('path');\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3008;\r\n\r\n// ComfyUI服务器地址\r\nconst COMFYUI_BASE_URL = process.env.COMFYUI_URL || 'https://your-comfyui-server.com';\r\n\r\nconsole.log('🚀 启动Imagic代理服务器...');\r\n\r\n// 启用CORS\r\napp.use(cors({\r\n  origin: true, // 允许所有来源\r\n  credentials: true\r\n}));\r\n\r\n// 解析JSON\r\napp.use(express.json({ limit: '50mb' }));\r\napp.use(express.urlencoded({ extended: true, limit: '50mb' }));\r\n\r\n// 静态文件服务\r\napp.use(express.static('./', {\r\n  index: 'index.html',\r\n  setHeaders: (res, path) => {\r\n    if (path.endsWith('.html')) {\r\n      res.setHeader('Cache-Control', 'no-cache');\r\n    } else if (path.includes('/assets/')) {\r\n      res.setHeader('Cache-Control', 'public, max-age=31536000');\r\n    }\r\n  }\r\n}));\r\n\r\n// 健康检查\r\napp.get('/health', (req, res) => {\r\n  res.json({\r\n    status: 'ok',\r\n    message: 'Imagic代理服务器运行正常',\r\n    target: COMFYUI_BASE_URL,\r\n    timestamp: new Date().toISOString()\r\n  });\r\n});\r\n\r\n// API代理配置\r\nconst proxyOptions = {\r\n  target: COMFYUI_BASE_URL,\r\n  changeOrigin: true,\r\n  timeout: 60000, // 60秒超时\r\n  proxyTimeout: 60000,\r\n  pathRewrite: {\r\n    '^/api': '',\r\n  },\r\n  onProxyReq: (proxyReq, req, res) => {\r\n    console.log(`📡 代理请求: ${req.method} ${req.url}`);\r\n    proxyReq.setTimeout(60000);\r\n  },\r\n  onProxyRes: (proxyRes, req, res) => {\r\n    console.log(`📥 代理响应: ${proxyRes.statusCode} ${req.url}`);\r\n  },\r\n  onError: (err, req, res) => {\r\n    console.error('❌ 代理错误:', err.message);\r\n    if (!res.headersSent) {\r\n      res.status(500).json({\r\n        error: '代理请求失败',\r\n        details: err.message,\r\n        target: COMFYUI_BASE_URL\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n// 代理所有API请求\r\napp.use('/api', createProxyMiddleware(proxyOptions));\r\n\r\n// SPA路由支持 - 所有非API请求返回index.html\r\napp.get('*', (req, res) => {\r\n  // 如果是API请求但没有被代理处理，返回404\r\n  if (req.path.startsWith('/api/')) {\r\n    return res.status(404).json({ error: 'API endpoint not found' });\r\n  }\r\n\r\n  // 其他所有请求返回index.html（SPA路由）\r\n  res.sendFile(path.join(__dirname, 'index.html'));\r\n});\r\n\r\n// 全局错误处理\r\nprocess.on('uncaughtException', (error) => {\r\n  console.error('❌ 未捕获的异常:', error.message);\r\n  console.error('请检查ComfyUI服务器连接:', COMFYUI_BASE_URL);\r\n  // 不退出进程，继续运行\r\n});\r\n\r\nprocess.on('unhandledRejection', (reason, promise) => {\r\n  console.error('❌ 未处理的Promise拒绝:', reason);\r\n  console.error('请检查网络连接和ComfyUI服务器状态');\r\n  // 不退出进程，继续运行\r\n});\r\n\r\n// 启动服务器\r\nconst server = app.listen(PORT, () => {\r\n  console.log(`✅ Imagic服务器启动成功!`);\r\n  console.log(`🌐 访问地址: http://localhost:${PORT}`);\r\n  console.log(`📡 API代理: http://localhost:${PORT}/api/*`);\r\n  console.log(`🎯 目标服务器: ${COMFYUI_BASE_URL}`);\r\n  console.log(`🔧 健康检查: http://localhost:${PORT}/health`);\r\n  console.log('');\r\n  console.log('🎉 现在可以在浏览器中访问Imagic应用了！');\r\n});\r\n\r\n// 处理服务器错误\r\nserver.on('error', (error) => {\r\n  if (error.code === 'EADDRINUSE') {\r\n    console.error(`❌ 端口 ${PORT} 已被占用`);\r\n    console.error('请尝试以下解决方案:');\r\n    console.error('1. 关闭占用该端口的程序');\r\n    console.error('2. 使用其他端口: PORT=3009 node proxy-server-simple.js');\r\n    console.error('3. 检查是否有其他Imagic实例在运行');\r\n  } else {\r\n    console.error('❌ 服务器启动错误:', error.message);\r\n  }\r\n  process.exit(1);\r\n});\r\n\r\n// 优雅关闭\r\nconst gracefulShutdown = () => {\r\n  console.log('\\n🛑 正在关闭服务器...');\r\n  server.close(() => {\r\n    console.log('✅ 服务器已安全关闭');\r\n    process.exit(0);\r\n  });\r\n\r\n  // 强制关闭超时\r\n  setTimeout(() => {\r\n    console.log('⚠️ 强制关闭服务器');\r\n    process.exit(1);\r\n  }, 5000);\r\n};\r\n\r\nprocess.on('SIGINT', gracefulShutdown);\r\nprocess.on('SIGTERM', gracefulShutdown);\r\n\r\n// Windows下的关闭信号\r\nif (process.platform === 'win32') {\r\n  const readline = require('readline');\r\n  const rl = readline.createInterface({\r\n    input: process.stdin,\r\n    output: process.stdout\r\n  });\r\n\r\n  rl.on('SIGINT', gracefulShutdown);\r\n}\r\n"
        }
    ]
}
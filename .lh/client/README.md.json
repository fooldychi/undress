{
    "sourceFile": "client/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1752294531380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752294562885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,61 +42,47 @@\n \r\n ## 📁 项目结构\r\n \r\n ```\r\n-imagic/\r\n+client/\r\n ├── src/\r\n-│   ├── components/      # Vue组件\r\n-│   │   ├── icons/       # 自定义图标组件\r\n-│   │   │   ├── UndressWomanIcon.vue # 褪衣图标\r\n-│   │   │   ├── FaceSwapIcon.vue     # 换脸图标\r\n-│   │   │   └── index.js             # 图标管理\r\n-│   │   ├── ImageUpload.vue          # 图片上传组件\r\n-│   │   ├── ProcessingStatus.vue     # 处理状态组件\r\n-│   │   └── ImageComparison.vue      # 图片对比组件\r\n-│   ├── views/           # 页面组件\r\n-│   │   ├── HomePage.vue     # 主页\r\n-│   │   ├── ClothesSwap.vue  # 一键褪衣\r\n-│   │   ├── TextToImage.vue  # 文生图\r\n-│   │   └── FaceSwap.vue     # 极速换脸\r\n-│   ├── services/        # API服务\r\n-│   │   ├── api.js       # 通用API\r\n-│   │   └── comfyui.js   # ComfyUI API\r\n-│   ├── workflows/       # ComfyUI工作流\r\n-│   │   ├── undress.json # 褪衣工作流\r\n-│   │   └── faceswap2.0.json # 换脸工作流\r\n-│   ├── router/          # 路由配置\r\n-│   ├── App.vue          # 根组件\r\n-│   ├── main.js          # 入口文件\r\n-│   └── style.css        # 全局样式\r\n-├── docs/                # 文档目录\r\n-│   └── archive/         # 历史文档归档\r\n-├── public/              # 静态资源\r\n-├── proxy-server.js      # 代理服务器\r\n-├── package.json         # 项目配置\r\n-└── vite.config.js       # Vite配置\r\n+│   ├── components/          # 可复用组件\r\n+│   │   ├── TopNavigation.vue    # 顶部导航\r\n+│   │   ├── AuthModal.vue        # 认证弹窗\r\n+│   │   ├── RecordItem.vue       # 记录项\r\n+│   │   └── ResultModal.vue      # 结果查看弹窗\r\n+│   ├── views/              # 页面组件\r\n+│   │   ├── HomePage.vue         # 首页\r\n+│   │   ├── Profile.vue          # 个人中心\r\n+│   │   ├── ClothesSwap.vue      # 一键褪衣\r\n+│   │   ├── TextToImage.vue      # 文生图\r\n+│   │   └── FaceSwap.vue         # 极速换脸\r\n+│   ├── services/           # API服务层\r\n+│   ├── router/             # 路由配置\r\n+│   └── styles/             # 全局样式\r\n+├── public/                 # 静态资源\r\n+└── docs/                   # 项目文档\r\n ```\r\n \r\n-## 📚 文档归档\r\n+## 📋 开发规范\r\n \r\n-项目的历史文档和修复记录已归档到 `docs/archive/` 目录中，包括：\r\n-- 关键问题修复总结\r\n-- UI组件迁移文档\r\n-- 部署和构建文档\r\n-- 技术决策记录\r\n+### 核心原则\r\n+1. **设计系统统一** - 使用CSS变量确保视觉一致性\r\n+2. **组件化开发** - 可复用、单一职责的组件设计\r\n+3. **图标使用规范** - 严格按功能分类使用图标\r\n+4. **用户体验优先** - 响应式设计和友好的交互反馈\r\n+5. **代码质量标准** - 遵循Vue 3最佳实践\r\n \r\n-这些文档对于了解项目历史、问题排查和新开发者了解项目具有重要价值。\r\n+详细规范请参考：[前端开发原则](./docs/FRONTEND_DEVELOPMENT_PRINCIPLES.md)\r\n \r\n-## 🎨 技术栈\r\n+### 图标使用规范\r\n+| 功能类别 | 图标 | 使用场景 |\r\n+|---------|------|----------|\r\n+| 积分相关 | `diamond-o` | 积分显示、积分卡片 |\r\n+| 等级卡相关 | `credit-pay` | 等级卡列表、标题 |\r\n+| 用户相关 | `user-o` | 用户头像、个人中心 |\r\n+| 记录相关 | `records` | 积分记录、操作历史 |\r\n \r\n-- **前端框架**: Vue 3 (Composition API)\r\n-- **构建工具**: Vite\r\n-- **路由**: Vue Router 4\r\n-- **UI组件库**: Vant UI (移动端优化)\r\n-- **图标**: Lucide Vue Next + 自定义SVG图标\r\n-- **样式**: 原生CSS + CSS变量 + 暗色主题\r\n-- **AI后端**: ComfyUI\r\n-\r\n ## 🔌 ComfyUI集成\r\n \r\n ### 真实工作流集成\r\n \r\n"
                },
                {
                    "date": 1752294597268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,127 +81,38 @@\n | 等级卡相关 | `credit-pay` | 等级卡列表、标题 |\r\n | 用户相关 | `user-o` | 用户头像、个人中心 |\r\n | 记录相关 | `records` | 积分记录、操作历史 |\r\n \r\n-## 🔌 ComfyUI集成\r\n+## 🔌 API集成\r\n \r\n-### 真实工作流集成\r\n+| API类别 | 端点 | 功能 |\r\n+|---------|------|------|\r\n+| 认证API | `/api/auth/*` | 登录、注册、登出 |\r\n+| 用户API | `/api/user/*` | 用户信息管理 |\r\n+| 积分API | `/api/points/*` | 积分查询和记录 |\r\n+| 等级卡API | `/api/level-cards/*` | 等级卡管理 |\r\n+| 图像处理API | `/api/image/*` | AI图像处理功能 |\r\n \r\n-**一键换衣功能已集成真实的ComfyUI工作流！**\r\n+## 📦 部署\r\n \r\n-- **工作流文件**: `src/workflows/undress.json`\r\n-- **ComfyUI服务器**: `https://rihblhikbh-8188.cnb.run`\r\n-- **处理流程**:\r\n-  1. 上传图片到ComfyUI服务器\r\n-  2. 动态配置工作流（节点49）\r\n-  3. 提交任务并监控状态\r\n-  4. 获取处理结果\r\n-\r\n-### API端点\r\n-\r\n-- **一键换衣**: 使用真实ComfyUI工作流处理\r\n-- **文生图**: 开发模式模拟响应\r\n-- **换脸**: 开发模式模拟响应\r\n-\r\n-### 测试ComfyUI集成\r\n-\r\n-访问 `http://localhost:3000?test=true` 运行自动测试套件。\r\n-\r\n-## 🎯 使用说明\r\n-\r\n-### 一键换衣\r\n-1. 上传包含人物的照片\r\n-2. 点击\"开始换衣\"\r\n-3. 等待AI处理完成\r\n-4. 下载处理结果\r\n-\r\n-### 文生图\r\n-1. 输入详细的图像描述\r\n-2. 选择图像尺寸和风格\r\n-3. 点击\"生成图像\"\r\n-4. 下载生成的图片\r\n-\r\n-### 极速换脸\r\n-1. 上传源脸部图片（要替换的脸）\r\n-2. 上传目标图片（被替换脸部的图片）\r\n-3. 选择处理选项\r\n-4. 点击\"开始换脸\"\r\n-5. 下载换脸结果\r\n-\r\n-## 🚀 快速开始\r\n-\r\n-### 📋 环境要求\r\n-\r\n-- Node.js 16+\r\n-- npm 或 yarn\r\n-\r\n-### 🔧 安装依赖\r\n-\r\n+### 生产环境部署\r\n ```bash\r\n-npm install\r\n-```\r\n+# 构建项目\r\n+npm run build\r\n \r\n-### 🏃‍♂️ 启动开发服务器\r\n-\r\n-```bash\r\n-# 启动前端开发服务器\r\n-npm run dev\r\n-\r\n-# 启动代理服务器（解决CORS问题）\r\n-npm run proxy\r\n-\r\n-# 同时启动前端和代理服务器（推荐）\r\n-npm run dev:full\r\n+# 部署dist目录到Web服务器\r\n ```\r\n \r\n-## 🌐 部署\r\n+详细部署说明：[部署指南](./docs/DEPLOYMENT_GUIDE.md)\r\n \r\n-### GitHub Pages 部署\r\n+## 🤝 贡献指南\r\n \r\n-项目已配置好 GitHub Pages 自动部署：\r\n+1. Fork 项目\r\n+2. 创建功能分支 (`git checkout -b feature/AmazingFeature`)\r\n+3. 遵循开发规范进行开发\r\n+4. 提交更改 (`git commit -m 'Add some AmazingFeature'`)\r\n+5. 推送到分支 (`git push origin feature/AmazingFeature`)\r\n+6. 开启 Pull Request\r\n \r\n-```bash\r\n-# 推送到 main 分支自动部署\r\n-git push origin main\r\n+## 📄 许可证\r\n \r\n-# 手动构建和部署\r\n-npm run build:github\r\n-npm run deploy\r\n-```\r\n-\r\n-**在线访问**：https://fooldychi.github.io/undress/\r\n-\r\n-详细部署指南请查看：[GITHUB_PAGES_SETUP.md](./GITHUB_PAGES_SETUP.md)\r\n-\r\n-## 🛠️ 开发指南\r\n-\r\n-### 添加新功能\r\n-\r\n-1. 在 `src/views/` 创建新的页面组件\r\n-2. 在 `src/router/index.js` 添加路由\r\n-3. 在 `src/services/api.js` 添加对应的API方法\r\n-4. 在主页添加功能入口\r\n-\r\n-### 自定义样式\r\n-\r\n-项目使用CSS变量进行主题配置，在 `src/style.css` 中修改：\r\n-\r\n-```css\r\n-:root {\r\n-  --primary-color: #667eea;\r\n-  --secondary-color: #764ba2;\r\n-  --accent-color: #f093fb;\r\n-  /* ... */\r\n-}\r\n-```\r\n-\r\n-## 📝 许可证\r\n-\r\n-MIT License\r\n-\r\n-## 🤝 贡献\r\n-\r\n-欢迎提交Issue和Pull Request！\r\n-\r\n-## 📞 支持\r\n-\r\n-如有问题，请提交Issue或联系开发团队。\r\n+本项目采用 MIT 许可证 - 查看 [LICENSE](LICENSE) 文件了解详情\r\n"
                },
                {
                    "date": 1752295018886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,14 +74,14 @@\n \r\n 详细规范请参考：[前端开发原则](./docs/FRONTEND_DEVELOPMENT_PRINCIPLES.md)\r\n \r\n ### 图标使用规范\r\n-| 功能类别 | 图标 | 使用场景 |\r\n-|---------|------|----------|\r\n-| 积分相关 | `diamond-o` | 积分显示、积分卡片 |\r\n-| 等级卡相关 | `credit-pay` | 等级卡列表、标题 |\r\n-| 用户相关 | `user-o` | 用户头像、个人中心 |\r\n-| 记录相关 | `records` | 积分记录、操作历史 |\r\n+| 功能类别 | 图标 | 使用场景 | 对应内容 |\r\n+|---------|------|----------|----------|\r\n+| 积分相关 | `diamond-o` | 积分显示、积分卡片 | 我的积分、积分信息、积分状态 |\r\n+| 等级卡相关 | `credit-pay` | 等级卡列表、标题 | 我的等级卡、等级卡管理、卡片绑定 |\r\n+| 用户相关 | `user-o` | 用户头像、个人中心 | 用户信息、个人中心、用户管理 |\r\n+| 记录相关 | `records` | 积分记录、操作历史 | 最近记录、积分记录、操作历史 |\r\n \r\n ## 🔌 API集成\r\n \r\n | API类别 | 端点 | 功能 |\r\n"
                },
                {
                    "date": 1752295214286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,14 +74,14 @@\n \r\n 详细规范请参考：[前端开发原则](./docs/FRONTEND_DEVELOPMENT_PRINCIPLES.md)\r\n \r\n ### 图标使用规范\r\n-| 功能类别 | 图标 | 使用场景 | 对应内容 |\r\n-|---------|------|----------|----------|\r\n-| 积分相关 | `diamond-o` | 积分显示、积分卡片 | 我的积分、积分信息、积分状态 |\r\n-| 等级卡相关 | `credit-pay` | 等级卡列表、标题 | 我的等级卡、等级卡管理、卡片绑定 |\r\n-| 用户相关 | `user-o` | 用户头像、个人中心 | 用户信息、个人中心、用户管理 |\r\n-| 记录相关 | `records` | 积分记录、操作历史 | 最近记录、积分记录、操作历史 |\r\n+| 功能类别 | 图标 | 使用场景 |\r\n+|---------|------|----------|\r\n+| 积分相关 | `diamond-o` | 积分显示、积分卡片 |\r\n+| 等级卡相关 | `credit-pay` | 等级卡列表、标题 |\r\n+| 用户相关 | `user-o` | 用户头像、个人中心 |\r\n+| 记录相关 | `records` | 积分记录、操作历史 |\r\n \r\n ## 🔌 API集成\r\n \r\n | API类别 | 端点 | 功能 |\r\n"
                },
                {
                    "date": 1752295252398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,118 +1,240 @@\n-# AI图像处理平台 - 前端\r\n+# Imagic - AI图像处理应用\r\n \r\n-基于Vue 3的现代化AI图像处理平台前端应用，提供直观的用户界面和流畅的交互体验。\r\n+基于Vue 3和ComfyUI工作流的AI图像处理平台，提供一键换衣、文生图和极速换脸三大核心功能。\r\n \r\n-## ✨ 功能特性\r\n+## 🚀 在线访问\r\n \r\n-- 🎨 **AI图像处理**: 一键褪衣、文生图、极速换脸等AI功能\r\n-- 👤 **用户系统**: 完整的用户认证和个人中心管理\r\n-- 💎 **积分系统**: 灵活的积分管理和等级卡绑定机制\r\n-- 📱 **响应式设计**: 完美适配桌面端和移动端\r\n-- 🎯 **现代化UI**: 统一的设计系统和优雅的交互体验\r\n+- **GitHub Pages**: https://fooldychi.github.io/undress/\r\n+- **自定义域名**: https://undress.icomfy.co/\r\n \r\n-## 🛠️ 技术栈\r\n+## 🌟 功能特性\r\n \r\n-- **框架**: Vue 3 + Composition API\r\n-- **路由**: Vue Router 4\r\n-- **UI组件**: Vant 4\r\n-- **构建工具**: Vite\r\n-- **样式**: CSS3 + CSS变量系统\r\n-- **图标**: Vant Icons\r\n+- **一键褪衣** 👤 - 智能识别人物轮廓，快速移除照片中的服装\r\n+- **文生图** 🖼️ - 通过自然语言描述，AI生成高质量的创意图像\r\n+- **极速换脸** 😀 - 精准面部识别技术，实现自然的人脸替换效果\r\n \r\n ## 🚀 快速开始\r\n \r\n ### 环境要求\r\n-- Node.js >= 16\r\n-- npm >= 8\r\n \r\n-### 安装与运行\r\n+- Node.js 16+\r\n+- npm 或 yarn\r\n+- ComfyUI服务器（用于AI处理）\r\n \r\n+### 安装依赖\r\n+\r\n ```bash\r\n-# 安装依赖\r\n npm install\r\n+```\r\n \r\n-# 启动开发服务器\r\n+### 启动开发服务器\r\n+\r\n+```bash\r\n npm run dev\r\n+```\r\n \r\n-# 构建生产版本\r\n+应用将在 http://localhost:3000 启动\r\n+\r\n+### 构建生产版本\r\n+\r\n+```bash\r\n npm run build\r\n ```\r\n \r\n-应用将在 http://localhost:3001 启动\r\n+## 🔧 配置\r\n \r\n+### ComfyUI API配置\r\n+\r\n+在 `src/services/api.js` 中配置你的ComfyUI服务器：\r\n+\r\n+```javascript\r\n+const API_CONFIG = {\r\n+  BASE_URL: 'http://your-comfyui-server:8188',\r\n+  API_KEY: 'your-api-key', // 如果需要\r\n+  TIMEOUT: 300000\r\n+}\r\n+```\r\n+\r\n+### 开发模式\r\n+\r\n+在开发模式下，应用使用模拟API响应，无需真实的ComfyUI服务器。\r\n+\r\n ## 📁 项目结构\r\n \r\n ```\r\n-client/\r\n+imagic/\r\n ├── src/\r\n-│   ├── components/          # 可复用组件\r\n-│   │   ├── TopNavigation.vue    # 顶部导航\r\n-│   │   ├── AuthModal.vue        # 认证弹窗\r\n-│   │   ├── RecordItem.vue       # 记录项\r\n-│   │   └── ResultModal.vue      # 结果查看弹窗\r\n-│   ├── views/              # 页面组件\r\n-│   │   ├── HomePage.vue         # 首页\r\n-│   │   ├── Profile.vue          # 个人中心\r\n-│   │   ├── ClothesSwap.vue      # 一键褪衣\r\n-│   │   ├── TextToImage.vue      # 文生图\r\n-│   │   └── FaceSwap.vue         # 极速换脸\r\n-│   ├── services/           # API服务层\r\n-│   ├── router/             # 路由配置\r\n-│   └── styles/             # 全局样式\r\n-├── public/                 # 静态资源\r\n-└── docs/                   # 项目文档\r\n+│   ├── components/      # Vue组件\r\n+│   │   ├── icons/       # 自定义图标组件\r\n+│   │   │   ├── UndressWomanIcon.vue # 褪衣图标\r\n+│   │   │   ├── FaceSwapIcon.vue     # 换脸图标\r\n+│   │   │   └── index.js             # 图标管理\r\n+│   │   ├── ImageUpload.vue          # 图片上传组件\r\n+│   │   ├── ProcessingStatus.vue     # 处理状态组件\r\n+│   │   └── ImageComparison.vue      # 图片对比组件\r\n+│   ├── views/           # 页面组件\r\n+│   │   ├── HomePage.vue     # 主页\r\n+│   │   ├── ClothesSwap.vue  # 一键褪衣\r\n+│   │   ├── TextToImage.vue  # 文生图\r\n+│   │   └── FaceSwap.vue     # 极速换脸\r\n+│   ├── services/        # API服务\r\n+│   │   ├── api.js       # 通用API\r\n+│   │   └── comfyui.js   # ComfyUI API\r\n+│   ├── workflows/       # ComfyUI工作流\r\n+│   │   ├── undress.json # 褪衣工作流\r\n+│   │   └── faceswap2.0.json # 换脸工作流\r\n+│   ├── router/          # 路由配置\r\n+│   ├── App.vue          # 根组件\r\n+│   ├── main.js          # 入口文件\r\n+│   └── style.css        # 全局样式\r\n+├── docs/                # 文档目录\r\n+│   └── archive/         # 历史文档归档\r\n+├── public/              # 静态资源\r\n+├── proxy-server.js      # 代理服务器\r\n+├── package.json         # 项目配置\r\n+└── vite.config.js       # Vite配置\r\n ```\r\n \r\n-## 📋 开发规范\r\n+## 📚 文档归档\r\n \r\n-### 核心原则\r\n-1. **设计系统统一** - 使用CSS变量确保视觉一致性\r\n-2. **组件化开发** - 可复用、单一职责的组件设计\r\n-3. **图标使用规范** - 严格按功能分类使用图标\r\n-4. **用户体验优先** - 响应式设计和友好的交互反馈\r\n-5. **代码质量标准** - 遵循Vue 3最佳实践\r\n+项目的历史文档和修复记录已归档到 `docs/archive/` 目录中，包括：\r\n+- 关键问题修复总结\r\n+- UI组件迁移文档\r\n+- 部署和构建文档\r\n+- 技术决策记录\r\n \r\n-详细规范请参考：[前端开发原则](./docs/FRONTEND_DEVELOPMENT_PRINCIPLES.md)\r\n+这些文档对于了解项目历史、问题排查和新开发者了解项目具有重要价值。\r\n \r\n-### 图标使用规范\r\n-| 功能类别 | 图标 | 使用场景 |\r\n-|---------|------|----------|\r\n-| 积分相关 | `diamond-o` | 积分显示、积分卡片 |\r\n-| 等级卡相关 | `credit-pay` | 等级卡列表、标题 |\r\n-| 用户相关 | `user-o` | 用户头像、个人中心 |\r\n-| 记录相关 | `records` | 积分记录、操作历史 |\r\n+## 🎨 技术栈\r\n \r\n-## 🔌 API集成\r\n+- **前端框架**: Vue 3 (Composition API)\r\n+- **构建工具**: Vite\r\n+- **路由**: Vue Router 4\r\n+- **UI组件库**: Vant UI (移动端优化)\r\n+- **图标**: Lucide Vue Next + 自定义SVG图标\r\n+- **样式**: 原生CSS + CSS变量 + 暗色主题\r\n+- **AI后端**: ComfyUI\r\n \r\n-| API类别 | 端点 | 功能 |\r\n-|---------|------|------|\r\n-| 认证API | `/api/auth/*` | 登录、注册、登出 |\r\n-| 用户API | `/api/user/*` | 用户信息管理 |\r\n-| 积分API | `/api/points/*` | 积分查询和记录 |\r\n-| 等级卡API | `/api/level-cards/*` | 等级卡管理 |\r\n-| 图像处理API | `/api/image/*` | AI图像处理功能 |\r\n+## 🔌 ComfyUI集成\r\n \r\n-## 📦 部署\r\n+### 真实工作流集成\r\n \r\n-### 生产环境部署\r\n+**一键换衣功能已集成真实的ComfyUI工作流！**\r\n+\r\n+- **工作流文件**: `src/workflows/undress.json`\r\n+- **ComfyUI服务器**: `https://rihblhikbh-8188.cnb.run`\r\n+- **处理流程**:\r\n+  1. 上传图片到ComfyUI服务器\r\n+  2. 动态配置工作流（节点49）\r\n+  3. 提交任务并监控状态\r\n+  4. 获取处理结果\r\n+\r\n+### API端点\r\n+\r\n+- **一键换衣**: 使用真实ComfyUI工作流处理\r\n+- **文生图**: 开发模式模拟响应\r\n+- **换脸**: 开发模式模拟响应\r\n+\r\n+### 测试ComfyUI集成\r\n+\r\n+访问 `http://localhost:3000?test=true` 运行自动测试套件。\r\n+\r\n+## 🎯 使用说明\r\n+\r\n+### 一键换衣\r\n+1. 上传包含人物的照片\r\n+2. 点击\"开始换衣\"\r\n+3. 等待AI处理完成\r\n+4. 下载处理结果\r\n+\r\n+### 文生图\r\n+1. 输入详细的图像描述\r\n+2. 选择图像尺寸和风格\r\n+3. 点击\"生成图像\"\r\n+4. 下载生成的图片\r\n+\r\n+### 极速换脸\r\n+1. 上传源脸部图片（要替换的脸）\r\n+2. 上传目标图片（被替换脸部的图片）\r\n+3. 选择处理选项\r\n+4. 点击\"开始换脸\"\r\n+5. 下载换脸结果\r\n+\r\n+## 🚀 快速开始\r\n+\r\n+### 📋 环境要求\r\n+\r\n+- Node.js 16+\r\n+- npm 或 yarn\r\n+\r\n+### 🔧 安装依赖\r\n+\r\n ```bash\r\n-# 构建项目\r\n-npm run build\r\n+npm install\r\n+```\r\n \r\n-# 部署dist目录到Web服务器\r\n+### 🏃‍♂️ 启动开发服务器\r\n+\r\n+```bash\r\n+# 启动前端开发服务器\r\n+npm run dev\r\n+\r\n+# 启动代理服务器（解决CORS问题）\r\n+npm run proxy\r\n+\r\n+# 同时启动前端和代理服务器（推荐）\r\n+npm run dev:full\r\n ```\r\n \r\n-详细部署说明：[部署指南](./docs/DEPLOYMENT_GUIDE.md)\r\n+## 🌐 部署\r\n \r\n-## 🤝 贡献指南\r\n+### GitHub Pages 部署\r\n \r\n-1. Fork 项目\r\n-2. 创建功能分支 (`git checkout -b feature/AmazingFeature`)\r\n-3. 遵循开发规范进行开发\r\n-4. 提交更改 (`git commit -m 'Add some AmazingFeature'`)\r\n-5. 推送到分支 (`git push origin feature/AmazingFeature`)\r\n-6. 开启 Pull Request\r\n+项目已配置好 GitHub Pages 自动部署：\r\n \r\n-## 📄 许可证\r\n+```bash\r\n+# 推送到 main 分支自动部署\r\n+git push origin main\r\n \r\n-本项目采用 MIT 许可证 - 查看 [LICENSE](LICENSE) 文件了解详情\r\n+# 手动构建和部署\r\n+npm run build:github\r\n+npm run deploy\r\n+```\r\n+\r\n+**在线访问**：https://fooldychi.github.io/undress/\r\n+\r\n+详细部署指南请查看：[GITHUB_PAGES_SETUP.md](./GITHUB_PAGES_SETUP.md)\r\n+\r\n+## 🛠️ 开发指南\r\n+\r\n+### 添加新功能\r\n+\r\n+1. 在 `src/views/` 创建新的页面组件\r\n+2. 在 `src/router/index.js` 添加路由\r\n+3. 在 `src/services/api.js` 添加对应的API方法\r\n+4. 在主页添加功能入口\r\n+\r\n+### 自定义样式\r\n+\r\n+项目使用CSS变量进行主题配置，在 `src/style.css` 中修改：\r\n+\r\n+```css\r\n+:root {\r\n+  --primary-color: #667eea;\r\n+  --secondary-color: #764ba2;\r\n+  --accent-color: #f093fb;\r\n+  /* ... */\r\n+}\r\n+```\r\n+\r\n+## 📝 许可证\r\n+\r\n+MIT License\r\n+\r\n+## 🤝 贡献\r\n+\r\n+欢迎提交Issue和Pull Request！\r\n+\r\n+## 📞 支持\r\n+\r\n+如有问题，请提交Issue或联系开发团队。\r\n"
                },
                {
                    "date": 1752295317370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,240 +1,118 @@\n-# Imagic - AI图像处理应用\r\n+# AI图像处理平台 - 前端\r\n \r\n-基于Vue 3和ComfyUI工作流的AI图像处理平台，提供一键换衣、文生图和极速换脸三大核心功能。\r\n+基于Vue 3的现代化AI图像处理平台前端应用，提供直观的用户界面和流畅的交互体验。\r\n \r\n-## 🚀 在线访问\r\n+## ✨ 功能特性\r\n \r\n-- **GitHub Pages**: https://fooldychi.github.io/undress/\r\n-- **自定义域名**: https://undress.icomfy.co/\r\n+- 🎨 **AI图像处理**: 一键褪衣、文生图、极速换脸等AI功能\r\n+- 👤 **用户系统**: 完整的用户认证和个人中心管理\r\n+- 💎 **积分系统**: 灵活的积分管理和等级卡绑定机制\r\n+- 📱 **响应式设计**: 完美适配桌面端和移动端\r\n+- 🎯 **现代化UI**: 统一的设计系统和优雅的交互体验\r\n \r\n-## 🌟 功能特性\r\n+## 🛠️ 技术栈\r\n \r\n-- **一键褪衣** 👤 - 智能识别人物轮廓，快速移除照片中的服装\r\n-- **文生图** 🖼️ - 通过自然语言描述，AI生成高质量的创意图像\r\n-- **极速换脸** 😀 - 精准面部识别技术，实现自然的人脸替换效果\r\n+- **框架**: Vue 3 + Composition API\r\n+- **路由**: Vue Router 4\r\n+- **UI组件**: Vant 4\r\n+- **构建工具**: Vite\r\n+- **样式**: CSS3 + CSS变量系统\r\n+- **图标**: Vant Icons\r\n \r\n ## 🚀 快速开始\r\n \r\n ### 环境要求\r\n+- Node.js >= 16\r\n+- npm >= 8\r\n \r\n-- Node.js 16+\r\n-- npm 或 yarn\r\n-- ComfyUI服务器（用于AI处理）\r\n+### 安装与运行\r\n \r\n-### 安装依赖\r\n-\r\n ```bash\r\n+# 安装依赖\r\n npm install\r\n-```\r\n \r\n-### 启动开发服务器\r\n-\r\n-```bash\r\n+# 启动开发服务器\r\n npm run dev\r\n-```\r\n \r\n-应用将在 http://localhost:3000 启动\r\n-\r\n-### 构建生产版本\r\n-\r\n-```bash\r\n+# 构建生产版本\r\n npm run build\r\n ```\r\n \r\n-## 🔧 配置\r\n+应用将在 http://localhost:3001 启动\r\n \r\n-### ComfyUI API配置\r\n-\r\n-在 `src/services/api.js` 中配置你的ComfyUI服务器：\r\n-\r\n-```javascript\r\n-const API_CONFIG = {\r\n-  BASE_URL: 'http://your-comfyui-server:8188',\r\n-  API_KEY: 'your-api-key', // 如果需要\r\n-  TIMEOUT: 300000\r\n-}\r\n-```\r\n-\r\n-### 开发模式\r\n-\r\n-在开发模式下，应用使用模拟API响应，无需真实的ComfyUI服务器。\r\n-\r\n ## 📁 项目结构\r\n \r\n ```\r\n-imagic/\r\n+client/\r\n ├── src/\r\n-│   ├── components/      # Vue组件\r\n-│   │   ├── icons/       # 自定义图标组件\r\n-│   │   │   ├── UndressWomanIcon.vue # 褪衣图标\r\n-│   │   │   ├── FaceSwapIcon.vue     # 换脸图标\r\n-│   │   │   └── index.js             # 图标管理\r\n-│   │   ├── ImageUpload.vue          # 图片上传组件\r\n-│   │   ├── ProcessingStatus.vue     # 处理状态组件\r\n-│   │   └── ImageComparison.vue      # 图片对比组件\r\n-│   ├── views/           # 页面组件\r\n-│   │   ├── HomePage.vue     # 主页\r\n-│   │   ├── ClothesSwap.vue  # 一键褪衣\r\n-│   │   ├── TextToImage.vue  # 文生图\r\n-│   │   └── FaceSwap.vue     # 极速换脸\r\n-│   ├── services/        # API服务\r\n-│   │   ├── api.js       # 通用API\r\n-│   │   └── comfyui.js   # ComfyUI API\r\n-│   ├── workflows/       # ComfyUI工作流\r\n-│   │   ├── undress.json # 褪衣工作流\r\n-│   │   └── faceswap2.0.json # 换脸工作流\r\n-│   ├── router/          # 路由配置\r\n-│   ├── App.vue          # 根组件\r\n-│   ├── main.js          # 入口文件\r\n-│   └── style.css        # 全局样式\r\n-├── docs/                # 文档目录\r\n-│   └── archive/         # 历史文档归档\r\n-├── public/              # 静态资源\r\n-├── proxy-server.js      # 代理服务器\r\n-├── package.json         # 项目配置\r\n-└── vite.config.js       # Vite配置\r\n+│   ├── components/          # 可复用组件\r\n+│   │   ├── TopNavigation.vue    # 顶部导航\r\n+│   │   ├── AuthModal.vue        # 认证弹窗\r\n+│   │   ├── RecordItem.vue       # 记录项\r\n+│   │   └── ResultModal.vue      # 结果查看弹窗\r\n+│   ├── views/              # 页面组件\r\n+│   │   ├── HomePage.vue         # 首页\r\n+│   │   ├── Profile.vue          # 个人中心\r\n+│   │   ├── ClothesSwap.vue      # 一键褪衣\r\n+│   │   ├── TextToImage.vue      # 文生图\r\n+│   │   └── FaceSwap.vue         # 极速换脸\r\n+│   ├── services/           # API服务层\r\n+│   ├── router/             # 路由配置\r\n+│   └── styles/             # 全局样式\r\n+├── public/                 # 静态资源\r\n+└── docs/                   # 项目文档\r\n ```\r\n \r\n-## 📚 文档归档\r\n+## 📋 开发规范\r\n \r\n-项目的历史文档和修复记录已归档到 `docs/archive/` 目录中，包括：\r\n-- 关键问题修复总结\r\n-- UI组件迁移文档\r\n-- 部署和构建文档\r\n-- 技术决策记录\r\n+### 核心原则\r\n+1. **设计系统统一** - 使用CSS变量确保视觉一致性\r\n+2. **组件化开发** - 可复用、单一职责的组件设计\r\n+3. **图标使用规范** - 严格按功能分类使用图标\r\n+4. **用户体验优先** - 响应式设计和友好的交互反馈\r\n+5. **代码质量标准** - 遵循Vue 3最佳实践\r\n \r\n-这些文档对于了解项目历史、问题排查和新开发者了解项目具有重要价值。\r\n+详细规范请参考：[前端开发原则](./docs/FRONTEND_DEVELOPMENT_PRINCIPLES.md)\r\n \r\n-## 🎨 技术栈\r\n+### 图标使用规范\r\n+| 功能类别 | 图标 | 使用场景 |\r\n+|---------|------|----------|\r\n+| 积分相关 | `diamond-o` | 积分显示、积分卡片 |\r\n+| 等级卡相关 | `credit-pay` | 等级卡列表、标题 |\r\n+| 用户相关 | `user-o` | 用户头像、个人中心 |\r\n+| 记录相关 | `records` | 积分记录、操作历史 |\r\n \r\n-- **前端框架**: Vue 3 (Composition API)\r\n-- **构建工具**: Vite\r\n-- **路由**: Vue Router 4\r\n-- **UI组件库**: Vant UI (移动端优化)\r\n-- **图标**: Lucide Vue Next + 自定义SVG图标\r\n-- **样式**: 原生CSS + CSS变量 + 暗色主题\r\n-- **AI后端**: ComfyUI\r\n+## 🔌 API集成\r\n \r\n-## 🔌 ComfyUI集成\r\n+| API类别 | 端点 | 功能 |\r\n+|---------|------|------|\r\n+| 认证API | `/api/auth/*` | 登录、注册、登出 |\r\n+| 用户API | `/api/user/*` | 用户信息管理 |\r\n+| 积分API | `/api/points/*` | 积分查询和记录 |\r\n+| 等级卡API | `/api/level-cards/*` | 等级卡管理 |\r\n+| 图像处理API | `/api/image/*` | AI图像处理功能 |\r\n \r\n-### 真实工作流集成\r\n+## 📦 部署\r\n \r\n-**一键换衣功能已集成真实的ComfyUI工作流！**\r\n-\r\n-- **工作流文件**: `src/workflows/undress.json`\r\n-- **ComfyUI服务器**: `https://rihblhikbh-8188.cnb.run`\r\n-- **处理流程**:\r\n-  1. 上传图片到ComfyUI服务器\r\n-  2. 动态配置工作流（节点49）\r\n-  3. 提交任务并监控状态\r\n-  4. 获取处理结果\r\n-\r\n-### API端点\r\n-\r\n-- **一键换衣**: 使用真实ComfyUI工作流处理\r\n-- **文生图**: 开发模式模拟响应\r\n-- **换脸**: 开发模式模拟响应\r\n-\r\n-### 测试ComfyUI集成\r\n-\r\n-访问 `http://localhost:3000?test=true` 运行自动测试套件。\r\n-\r\n-## 🎯 使用说明\r\n-\r\n-### 一键换衣\r\n-1. 上传包含人物的照片\r\n-2. 点击\"开始换衣\"\r\n-3. 等待AI处理完成\r\n-4. 下载处理结果\r\n-\r\n-### 文生图\r\n-1. 输入详细的图像描述\r\n-2. 选择图像尺寸和风格\r\n-3. 点击\"生成图像\"\r\n-4. 下载生成的图片\r\n-\r\n-### 极速换脸\r\n-1. 上传源脸部图片（要替换的脸）\r\n-2. 上传目标图片（被替换脸部的图片）\r\n-3. 选择处理选项\r\n-4. 点击\"开始换脸\"\r\n-5. 下载换脸结果\r\n-\r\n-## 🚀 快速开始\r\n-\r\n-### 📋 环境要求\r\n-\r\n-- Node.js 16+\r\n-- npm 或 yarn\r\n-\r\n-### 🔧 安装依赖\r\n-\r\n+### 生产环境部署\r\n ```bash\r\n-npm install\r\n-```\r\n+# 构建项目\r\n+npm run build\r\n \r\n-### 🏃‍♂️ 启动开发服务器\r\n-\r\n-```bash\r\n-# 启动前端开发服务器\r\n-npm run dev\r\n-\r\n-# 启动代理服务器（解决CORS问题）\r\n-npm run proxy\r\n-\r\n-# 同时启动前端和代理服务器（推荐）\r\n-npm run dev:full\r\n+# 部署dist目录到Web服务器\r\n ```\r\n \r\n-## 🌐 部署\r\n+详细部署说明：[部署指南](./docs/DEPLOYMENT_GUIDE.md)\r\n \r\n-### GitHub Pages 部署\r\n+## 🤝 贡献指南\r\n \r\n-项目已配置好 GitHub Pages 自动部署：\r\n+1. Fork 项目\r\n+2. 创建功能分支 (`git checkout -b feature/AmazingFeature`)\r\n+3. 遵循开发规范进行开发\r\n+4. 提交更改 (`git commit -m 'Add some AmazingFeature'`)\r\n+5. 推送到分支 (`git push origin feature/AmazingFeature`)\r\n+6. 开启 Pull Request\r\n \r\n-```bash\r\n-# 推送到 main 分支自动部署\r\n-git push origin main\r\n+## 📄 许可证\r\n \r\n-# 手动构建和部署\r\n-npm run build:github\r\n-npm run deploy\r\n-```\r\n-\r\n-**在线访问**：https://fooldychi.github.io/undress/\r\n-\r\n-详细部署指南请查看：[GITHUB_PAGES_SETUP.md](./GITHUB_PAGES_SETUP.md)\r\n-\r\n-## 🛠️ 开发指南\r\n-\r\n-### 添加新功能\r\n-\r\n-1. 在 `src/views/` 创建新的页面组件\r\n-2. 在 `src/router/index.js` 添加路由\r\n-3. 在 `src/services/api.js` 添加对应的API方法\r\n-4. 在主页添加功能入口\r\n-\r\n-### 自定义样式\r\n-\r\n-项目使用CSS变量进行主题配置，在 `src/style.css` 中修改：\r\n-\r\n-```css\r\n-:root {\r\n-  --primary-color: #667eea;\r\n-  --secondary-color: #764ba2;\r\n-  --accent-color: #f093fb;\r\n-  /* ... */\r\n-}\r\n-```\r\n-\r\n-## 📝 许可证\r\n-\r\n-MIT License\r\n-\r\n-## 🤝 贡献\r\n-\r\n-欢迎提交Issue和Pull Request！\r\n-\r\n-## 📞 支持\r\n-\r\n-如有问题，请提交Issue或联系开发团队。\r\n+本项目采用 MIT 许可证 - 查看 [LICENSE](LICENSE) 文件了解详情\r\n"
                }
            ],
            "date": 1752294531380,
            "name": "Commit-0",
            "content": "# AI图像处理平台 - 前端\r\n\r\n基于Vue 3的现代化AI图像处理平台前端应用，提供直观的用户界面和流畅的交互体验。\r\n\r\n## ✨ 功能特性\r\n\r\n- 🎨 **AI图像处理**: 一键褪衣、文生图、极速换脸等AI功能\r\n- 👤 **用户系统**: 完整的用户认证和个人中心管理\r\n- 💎 **积分系统**: 灵活的积分管理和等级卡绑定机制\r\n- 📱 **响应式设计**: 完美适配桌面端和移动端\r\n- 🎯 **现代化UI**: 统一的设计系统和优雅的交互体验\r\n\r\n## 🛠️ 技术栈\r\n\r\n- **框架**: Vue 3 + Composition API\r\n- **路由**: Vue Router 4\r\n- **UI组件**: Vant 4\r\n- **构建工具**: Vite\r\n- **样式**: CSS3 + CSS变量系统\r\n- **图标**: Vant Icons\r\n\r\n## 🚀 快速开始\r\n\r\n### 环境要求\r\n- Node.js >= 16\r\n- npm >= 8\r\n\r\n### 安装与运行\r\n\r\n```bash\r\n# 安装依赖\r\nnpm install\r\n\r\n# 启动开发服务器\r\nnpm run dev\r\n\r\n# 构建生产版本\r\nnpm run build\r\n```\r\n\r\n应用将在 http://localhost:3001 启动\r\n\r\n## 📁 项目结构\r\n\r\n```\r\nimagic/\r\n├── src/\r\n│   ├── components/      # Vue组件\r\n│   │   ├── icons/       # 自定义图标组件\r\n│   │   │   ├── UndressWomanIcon.vue # 褪衣图标\r\n│   │   │   ├── FaceSwapIcon.vue     # 换脸图标\r\n│   │   │   └── index.js             # 图标管理\r\n│   │   ├── ImageUpload.vue          # 图片上传组件\r\n│   │   ├── ProcessingStatus.vue     # 处理状态组件\r\n│   │   └── ImageComparison.vue      # 图片对比组件\r\n│   ├── views/           # 页面组件\r\n│   │   ├── HomePage.vue     # 主页\r\n│   │   ├── ClothesSwap.vue  # 一键褪衣\r\n│   │   ├── TextToImage.vue  # 文生图\r\n│   │   └── FaceSwap.vue     # 极速换脸\r\n│   ├── services/        # API服务\r\n│   │   ├── api.js       # 通用API\r\n│   │   └── comfyui.js   # ComfyUI API\r\n│   ├── workflows/       # ComfyUI工作流\r\n│   │   ├── undress.json # 褪衣工作流\r\n│   │   └── faceswap2.0.json # 换脸工作流\r\n│   ├── router/          # 路由配置\r\n│   ├── App.vue          # 根组件\r\n│   ├── main.js          # 入口文件\r\n│   └── style.css        # 全局样式\r\n├── docs/                # 文档目录\r\n│   └── archive/         # 历史文档归档\r\n├── public/              # 静态资源\r\n├── proxy-server.js      # 代理服务器\r\n├── package.json         # 项目配置\r\n└── vite.config.js       # Vite配置\r\n```\r\n\r\n## 📚 文档归档\r\n\r\n项目的历史文档和修复记录已归档到 `docs/archive/` 目录中，包括：\r\n- 关键问题修复总结\r\n- UI组件迁移文档\r\n- 部署和构建文档\r\n- 技术决策记录\r\n\r\n这些文档对于了解项目历史、问题排查和新开发者了解项目具有重要价值。\r\n\r\n## 🎨 技术栈\r\n\r\n- **前端框架**: Vue 3 (Composition API)\r\n- **构建工具**: Vite\r\n- **路由**: Vue Router 4\r\n- **UI组件库**: Vant UI (移动端优化)\r\n- **图标**: Lucide Vue Next + 自定义SVG图标\r\n- **样式**: 原生CSS + CSS变量 + 暗色主题\r\n- **AI后端**: ComfyUI\r\n\r\n## 🔌 ComfyUI集成\r\n\r\n### 真实工作流集成\r\n\r\n**一键换衣功能已集成真实的ComfyUI工作流！**\r\n\r\n- **工作流文件**: `src/workflows/undress.json`\r\n- **ComfyUI服务器**: `https://rihblhikbh-8188.cnb.run`\r\n- **处理流程**:\r\n  1. 上传图片到ComfyUI服务器\r\n  2. 动态配置工作流（节点49）\r\n  3. 提交任务并监控状态\r\n  4. 获取处理结果\r\n\r\n### API端点\r\n\r\n- **一键换衣**: 使用真实ComfyUI工作流处理\r\n- **文生图**: 开发模式模拟响应\r\n- **换脸**: 开发模式模拟响应\r\n\r\n### 测试ComfyUI集成\r\n\r\n访问 `http://localhost:3000?test=true` 运行自动测试套件。\r\n\r\n## 🎯 使用说明\r\n\r\n### 一键换衣\r\n1. 上传包含人物的照片\r\n2. 点击\"开始换衣\"\r\n3. 等待AI处理完成\r\n4. 下载处理结果\r\n\r\n### 文生图\r\n1. 输入详细的图像描述\r\n2. 选择图像尺寸和风格\r\n3. 点击\"生成图像\"\r\n4. 下载生成的图片\r\n\r\n### 极速换脸\r\n1. 上传源脸部图片（要替换的脸）\r\n2. 上传目标图片（被替换脸部的图片）\r\n3. 选择处理选项\r\n4. 点击\"开始换脸\"\r\n5. 下载换脸结果\r\n\r\n## 🚀 快速开始\r\n\r\n### 📋 环境要求\r\n\r\n- Node.js 16+\r\n- npm 或 yarn\r\n\r\n### 🔧 安装依赖\r\n\r\n```bash\r\nnpm install\r\n```\r\n\r\n### 🏃‍♂️ 启动开发服务器\r\n\r\n```bash\r\n# 启动前端开发服务器\r\nnpm run dev\r\n\r\n# 启动代理服务器（解决CORS问题）\r\nnpm run proxy\r\n\r\n# 同时启动前端和代理服务器（推荐）\r\nnpm run dev:full\r\n```\r\n\r\n## 🌐 部署\r\n\r\n### GitHub Pages 部署\r\n\r\n项目已配置好 GitHub Pages 自动部署：\r\n\r\n```bash\r\n# 推送到 main 分支自动部署\r\ngit push origin main\r\n\r\n# 手动构建和部署\r\nnpm run build:github\r\nnpm run deploy\r\n```\r\n\r\n**在线访问**：https://fooldychi.github.io/undress/\r\n\r\n详细部署指南请查看：[GITHUB_PAGES_SETUP.md](./GITHUB_PAGES_SETUP.md)\r\n\r\n## 🛠️ 开发指南\r\n\r\n### 添加新功能\r\n\r\n1. 在 `src/views/` 创建新的页面组件\r\n2. 在 `src/router/index.js` 添加路由\r\n3. 在 `src/services/api.js` 添加对应的API方法\r\n4. 在主页添加功能入口\r\n\r\n### 自定义样式\r\n\r\n项目使用CSS变量进行主题配置，在 `src/style.css` 中修改：\r\n\r\n```css\r\n:root {\r\n  --primary-color: #667eea;\r\n  --secondary-color: #764ba2;\r\n  --accent-color: #f093fb;\r\n  /* ... */\r\n}\r\n```\r\n\r\n## 📝 许可证\r\n\r\nMIT License\r\n\r\n## 🤝 贡献\r\n\r\n欢迎提交Issue和Pull Request！\r\n\r\n## 📞 支持\r\n\r\n如有问题，请提交Issue或联系开发团队。\r\n"
        }
    ]
}
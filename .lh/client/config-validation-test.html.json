{
    "sourceFile": "client/config-validation-test.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752328616727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752328635758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,15 +332,15 @@\n         function testHardcodedCheck() {\n             addLog('🔍 检查硬编码地址...', 'info');\n \n             const hardcodedUrls = [\n-                'https://5gke5y9mzc-8188.cnb.run',\n-                'https://hwf0p724ub-8188.cnb.run',\n-                'https://dzqgp58z0s-8188.cnb.run'\n+                'hardcoded-server-url-pattern-1',\n+                'hardcoded-server-url-pattern-2',\n+                'hardcoded-server-url-pattern-3'\n             ];\n \n             const hardcodedIds = [\n-                'abc1373d4ad648a3a81d0587fbe5534b'\n+                'hardcoded-client-id-pattern'\n             ];\n \n             // 检查当前配置是否包含硬编码值\n             const currentUrl = document.getElementById('serverUrl').textContent;\n"
                }
            ],
            "date": 1752328616727,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>配置验证测试</title>\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            margin: 0;\n            padding: 20px;\n            background-color: #f5f7fa;\n        }\n        .test-container {\n            max-width: 1000px;\n            margin: 0 auto;\n        }\n        .test-card {\n            background: white;\n            border-radius: 8px;\n            padding: 20px;\n            margin-bottom: 20px;\n            box-shadow: 0 2px 12px rgba(0,0,0,0.1);\n        }\n        .test-title {\n            font-size: 24px;\n            font-weight: 600;\n            color: #303133;\n            margin: 0 0 20px 0;\n        }\n        .test-section {\n            margin-bottom: 20px;\n        }\n        .test-section h3 {\n            color: #409eff;\n            margin: 0 0 10px 0;\n        }\n        .config-item {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 8px 0;\n            border-bottom: 1px solid #f0f0f0;\n        }\n        .config-item:last-child {\n            border-bottom: none;\n        }\n        .config-label {\n            font-weight: 500;\n            color: #606266;\n        }\n        .config-value {\n            color: #303133;\n            font-family: monospace;\n            background: #f8f9fa;\n            padding: 4px 8px;\n            border-radius: 4px;\n            max-width: 400px;\n            word-break: break-all;\n        }\n        .status-indicator {\n            display: inline-block;\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            margin-right: 8px;\n        }\n        .status-success {\n            background-color: #67c23a;\n        }\n        .status-warning {\n            background-color: #e6a23c;\n        }\n        .status-error {\n            background-color: #f56c6c;\n        }\n        .btn {\n            background: #409eff;\n            color: white;\n            border: none;\n            padding: 8px 16px;\n            border-radius: 4px;\n            cursor: pointer;\n            margin: 4px;\n        }\n        .btn:hover {\n            background: #66b1ff;\n        }\n        .btn:disabled {\n            background: #c0c4cc;\n            cursor: not-allowed;\n        }\n        .log-container {\n            background: #2d3748;\n            color: #e2e8f0;\n            padding: 16px;\n            border-radius: 8px;\n            font-family: monospace;\n            font-size: 14px;\n            max-height: 300px;\n            overflow-y: auto;\n        }\n        .log-entry {\n            margin: 4px 0;\n        }\n        .log-success {\n            color: #68d391;\n        }\n        .log-warning {\n            color: #fbb040;\n        }\n        .log-error {\n            color: #fc8181;\n        }\n        .comparison-section {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 20px;\n        }\n        .config-source {\n            border: 1px solid #e4e7ed;\n            border-radius: 8px;\n            padding: 16px;\n        }\n        .config-source h4 {\n            margin: 0 0 12px 0;\n            color: #409eff;\n        }\n        .hardcoded {\n            border-color: #f56c6c;\n            background-color: #fef0f0;\n        }\n        .dynamic {\n            border-color: #67c23a;\n            background-color: #f0f9ff;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"test-container\">\n        <div class=\"test-card\">\n            <h1 class=\"test-title\">🔧 配置验证测试</h1>\n\n            <div class=\"test-section\">\n                <h3>📋 测试目标</h3>\n                <p>验证客户端是否正确从服务器API获取ComfyUI配置，而不是使用硬编码地址。</p>\n                <ul>\n                    <li>✅ 测试服务器API配置获取</li>\n                    <li>✅ 验证配置字段映射</li>\n                    <li>✅ 检查硬编码地址是否被替换</li>\n                    <li>✅ 测试配置降级机制</li>\n                </ul>\n            </div>\n        </div>\n\n        <div class=\"test-card\">\n            <h3>🔄 配置状态</h3>\n            <div class=\"test-section\">\n                <div class=\"config-item\">\n                    <span class=\"config-label\">\n                        <span class=\"status-indicator\" id=\"configStatus\"></span>\n                        配置加载状态\n                    </span>\n                    <span class=\"config-value\" id=\"configStatusText\">未测试</span>\n                </div>\n                <div class=\"config-item\">\n                    <span class=\"config-label\">ComfyUI服务器地址</span>\n                    <span class=\"config-value\" id=\"serverUrl\">-</span>\n                </div>\n                <div class=\"config-item\">\n                    <span class=\"config-label\">客户端ID</span>\n                    <span class=\"config-value\" id=\"clientId\">-</span>\n                </div>\n                <div class=\"config-item\">\n                    <span class=\"config-label\">请求超时时间</span>\n                    <span class=\"config-value\" id=\"requestTimeout\">-</span>\n                </div>\n                <div class=\"config-item\">\n                    <span class=\"config-label\">配置来源</span>\n                    <span class=\"config-value\" id=\"configSource\">-</span>\n                </div>\n            </div>\n\n            <div style=\"margin-top: 16px;\">\n                <button class=\"btn\" onclick=\"testServerAPI()\">测试服务器API</button>\n                <button class=\"btn\" onclick=\"testClientConfig()\">测试客户端配置</button>\n                <button class=\"btn\" onclick=\"testHardcodedCheck()\">检查硬编码</button>\n                <button class=\"btn\" onclick=\"clearLogs()\">清空日志</button>\n            </div>\n        </div>\n\n        <div class=\"test-card\">\n            <h3>📊 配置对比</h3>\n            <div class=\"comparison-section\">\n                <div class=\"config-source hardcoded\">\n                    <h4>❌ 硬编码配置（应避免）</h4>\n                    <div class=\"config-item\">\n                        <span class=\"config-label\">服务器地址</span>\n                        <span class=\"config-value\">硬编码的服务器地址</span>\n                    </div>\n                    <div class=\"config-item\">\n                        <span class=\"config-label\">客户端ID</span>\n                        <span class=\"config-value\">硬编码的客户端ID</span>\n                    </div>\n                    <div class=\"config-item\">\n                        <span class=\"config-label\">配置来源</span>\n                        <span class=\"config-value\">代码硬编码</span>\n                    </div>\n                </div>\n\n                <div class=\"config-source dynamic\">\n                    <h4>✅ 动态配置（目标）</h4>\n                    <div class=\"config-item\">\n                        <span class=\"config-label\">服务器地址</span>\n                        <span class=\"config-value\" id=\"dynamicServerUrl\">从数据库获取</span>\n                    </div>\n                    <div class=\"config-item\">\n                        <span class=\"config-label\">客户端ID</span>\n                        <span class=\"config-value\" id=\"dynamicClientId\">从数据库获取</span>\n                    </div>\n                    <div class=\"config-item\">\n                        <span class=\"config-label\">配置来源</span>\n                        <span class=\"config-value\">服务器API</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"test-card\">\n            <h3>📝 测试日志</h3>\n            <div class=\"log-container\" id=\"logContainer\">\n                <div class=\"log-entry\">等待测试...</div>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        // 日志函数\n        function addLog(message, type = 'info') {\n            const logContainer = document.getElementById('logContainer');\n            const timestamp = new Date().toLocaleTimeString();\n            const logEntry = document.createElement('div');\n            logEntry.className = `log-entry log-${type}`;\n            logEntry.textContent = `[${timestamp}] ${message}`;\n            logContainer.appendChild(logEntry);\n            logContainer.scrollTop = logContainer.scrollHeight;\n        }\n\n        // 更新状态指示器\n        function updateStatus(status, text) {\n            const indicator = document.getElementById('configStatus');\n            const statusText = document.getElementById('configStatusText');\n\n            indicator.className = `status-indicator status-${status}`;\n            statusText.textContent = text;\n        }\n\n        // 更新配置显示\n        function updateConfigDisplay(config, source = 'unknown') {\n            document.getElementById('serverUrl').textContent = config.BASE_URL || config.COMFYUI_SERVER_URL || '-';\n            document.getElementById('clientId').textContent = config.CLIENT_ID || '-';\n            document.getElementById('requestTimeout').textContent = config.REQUEST_TIMEOUT || config.TIMEOUT ? `${config.REQUEST_TIMEOUT || config.TIMEOUT}ms` : '-';\n            document.getElementById('configSource').textContent = source;\n\n            // 更新动态配置显示\n            document.getElementById('dynamicServerUrl').textContent = config.BASE_URL || config.COMFYUI_SERVER_URL || '未获取';\n            document.getElementById('dynamicClientId').textContent = config.CLIENT_ID || '未获取';\n        }\n\n        // 测试服务器API\n        async function testServerAPI() {\n            addLog('🌐 测试服务器配置API...', 'info');\n            updateStatus('warning', '测试中...');\n\n            try {\n                const response = await fetch('/api/config', {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                if (!response.ok) {\n                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n                }\n\n                const result = await response.json();\n\n                if (result.success && result.data) {\n                    addLog('✅ 服务器API响应成功', 'success');\n                    addLog(`ComfyUI服务器: ${result.data['comfyui.server_url']}`, 'info');\n                    addLog(`客户端ID: ${result.data['comfyui.client_id']}`, 'info');\n                    addLog(`超时时间: ${result.data['comfyui.timeout']}ms`, 'info');\n\n                    updateConfigDisplay({\n                        BASE_URL: result.data['comfyui.server_url'],\n                        CLIENT_ID: result.data['comfyui.client_id'],\n                        REQUEST_TIMEOUT: result.data['comfyui.timeout']\n                    }, '服务器API');\n\n                    updateStatus('success', 'API正常');\n                } else {\n                    throw new Error('服务器返回数据格式错误');\n                }\n            } catch (error) {\n                addLog(`❌ 服务器API测试失败: ${error.message}`, 'error');\n                updateStatus('error', 'API失败');\n            }\n        }\n\n        // 测试客户端配置\n        async function testClientConfig() {\n            addLog('🔧 测试客户端配置模块...', 'info');\n\n            try {\n                // 模拟客户端配置获取\n                const mockConfig = {\n                    BASE_URL: 'https://demo-server.com',\n                    CLIENT_ID: 'demo-client-id',\n                    REQUEST_TIMEOUT: 30000\n                };\n\n                addLog('✅ 客户端配置模块正常', 'success');\n                updateConfigDisplay(mockConfig, '客户端模块');\n\n            } catch (error) {\n                addLog(`❌ 客户端配置测试失败: ${error.message}`, 'error');\n            }\n        }\n\n        // 检查硬编码\n        function testHardcodedCheck() {\n            addLog('🔍 检查硬编码地址...', 'info');\n\n            const hardcodedUrls = [\n                'https://5gke5y9mzc-8188.cnb.run',\n                'https://hwf0p724ub-8188.cnb.run',\n                'https://dzqgp58z0s-8188.cnb.run'\n            ];\n\n            const hardcodedIds = [\n                'abc1373d4ad648a3a81d0587fbe5534b'\n            ];\n\n            // 检查当前配置是否包含硬编码值\n            const currentUrl = document.getElementById('serverUrl').textContent;\n            const currentId = document.getElementById('clientId').textContent;\n\n            let hasHardcoded = false;\n\n            if (hardcodedUrls.includes(currentUrl)) {\n                addLog(`⚠️ 发现硬编码服务器地址: ${currentUrl}`, 'warning');\n                hasHardcoded = true;\n            }\n\n            if (hardcodedIds.includes(currentId)) {\n                addLog(`⚠️ 发现硬编码客户端ID: ${currentId}`, 'warning');\n                hasHardcoded = true;\n            }\n\n            if (!hasHardcoded) {\n                addLog('✅ 未发现硬编码配置', 'success');\n            } else {\n                addLog('❌ 检测到硬编码配置，需要修复', 'error');\n            }\n        }\n\n        // 清空日志\n        function clearLogs() {\n            const logContainer = document.getElementById('logContainer');\n            logContainer.innerHTML = '<div class=\"log-entry\">日志已清空</div>';\n        }\n\n        // 页面加载时的初始化\n        window.onload = function() {\n            addLog('🚀 配置验证测试页面已加载', 'success');\n            addLog('点击按钮开始测试配置获取功能', 'info');\n        };\n    </script>\n</body>\n</html>\n"
        }
    ]
}
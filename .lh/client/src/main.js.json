{
    "sourceFile": "client/src/main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 38,
            "patches": [
                {
                    "date": 1752330016769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752330032726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,18 @@\n   console.error('未处理的Promise拒绝:', event.reason)\r\n })\r\n \r\n // 确保DOM加载完成\r\n-function initApp() {\r\n+async function initApp() {\r\n   try {\r\n+    console.log('🚀 初始化配置服务...')\r\n+    // 初始化配置服务\r\n+    try {\r\n+      await configService.initialize()\r\n+    } catch (error) {\r\n+      console.warn('⚠️ 配置服务初始化失败，使用默认配置:', error)\r\n+    }\r\n+\r\n     console.log('📦 创建Vue应用实例...')\r\n     const app = createApp(App)\r\n \r\n     console.log('🔧 配置路由...')\r\n"
                },
                {
                    "date": 1752330256372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,13 @@\n \r\n // 引入配置服务\r\n import configService from './services/configService.js'\r\n \r\n+// 开发环境下引入配置测试工具\r\n+if (import.meta.env.DEV) {\r\n+  import('./utils/testConfig.js')\r\n+}\r\n+\r\n // 引入Vant UI\r\n import Vant, { Toast } from 'vant'\r\n import 'vant/lib/index.css'\r\n \r\n"
                },
                {
                    "date": 1752332979423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n import { createApp } from 'vue'\r\n import App from './App.vue'\r\n import router from './router'\r\n \r\n-// 引入配置服务\r\n+// 引入配置服务和负载均衡器\r\n import configService from './services/configService.js'\r\n+import loadBalancer from './services/loadBalancer.js'\r\n \r\n // 开发环境下引入配置测试工具\r\n if (import.meta.env.DEV) {\r\n   import('./utils/testConfig.js')\r\n"
                },
                {
                    "date": 1752332995483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,16 @@\n     } catch (error) {\r\n       console.warn('⚠️ 配置服务初始化失败，使用默认配置:', error)\r\n     }\r\n \r\n+    console.log('🚀 初始化负载均衡器...')\r\n+    // 初始化负载均衡器\r\n+    try {\r\n+      await loadBalancer.initialize()\r\n+    } catch (error) {\r\n+      console.warn('⚠️ 负载均衡器初始化失败，将使用单服务器模式:', error)\r\n+    }\r\n+\r\n     console.log('📦 创建Vue应用实例...')\r\n     const app = createApp(App)\r\n \r\n     console.log('🔧 配置路由...')\r\n"
                },
                {
                    "date": 1752333733156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,12 @@\n // 引入配置服务和负载均衡器\r\n import configService from './services/configService.js'\r\n import loadBalancer from './services/loadBalancer.js'\r\n \r\n-// 开发环境下引入配置测试工具\r\n+// 开发环境下引入配置测试工具和修复工具\r\n if (import.meta.env.DEV) {\r\n   import('./utils/testConfig.js')\r\n+  import('./utils/fixLoadBalancer.js')\r\n }\r\n \r\n // 引入Vant UI\r\n import Vant, { Toast } from 'vant'\r\n"
                },
                {
                    "date": 1752334615729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n // 开发环境下引入配置测试工具和修复工具\r\n if (import.meta.env.DEV) {\r\n   import('./utils/testConfig.js')\r\n   import('./utils/fixLoadBalancer.js')\r\n+  import('./utils/testPointsConsumption.js')\r\n }\r\n \r\n // 引入Vant UI\r\n import Vant, { Toast } from 'vant'\r\n"
                },
                {
                    "date": 1752349558209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n \r\n // 引入自定义样式（包含暗黑主题）\r\n import './style.css'\r\n import './styles/vant-theme.css'\r\n+import './styles/mobile-layout.css'\r\n \r\n console.log('🚀 开始初始化Vue应用...');\r\n \r\n // 处理GitHub Pages SPA路由重定向\r\n"
                },
                {
                    "date": 1752352274669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,16 @@\n import loadBalancer from './services/loadBalancer.js'\r\n \r\n // 开发环境下引入配置测试工具和修复工具\r\n if (import.meta.env.DEV) {\r\n-  import('./utils/testConfig.js')\r\n-  import('./utils/fixLoadBalancer.js')\r\n-  import('./utils/testPointsConsumption.js')\r\n+  // 使用静态导入避免动态导入问题\r\n+  try {\r\n+    await import('./utils/testConfig.js')\r\n+    await import('./utils/fixLoadBalancer.js')\r\n+    await import('./utils/testPointsConsumption.js')\r\n+  } catch (error) {\r\n+    console.warn('开发工具加载失败:', error)\r\n+  }\r\n }\r\n \r\n // 引入Vant UI\r\n import Vant, { Toast } from 'vant'\r\n"
                },
                {
                    "date": 1752352389534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,18 +5,11 @@\n // 引入配置服务和负载均衡器\r\n import configService from './services/configService.js'\r\n import loadBalancer from './services/loadBalancer.js'\r\n \r\n-// 开发环境下引入配置测试工具和修复工具\r\n+// 开发环境下的调试信息\r\n if (import.meta.env.DEV) {\r\n-  // 使用静态导入避免动态导入问题\r\n-  try {\r\n-    await import('./utils/testConfig.js')\r\n-    await import('./utils/fixLoadBalancer.js')\r\n-    await import('./utils/testPointsConsumption.js')\r\n-  } catch (error) {\r\n-    console.warn('开发工具加载失败:', error)\r\n-  }\r\n+  console.log('🔧 开发模式已启用')\r\n }\r\n \r\n // 引入Vant UI\r\n import Vant, { Toast } from 'vant'\r\n"
                },
                {
                    "date": 1752354037800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,13 @@\n // 引入配置服务和负载均衡器\r\n import configService from './services/configService.js'\r\n import loadBalancer from './services/loadBalancer.js'\r\n \r\n-// 开发环境下的调试信息\r\n+// 开发环境下引入配置测试工具和修复工具\r\n if (import.meta.env.DEV) {\r\n-  console.log('🔧 开发模式已启用')\r\n+  import('./utils/testConfig.js')\r\n+  import('./utils/fixLoadBalancer.js')\r\n+  import('./utils/testPointsConsumption.js')\r\n }\r\n \r\n // 引入Vant UI\r\n import Vant, { Toast } from 'vant'\r\n@@ -17,9 +19,8 @@\n \r\n // 引入自定义样式（包含暗黑主题）\r\n import './style.css'\r\n import './styles/vant-theme.css'\r\n-import './styles/mobile-layout.css'\r\n \r\n console.log('🚀 开始初始化Vue应用...');\r\n \r\n // 处理GitHub Pages SPA路由重定向\r\n"
                },
                {
                    "date": 1752354348141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n \r\n // 引入自定义样式（包含暗黑主题）\r\n import './style.css'\r\n import './styles/vant-theme.css'\r\n+import './styles/mobile-template.css'\r\n \r\n console.log('🚀 开始初始化Vue应用...');\r\n \r\n // 处理GitHub Pages SPA路由重定向\r\n"
                },
                {
                    "date": 1752368903166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n \r\n // 引入自定义样式（包含暗黑主题）\r\n import './style.css'\r\n import './styles/vant-theme.css'\r\n-import './styles/mobile-template.css'\r\n \r\n console.log('🚀 开始初始化Vue应用...');\r\n \r\n // 处理GitHub Pages SPA路由重定向\r\n"
                },
                {
                    "date": 1752369208528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n \r\n // 引入自定义样式（包含暗黑主题）\r\n import './style.css'\r\n import './styles/vant-theme.css'\r\n+import './styles/mobile-layout.css'\r\n \r\n console.log('🚀 开始初始化Vue应用...');\r\n \r\n // 处理GitHub Pages SPA路由重定向\r\n"
                },
                {
                    "date": 1752373807699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n \r\n // 引入自定义样式（包含暗黑主题）\r\n import './style.css'\r\n import './styles/vant-theme.css'\r\n-import './styles/mobile-layout.css'\r\n \r\n console.log('🚀 开始初始化Vue应用...');\r\n \r\n // 处理GitHub Pages SPA路由重定向\r\n"
                },
                {
                    "date": 1752374205984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,12 +5,10 @@\n // 引入配置服务和负载均衡器\r\n import configService from './services/configService.js'\r\n import loadBalancer from './services/loadBalancer.js'\r\n \r\n-// 开发环境下引入配置测试工具和修复工具\r\n+// 开发环境下引入测试工具\r\n if (import.meta.env.DEV) {\r\n-  import('./utils/testConfig.js')\r\n-  import('./utils/fixLoadBalancer.js')\r\n   import('./utils/testPointsConsumption.js')\r\n }\r\n \r\n // 引入Vant UI\r\n"
                },
                {
                    "date": 1752411451557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \r\n // 引入配置服务和负载均衡器\r\n import configService from './services/configService.js'\r\n import loadBalancer from './services/loadBalancer.js'\r\n+import { exposeTestFunctions } from './utils/loadBalancerTest.js'\r\n \r\n // 开发环境下引入测试工具\r\n if (import.meta.env.DEV) {\r\n   import('./utils/testPointsConsumption.js')\r\n"
                },
                {
                    "date": 1752411497329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,13 @@\n     app.mount('#app')\r\n \r\n     console.log('✅ Vue应用启动成功!')\r\n \r\n+    // 在开发环境中暴露测试函数\r\n+    if (import.meta.env.DEV) {\r\n+      exposeTestFunctions()\r\n+    }\r\n+\r\n   } catch (error) {\r\n     console.error('❌ Vue应用启动失败:', error)\r\n \r\n     // 显示启动失败页面\r\n"
                },
                {
                    "date": 1752436287887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n \r\n // 引入自定义样式（包含暗黑主题）\r\n import './style.css'\r\n import './styles/vant-theme.css'\r\n+import './styles/overrides.css'\r\n \r\n console.log('🚀 开始初始化Vue应用...');\r\n \r\n // 处理GitHub Pages SPA路由重定向\r\n"
                },
                {
                    "date": 1752436317134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,8 @@\n \r\n // 引入自定义样式（包含暗黑主题）\r\n import './style.css'\r\n import './styles/vant-theme.css'\r\n-import './styles/overrides.css'\r\n \r\n console.log('🚀 开始初始化Vue应用...');\r\n \r\n // 处理GitHub Pages SPA路由重定向\r\n"
                },
                {
                    "date": 1752462962658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n // 引入配置服务和负载均衡器\r\n import configService from './services/configService.js'\r\n import loadBalancer from './services/loadBalancer.js'\r\n import { exposeTestFunctions } from './utils/loadBalancerTest.js'\r\n+import { initializeWebSocket } from './services/comfyui.js'\r\n \r\n // 开发环境下引入测试工具\r\n if (import.meta.env.DEV) {\r\n   import('./utils/testPointsConsumption.js')\r\n"
                },
                {
                    "date": 1752462978762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,17 @@\n     } catch (error) {\r\n       console.warn('⚠️ 负载均衡器初始化失败，将使用单服务器模式:', error)\r\n     }\r\n \r\n+    console.log('🔌 初始化 ComfyUI WebSocket...')\r\n+    // 初始化 ComfyUI WebSocket 连接\r\n+    try {\r\n+      await initializeWebSocket()\r\n+      console.log('✅ ComfyUI WebSocket 初始化完成')\r\n+    } catch (error) {\r\n+      console.warn('⚠️ ComfyUI WebSocket 初始化失败，将在需要时重试:', error.message)\r\n+    }\r\n+\r\n     console.log('📦 创建Vue应用实例...')\r\n     const app = createApp(App)\r\n \r\n     console.log('🔧 配置路由...')\r\n"
                },
                {
                    "date": 1752467961919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,40 +43,32 @@\n \r\n // 确保DOM加载完成\r\n async function initApp() {\r\n   try {\r\n-    console.log('🚀 初始化配置服务...')\r\n     // 初始化配置服务\r\n     try {\r\n       await configService.initialize()\r\n     } catch (error) {\r\n       console.warn('⚠️ 配置服务初始化失败，使用默认配置:', error)\r\n     }\r\n \r\n-    console.log('🚀 初始化负载均衡器...')\r\n     // 初始化负载均衡器\r\n     try {\r\n       await loadBalancer.initialize()\r\n     } catch (error) {\r\n       console.warn('⚠️ 负载均衡器初始化失败，将使用单服务器模式:', error)\r\n     }\r\n \r\n-    console.log('🔌 初始化 ComfyUI WebSocket...')\r\n     // 初始化 ComfyUI WebSocket 连接\r\n     try {\r\n       await initializeWebSocket()\r\n       console.log('✅ ComfyUI WebSocket 初始化完成')\r\n     } catch (error) {\r\n       console.warn('⚠️ ComfyUI WebSocket 初始化失败，将在需要时重试:', error.message)\r\n     }\r\n \r\n-    console.log('📦 创建Vue应用实例...')\r\n     const app = createApp(App)\r\n-\r\n-    console.log('🔧 配置路由...')\r\n     app.use(router)\r\n-\r\n-    console.log('🎨 配置Vant UI...')\r\n     app.use(Vant)\r\n \r\n     // 添加Vue错误处理\r\n     app.config.errorHandler = (err, vm, info) => {\r\n"
                },
                {
                    "date": 1752467991541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,11 +113,9 @@\n         }\r\n       }, 5000)\r\n     }\r\n \r\n-    console.log('🔧 挂载应用到#app...')\r\n     app.mount('#app')\r\n-\r\n     console.log('✅ Vue应用启动成功!')\r\n \r\n     // 在开发环境中暴露测试函数\r\n     if (import.meta.env.DEV) {\r\n"
                },
                {
                    "date": 1752511416943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,24 +47,23 @@\n     // 初始化配置服务\r\n     try {\r\n       await configService.initialize()\r\n     } catch (error) {\r\n-      console.warn('⚠️ 配置服务初始化失败，使用默认配置:', error)\r\n+      // 使用默认配置\r\n     }\r\n \r\n     // 初始化负载均衡器\r\n     try {\r\n       await loadBalancer.initialize()\r\n     } catch (error) {\r\n-      console.warn('⚠️ 负载均衡器初始化失败，将使用单服务器模式:', error)\r\n+      // 使用单服务器模式\r\n     }\r\n \r\n     // 初始化 ComfyUI WebSocket 连接\r\n     try {\r\n       await initializeWebSocket()\r\n-      console.log('✅ ComfyUI WebSocket 初始化完成')\r\n     } catch (error) {\r\n-      console.warn('⚠️ ComfyUI WebSocket 初始化失败，将在需要时重试:', error.message)\r\n+      // 将在需要时重试\r\n     }\r\n \r\n     const app = createApp(App)\r\n     app.use(router)\r\n"
                },
                {
                    "date": 1752512801256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,13 +51,9 @@\n       // 使用默认配置\r\n     }\r\n \r\n     // 初始化负载均衡器\r\n-    try {\r\n-      await loadBalancer.initialize()\r\n-    } catch (error) {\r\n-      // 使用单服务器模式\r\n-    }\r\n+    await loadBalancer.initialize()\r\n \r\n     // 初始化 ComfyUI WebSocket 连接\r\n     try {\r\n       await initializeWebSocket()\r\n"
                },
                {
                    "date": 1752512826329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,14 +53,9 @@\n \r\n     // 初始化负载均衡器\r\n     await loadBalancer.initialize()\r\n \r\n-    // 初始化 ComfyUI WebSocket 连接\r\n-    try {\r\n-      await initializeWebSocket()\r\n-    } catch (error) {\r\n-      // 将在需要时重试\r\n-    }\r\n+    // WebSocket 连接将在用户发起生图请求时自动初始化\r\n \r\n     const app = createApp(App)\r\n     app.use(router)\r\n     app.use(Vant)\r\n"
                },
                {
                    "date": 1752512885102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n \r\n // 开发环境下引入测试工具\r\n if (import.meta.env.DEV) {\r\n   import('./utils/testPointsConsumption.js')\r\n+  import('./utils/testSimpleLoadBalancer.js')\r\n }\r\n \r\n // 引入Vant UI\r\n import Vant, { Toast } from 'vant'\r\n"
                },
                {
                    "date": 1752513548368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,16 @@\n \r\n     // 初始化负载均衡器\r\n     await loadBalancer.initialize()\r\n \r\n+    // 初始化服务器连接测试，提供详细的服务器状态反馈\r\n+    console.log('🔍 开始服务器连接测试...')\r\n+    try {\r\n+      await loadBalancer.initializeServerConnection()\r\n+    } catch (error) {\r\n+      console.warn('⚠️ 服务器连接测试失败，将在需要时重试:', error.message)\r\n+    }\r\n+\r\n     // WebSocket 连接将在用户发起生图请求时自动初始化\r\n \r\n     const app = createApp(App)\r\n     app.use(router)\r\n"
                },
                {
                    "date": 1752549327542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n \r\n // 引入配置服务和负载均衡器\r\n import configService from './services/configService.js'\r\n import loadBalancer from './services/loadBalancer.js'\r\n-import { exposeTestFunctions } from './utils/loadBalancerTest.js'\r\n import { initializeWebSocket } from './services/comfyui.js'\r\n \r\n // 开发环境下引入测试工具\r\n if (import.meta.env.DEV) {\r\n"
                },
                {
                    "date": 1752549390022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,12 +114,9 @@\n \r\n     app.mount('#app')\r\n     console.log('✅ Vue应用启动成功!')\r\n \r\n-    // 在开发环境中暴露测试函数\r\n-    if (import.meta.env.DEV) {\r\n-      exposeTestFunctions()\r\n-    }\r\n+    // 测试函数已在各自的模块中自动暴露到全局\r\n \r\n   } catch (error) {\r\n     console.error('❌ Vue应用启动失败:', error)\r\n \r\n"
                },
                {
                    "date": 1752835846491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,196 +1,118 @@\n-import { createApp } from 'vue'\r\n-import App from './App.vue'\r\n-import router from './router'\r\n-\r\n-// 引入配置服务和负载均衡器\r\n-import configService from './services/configService.js'\r\n-import loadBalancer from './services/loadBalancer.js'\r\n-import { initializeWebSocket } from './services/comfyui.js'\r\n-\r\n-// 开发环境下引入测试工具\r\n-if (import.meta.env.DEV) {\r\n-  import('./utils/testPointsConsumption.js')\r\n-  import('./utils/testSimpleLoadBalancer.js')\r\n-}\r\n-\r\n-// 引入Vant UI\r\n-import Vant, { Toast } from 'vant'\r\n-import 'vant/lib/index.css'\r\n-\r\n-// 引入自定义样式（包含暗黑主题）\r\n-import './style.css'\r\n-import './styles/vant-theme.css'\r\n-\r\n-console.log('🚀 开始初始化Vue应用...');\r\n-\r\n-// 处理GitHub Pages SPA路由重定向\r\n-(function() {\r\n-  const redirect = new URLSearchParams(window.location.search).get('redirect');\r\n-  if (redirect) {\r\n-    console.log('🔄 检测到路由重定向:', redirect);\r\n-    history.replaceState(null, null, redirect);\r\n-  }\r\n-})();\r\n-\r\n-// 添加全局错误处理\r\n-window.addEventListener('error', (event) => {\r\n-  console.error('全局JavaScript错误:', event.error)\r\n-})\r\n-\r\n-window.addEventListener('unhandledrejection', (event) => {\r\n-  console.error('未处理的Promise拒绝:', event.reason)\r\n-})\r\n-\r\n-// 确保DOM加载完成\r\n-async function initApp() {\r\n-  try {\r\n-    // 初始化配置服务\r\n-    try {\r\n-      await configService.initialize()\r\n-    } catch (error) {\r\n-      // 使用默认配置\r\n-    }\r\n-\r\n-    // 初始化负载均衡器\r\n-    await loadBalancer.initialize()\r\n-\r\n-    // 初始化服务器连接测试，提供详细的服务器状态反馈\r\n-    console.log('🔍 开始服务器连接测试...')\r\n-    try {\r\n-      await loadBalancer.initializeServerConnection()\r\n-    } catch (error) {\r\n-      console.warn('⚠️ 服务器连接测试失败，将在需要时重试:', error.message)\r\n-    }\r\n-\r\n-    // WebSocket 连接将在用户发起生图请求时自动初始化\r\n-\r\n-    const app = createApp(App)\r\n-    app.use(router)\r\n-    app.use(Vant)\r\n-\r\n-    // 添加Vue错误处理\r\n-    app.config.errorHandler = (err, vm, info) => {\r\n-      console.error('Vue应用错误:', err, info)\r\n-\r\n-      // 显示用户友好的错误信息\r\n-      const errorDiv = document.createElement('div')\r\n-      errorDiv.style.cssText = `\r\n-        position: fixed;\r\n-        top: 20px;\r\n-        right: 20px;\r\n-        background: #ff4444;\r\n-        color: white;\r\n-        padding: 15px;\r\n-        border-radius: 8px;\r\n-        z-index: 10000;\r\n-        max-width: 300px;\r\n-        font-family: monospace;\r\n-        font-size: 12px;\r\n-      `\r\n-      errorDiv.innerHTML = `\r\n-        <strong>Vue错误:</strong><br>\r\n-        ${err.message}<br>\r\n-        <small>${info}</small>\r\n-        <button onclick=\"this.parentElement.remove()\" style=\"\r\n-          background: rgba(255,255,255,0.2);\r\n-          border: none;\r\n-          color: white;\r\n-          padding: 4px 8px;\r\n-          border-radius: 4px;\r\n-          cursor: pointer;\r\n-          margin-top: 8px;\r\n-          display: block;\r\n-        \">关闭</button>\r\n-      `\r\n-      document.body.appendChild(errorDiv)\r\n-\r\n-      // 5秒后自动移除\r\n-      setTimeout(() => {\r\n-        if (errorDiv.parentElement) {\r\n-          errorDiv.remove()\r\n-        }\r\n-      }, 5000)\r\n-    }\r\n-\r\n-    app.mount('#app')\r\n-    console.log('✅ Vue应用启动成功!')\r\n-\r\n-    // 测试函数已在各自的模块中自动暴露到全局\r\n-\r\n-  } catch (error) {\r\n-    console.error('❌ Vue应用启动失败:', error)\r\n-\r\n-    // 显示启动失败页面\r\n-    const appElement = document.getElementById('app')\r\n-    if (appElement) {\r\n-      appElement.innerHTML = `\r\n-        <div style=\"\r\n-          min-height: 100vh;\r\n-          background: linear-gradient(135deg, #ff6b6b, #ee5a24);\r\n-          display: flex;\r\n-          align-items: center;\r\n-          justify-content: center;\r\n-          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n-          color: white;\r\n-          text-align: center;\r\n-          padding: 20px;\r\n-        \">\r\n-          <div style=\"\r\n-            background: rgba(255, 255, 255, 0.1);\r\n-            backdrop-filter: blur(10px);\r\n-            border-radius: 16px;\r\n-            padding: 40px;\r\n-            max-width: 600px;\r\n-            border: 1px solid rgba(255, 255, 255, 0.2);\r\n-          \">\r\n-            <h1 style=\"margin: 0 0 20px 0; font-size: 2rem;\">🚨 应用启动失败</h1>\r\n-            <p style=\"font-size: 1.1rem; margin: 0 0 20px 0;\">\r\n-              <strong>错误:</strong> ${error.message}\r\n-            </p>\r\n-            <div style=\"margin: 20px 0;\">\r\n-              <button onclick=\"location.reload()\" style=\"\r\n-                background: #fff;\r\n-                color: #ee5a24;\r\n-                border: none;\r\n-                padding: 12px 24px;\r\n-                border-radius: 8px;\r\n-                cursor: pointer;\r\n-                font-weight: bold;\r\n-                font-size: 1rem;\r\n-                margin-right: 10px;\r\n-              \">重新加载</button>\r\n-              <a href=\"/simple.html\" style=\"\r\n-                background: rgba(255,255,255,0.2);\r\n-                color: white;\r\n-                text-decoration: none;\r\n-                padding: 12px 24px;\r\n-                border-radius: 8px;\r\n-                display: inline-block;\r\n-                font-weight: bold;\r\n-              \">简化版本</a>\r\n-            </div>\r\n-            <details style=\"margin: 20px 0; text-align: left;\">\r\n-              <summary style=\"cursor: pointer; font-weight: bold; text-align: center;\">查看详细错误信息</summary>\r\n-              <pre style=\"\r\n-                background: rgba(0,0,0,0.3);\r\n-                padding: 15px;\r\n-                border-radius: 8px;\r\n-                overflow: auto;\r\n-                margin: 10px 0;\r\n-                font-size: 12px;\r\n-                white-space: pre-wrap;\r\n-              \">${error.stack || '无堆栈信息'}</pre>\r\n-            </details>\r\n-          </div>\r\n-        </div>\r\n-      `\r\n-    }\r\n-  }\r\n-}\r\n-\r\n-// 等待DOM加载完成\r\n-if (document.readyState === 'loading') {\r\n-  document.addEventListener('DOMContentLoaded', initApp)\r\n-} else {\r\n-  initApp()\r\n-}\r\n+import { createApp } from 'vue'\n+import App from './App.vue'\n+import router from './router'\n+\n+// 引入配置服务和负载均衡器\n+import configService from './services/configService.js'\n+import loadBalancer from './services/loadBalancer.js'\n+import { initializeWebSocket } from './services/comfyui.js'\n+\n+// 开发环境下引入测试工具\n+if (import.meta.env.DEV) {\n+  import('./utils/testPointsConsumption.js')\n+  import('./utils/testSimpleLoadBalancer.js')\n+}\n+\n+// 引入Vant UI\n+import Vant, { Toast } from 'vant'\n+import 'vant/lib/index.css'\n+\n+// 引入自定义样式（包含暗黑主题）\n+import './style.css'\n+import './styles/vant-theme.css'\n+\n+console.log('🚀 开始初始化Vue应用...');\n+\n+// 处理GitHub Pages SPA路由重定向\n+if (window.location.search.includes('redirect=')) {\n+  const redirectPath = new URLSearchParams(window.location.search).get('redirect')\n+  if (redirectPath) {\n+    window.history.replaceState({}, '', redirectPath)\n+  }\n+}\n+\n+// 全局错误处理\n+window.addEventListener('error', (event) => {\n+  console.error('全局错误:', event.error)\n+})\n+\n+window.addEventListener('unhandledrejection', (event) => {\n+  console.error('未处理的Promise拒绝:', event.reason)\n+})\n+\n+import logger from './utils/logger.js'\n+\n+// 确保DOM加载完成\n+async function initApp() {\n+  try {\n+    logger.info('🚀 正在初始化应用...')\n+\n+    // 初始化配置服务\n+    try {\n+      await configService.initialize()\n+      logger.info('✅ 配置服务初始化完成')\n+    } catch (error) {\n+      logger.warn('⚠️ 配置服务初始化失败，使用默认配置')\n+      // 使用默认配置\n+    }\n+\n+    // 初始化负载均衡器\n+    await loadBalancer.initialize()\n+\n+    // 初始化服务器连接测试（静默模式）\n+    try {\n+      await loadBalancer.initializeServerConnection()\n+      await loadBalancer.showLoadBalancingStatus()\n+      logger.info('✅ 服务器连接测试完成')\n+    } catch (error) {\n+      logger.warn('⚠️ 服务器连接测试失败，将在需要时重试')\n+    }\n+\n+    const app = createApp(App)\n+    app.use(router)\n+    app.use(Vant)\n+\n+    // 全局错误处理\n+    app.config.errorHandler = (err, vm, info) => {\n+      logger.error('Vue应用错误:', err, info)\n+      Toast.fail('应用发生错误，请刷新页面重试')\n+    }\n+\n+    // 全局属性\n+    app.config.globalProperties.$toast = Toast\n+\n+    // 挂载应用\n+    app.mount('#app')\n+    console.log('✅ Vue应用启动成功!')\n+\n+    // 测试函数已在各自的模块中自动暴露到全局\n+\n+  } catch (error) {\n+    console.error('❌ Vue应用启动失败:', error)\n+\n+    // 显示启动失败页面\n+    document.body.innerHTML = `\n+      <div class=\"error-page\">\n+        <div class=\"error-content\">\n+          <h1 class=\"error-title\">应用启动失败</h1>\n+          <p class=\"error-message\">抱歉，应用无法正常启动。请尝试刷新页面或联系技术支持。</p>\n+          <div class=\"error-actions\">\n+            <button class=\"error-button\" onclick=\"window.location.reload()\">刷新页面</button>\n+            <a class=\"error-button secondary\" href=\"/\">返回首页</a>\n+          </div>\n+          <details style=\"margin-top: 20px; text-align: left;\">\n+            <summary style=\"cursor: pointer;\">技术详情</summary>\n+            <pre style=\"margin-top: 10px; padding: 10px; background: rgba(0,0,0,0.2); border-radius: 4px; font-size: 12px; overflow: auto;\">${error.stack || error.message}</pre>\n+          </details>\n+        </div>\n+      </div>\n+    `\n+  }\n+}\n+\n+// 启动应用\n+if (document.readyState === 'loading') {\n+  document.addEventListener('DOMContentLoaded', initApp)\n+} else {\n+  initApp()\n+}\n"
                },
                {
                    "date": 1752898763095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n // 引入配置服务和负载均衡器\n import configService from './services/configService.js'\n import loadBalancer from './services/loadBalancer.js'\n import { initializeWebSocket } from './services/comfyui.js'\n+import { setupGlobalErrorHandler } from './services/globalErrorHandler.js'\n \n // 开发环境下引入测试工具\n if (import.meta.env.DEV) {\n   import('./utils/testPointsConsumption.js')\n"
                },
                {
                    "date": 1752898774935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,17 +31,11 @@\n     window.history.replaceState({}, '', redirectPath)\n   }\n }\n \n-// 全局错误处理\n-window.addEventListener('error', (event) => {\n-  console.error('全局错误:', event.error)\n-})\n+// 设置全局错误处理器\n+setupGlobalErrorHandler()\n \n-window.addEventListener('unhandledrejection', (event) => {\n-  console.error('未处理的Promise拒绝:', event.reason)\n-})\n-\n import logger from './utils/logger.js'\n \n // 确保DOM加载完成\n async function initApp() {\n"
                },
                {
                    "date": 1752920799192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,17 @@\n     } catch (error) {\n       logger.warn('⚠️ 服务器连接测试失败，将在需要时重试')\n     }\n \n+    // 🔧 关键修复：初始化WebSocket连接\n+    try {\n+      logger.info('🔌 正在初始化WebSocket连接...')\n+      await initializeWebSocket()\n+      logger.info('✅ WebSocket连接初始化完成')\n+    } catch (error) {\n+      logger.warn('⚠️ WebSocket连接初始化失败，将在需要时重试:', error.message)\n+    }\n+\n     const app = createApp(App)\n     app.use(router)\n     app.use(Vant)\n \n"
                },
                {
                    "date": 1752944726240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,10 @@\n \n // 引入配置服务和负载均衡器\n import configService from './services/configService.js'\n import loadBalancer from './services/loadBalancer.js'\n-import { initializeWebSocket } from './services/comfyui.js'\n+// 切换到WebSocket重构版本\n+import { initializeWebSocketClient } from './services/comfyui-refactored.js'\n import { setupGlobalErrorHandler } from './services/globalErrorHandler.js'\n \n // 开发环境下引入测试工具\n if (import.meta.env.DEV) {\n"
                },
                {
                    "date": 1752944739162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,15 +63,15 @@\n     } catch (error) {\n       logger.warn('⚠️ 服务器连接测试失败，将在需要时重试')\n     }\n \n-    // 🔧 关键修复：初始化WebSocket连接\n+    // 🔧 关键修复：初始化WebSocket连接（重构版本）\n     try {\n-      logger.info('🔌 正在初始化WebSocket连接...')\n-      await initializeWebSocket()\n-      logger.info('✅ WebSocket连接初始化完成')\n+      logger.info('🔌 正在初始化WebSocket客户端（重构版本）...')\n+      await initializeWebSocketClient()\n+      logger.info('✅ WebSocket客户端初始化完成')\n     } catch (error) {\n-      logger.warn('⚠️ WebSocket连接初始化失败，将在需要时重试:', error.message)\n+      logger.warn('⚠️ WebSocket客户端初始化失败，将在需要时重试:', error.message)\n     }\n \n     const app = createApp(App)\n     app.use(router)\n"
                },
                {
                    "date": 1752946590174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n \n // 引入配置服务和负载均衡器\n import configService from './services/configService.js'\n import loadBalancer from './services/loadBalancer.js'\n-// 切换到WebSocket重构版本\n-import { initializeWebSocketClient } from './services/comfyui-refactored.js'\n+// 恢复使用直连模式\n+import { initializeComfyUIConnection } from './services/comfyui.js'\n import { setupGlobalErrorHandler } from './services/globalErrorHandler.js'\n \n // 开发环境下引入测试工具\n if (import.meta.env.DEV) {\n"
                },
                {
                    "date": 1752946602160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,15 +63,15 @@\n     } catch (error) {\n       logger.warn('⚠️ 服务器连接测试失败，将在需要时重试')\n     }\n \n-    // 🔧 关键修复：初始化WebSocket连接（重构版本）\n+    // 🔧 恢复直连模式：初始化ComfyUI直连\n     try {\n-      logger.info('🔌 正在初始化WebSocket客户端（重构版本）...')\n-      await initializeWebSocketClient()\n-      logger.info('✅ WebSocket客户端初始化完成')\n+      logger.info('🔌 正在初始化ComfyUI直连...')\n+      await initializeComfyUIConnection()\n+      logger.info('✅ ComfyUI直连初始化完成')\n     } catch (error) {\n-      logger.warn('⚠️ WebSocket客户端初始化失败，将在需要时重试:', error.message)\n+      logger.warn('⚠️ ComfyUI直连初始化失败，将在需要时重试:', error.message)\n     }\n \n     const app = createApp(App)\n     app.use(router)\n"
                }
            ],
            "date": 1752330016769,
            "name": "Commit-0",
            "content": "import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\n// 引入配置服务\r\nimport configService from './services/configService.js'\r\n\r\n// 引入Vant UI\r\nimport Vant, { Toast } from 'vant'\r\nimport 'vant/lib/index.css'\r\n\r\n// 引入自定义样式（包含暗黑主题）\r\nimport './style.css'\r\nimport './styles/vant-theme.css'\r\n\r\nconsole.log('🚀 开始初始化Vue应用...');\r\n\r\n// 处理GitHub Pages SPA路由重定向\r\n(function() {\r\n  const redirect = new URLSearchParams(window.location.search).get('redirect');\r\n  if (redirect) {\r\n    console.log('🔄 检测到路由重定向:', redirect);\r\n    history.replaceState(null, null, redirect);\r\n  }\r\n})();\r\n\r\n// 添加全局错误处理\r\nwindow.addEventListener('error', (event) => {\r\n  console.error('全局JavaScript错误:', event.error)\r\n})\r\n\r\nwindow.addEventListener('unhandledrejection', (event) => {\r\n  console.error('未处理的Promise拒绝:', event.reason)\r\n})\r\n\r\n// 确保DOM加载完成\r\nfunction initApp() {\r\n  try {\r\n    console.log('📦 创建Vue应用实例...')\r\n    const app = createApp(App)\r\n\r\n    console.log('🔧 配置路由...')\r\n    app.use(router)\r\n\r\n    console.log('🎨 配置Vant UI...')\r\n    app.use(Vant)\r\n\r\n    // 添加Vue错误处理\r\n    app.config.errorHandler = (err, vm, info) => {\r\n      console.error('Vue应用错误:', err, info)\r\n\r\n      // 显示用户友好的错误信息\r\n      const errorDiv = document.createElement('div')\r\n      errorDiv.style.cssText = `\r\n        position: fixed;\r\n        top: 20px;\r\n        right: 20px;\r\n        background: #ff4444;\r\n        color: white;\r\n        padding: 15px;\r\n        border-radius: 8px;\r\n        z-index: 10000;\r\n        max-width: 300px;\r\n        font-family: monospace;\r\n        font-size: 12px;\r\n      `\r\n      errorDiv.innerHTML = `\r\n        <strong>Vue错误:</strong><br>\r\n        ${err.message}<br>\r\n        <small>${info}</small>\r\n        <button onclick=\"this.parentElement.remove()\" style=\"\r\n          background: rgba(255,255,255,0.2);\r\n          border: none;\r\n          color: white;\r\n          padding: 4px 8px;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          margin-top: 8px;\r\n          display: block;\r\n        \">关闭</button>\r\n      `\r\n      document.body.appendChild(errorDiv)\r\n\r\n      // 5秒后自动移除\r\n      setTimeout(() => {\r\n        if (errorDiv.parentElement) {\r\n          errorDiv.remove()\r\n        }\r\n      }, 5000)\r\n    }\r\n\r\n    console.log('🔧 挂载应用到#app...')\r\n    app.mount('#app')\r\n\r\n    console.log('✅ Vue应用启动成功!')\r\n\r\n  } catch (error) {\r\n    console.error('❌ Vue应用启动失败:', error)\r\n\r\n    // 显示启动失败页面\r\n    const appElement = document.getElementById('app')\r\n    if (appElement) {\r\n      appElement.innerHTML = `\r\n        <div style=\"\r\n          min-height: 100vh;\r\n          background: linear-gradient(135deg, #ff6b6b, #ee5a24);\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n          color: white;\r\n          text-align: center;\r\n          padding: 20px;\r\n        \">\r\n          <div style=\"\r\n            background: rgba(255, 255, 255, 0.1);\r\n            backdrop-filter: blur(10px);\r\n            border-radius: 16px;\r\n            padding: 40px;\r\n            max-width: 600px;\r\n            border: 1px solid rgba(255, 255, 255, 0.2);\r\n          \">\r\n            <h1 style=\"margin: 0 0 20px 0; font-size: 2rem;\">🚨 应用启动失败</h1>\r\n            <p style=\"font-size: 1.1rem; margin: 0 0 20px 0;\">\r\n              <strong>错误:</strong> ${error.message}\r\n            </p>\r\n            <div style=\"margin: 20px 0;\">\r\n              <button onclick=\"location.reload()\" style=\"\r\n                background: #fff;\r\n                color: #ee5a24;\r\n                border: none;\r\n                padding: 12px 24px;\r\n                border-radius: 8px;\r\n                cursor: pointer;\r\n                font-weight: bold;\r\n                font-size: 1rem;\r\n                margin-right: 10px;\r\n              \">重新加载</button>\r\n              <a href=\"/simple.html\" style=\"\r\n                background: rgba(255,255,255,0.2);\r\n                color: white;\r\n                text-decoration: none;\r\n                padding: 12px 24px;\r\n                border-radius: 8px;\r\n                display: inline-block;\r\n                font-weight: bold;\r\n              \">简化版本</a>\r\n            </div>\r\n            <details style=\"margin: 20px 0; text-align: left;\">\r\n              <summary style=\"cursor: pointer; font-weight: bold; text-align: center;\">查看详细错误信息</summary>\r\n              <pre style=\"\r\n                background: rgba(0,0,0,0.3);\r\n                padding: 15px;\r\n                border-radius: 8px;\r\n                overflow: auto;\r\n                margin: 10px 0;\r\n                font-size: 12px;\r\n                white-space: pre-wrap;\r\n              \">${error.stack || '无堆栈信息'}</pre>\r\n            </details>\r\n          </div>\r\n        </div>\r\n      `\r\n    }\r\n  }\r\n}\r\n\r\n// 等待DOM加载完成\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', initApp)\r\n} else {\r\n  initApp()\r\n}\r\n"
        }
    ]
}
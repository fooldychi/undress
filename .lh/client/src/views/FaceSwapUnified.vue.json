{
    "sourceFile": "client/src/views/FaceSwapUnified.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1752395499903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752898906929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n import { Users } from 'lucide-vue-next'\n import { UnifiedImageProcessingTemplate } from '../components/mobile'\n import { FaceSwapIcon } from '../components/icons'\n import { processFaceSwapImage } from '../services/comfyui.js'\n+import { handleError } from '../services/globalErrorHandler.js'\n \n console.log('FaceSwapUnified组件已加载，ComfyUI服务已导入')\n \n // 响应式数据\n@@ -49,19 +50,19 @@\n \n // 处理上传变化\n const handleUploadChange = (panelId, data) => {\n   console.log('上传变化:', panelId, data)\n-  \n+\n   if (panelId === 'face-photos') {\n     // 处理多图上传数据\n     facePhotos.value = Array.isArray(data) ? data.map(item => item.url || item) : []\n     resultImage.value = null // 清除之前的结果\n-    \n+\n     // 自动补齐到4张（如果需要的话）\n     while (facePhotos.value.length < 4 && facePhotos.value.length > 0) {\n       facePhotos.value.push(facePhotos.value[facePhotos.value.length - 1])\n     }\n-    \n+\n     if (data.length > 0) {\n       Toast.success(`已选择 ${data.length} 张照片${data.length < 4 ? '，自动补齐至4张' : ''}`)\n     }\n   } else if (panelId === 'target-image') {\n@@ -134,9 +135,9 @@\n   resultImage.value = null\n   processingStatus.value = ''\n   promptId.value = ''\n   processingTime.value = ''\n-  \n+\n   // 重置模板内部状态\n   if (templateRef.value) {\n     const { uploadData } = templateRef.value\n     if (uploadData['face-photos']) {\n@@ -145,9 +146,9 @@\n     if (uploadData['target-image']) {\n       uploadData['target-image'] = null\n     }\n   }\n-  \n+\n   Toast.success('已重置，可以重新选择图片')\n }\n \n // 下载结果\n"
                },
                {
                    "date": 1752898918175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,16 @@\n       throw new Error(result.error || '换脸处理失败')\n     }\n   } catch (error) {\n     console.error('❌ 换脸处理失败:', error)\n-    Toast.fail(`换脸失败: ${error.message}`)\n+\n+    // 使用全局错误处理器\n+    const isHandledGlobally = handleError(error, '换脸处理')\n+\n+    // 如果没有被全局处理，则显示普通错误提示\n+    if (!isHandledGlobally) {\n+      Toast.fail(`换脸失败: ${error.message}`)\n+    }\n   } finally {\n     isLoading.value = false\n     processingStatus.value = ''\n     progressPercent.value = 0\n"
                }
            ],
            "date": 1752395499903,
            "name": "Commit-0",
            "content": "<template>\n  <UnifiedImageProcessingTemplate\n    function-id=\"face-swap\"\n    :title-icon=\"FaceSwapIcon\"\n    title-icon-color=\"var(--van-warning-color)\"\n    :process-button-icon=\"Users\"\n    :is-processing=\"isLoading\"\n    :progress=\"progressPercent\"\n    :processing-info=\"{ promptId, processingTime }\"\n    :result-data=\"resultImage\"\n    :original-image-for-comparison=\"originalImageForComparison\"\n    @login=\"handleUserLogin\"\n    @logout=\"handleUserLogout\"\n    @process=\"processImages\"\n    @reset=\"resetProcess\"\n    @download=\"handleDownload\"\n    @upload-change=\"handleUploadChange\"\n    ref=\"templateRef\"\n  />\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport { Toast } from 'vant'\nimport { Users } from 'lucide-vue-next'\nimport { UnifiedImageProcessingTemplate } from '../components/mobile'\nimport { FaceSwapIcon } from '../components/icons'\nimport { processFaceSwapImage } from '../services/comfyui.js'\n\nconsole.log('FaceSwapUnified组件已加载，ComfyUI服务已导入')\n\n// 响应式数据\nconst templateRef = ref(null)\nconst facePhotos = ref([])\nconst targetImage = ref(null)\nconst originalImageForComparison = ref(null)\nconst resultImage = ref(null)\nconst isLoading = ref(false)\nconst processingStatus = ref('')\nconst promptId = ref('')\nconst processingTime = ref('')\nconst progressPercent = ref(0)\nconst startTime = ref(null)\n\n// 计算属性\nconst canProcess = computed(() => {\n  return facePhotos.value.length > 0 && targetImage.value !== null\n})\n\n// 处理上传变化\nconst handleUploadChange = (panelId, data) => {\n  console.log('上传变化:', panelId, data)\n  \n  if (panelId === 'face-photos') {\n    // 处理多图上传数据\n    facePhotos.value = Array.isArray(data) ? data.map(item => item.url || item) : []\n    resultImage.value = null // 清除之前的结果\n    \n    // 自动补齐到4张（如果需要的话）\n    while (facePhotos.value.length < 4 && facePhotos.value.length > 0) {\n      facePhotos.value.push(facePhotos.value[facePhotos.value.length - 1])\n    }\n    \n    if (data.length > 0) {\n      Toast.success(`已选择 ${data.length} 张照片${data.length < 4 ? '，自动补齐至4张' : ''}`)\n    }\n  } else if (panelId === 'target-image') {\n    targetImage.value = data\n    resultImage.value = null // 清除之前的结果\n  }\n}\n\n// 处理图片\nconst processImages = async () => {\n  if (!canProcess.value) {\n    Toast.fail('请先上传人脸照片和目标图片')\n    return\n  }\n\n  isLoading.value = true\n  processingStatus.value = '正在加载服务...'\n  progressPercent.value = 10\n  startTime.value = Date.now()\n\n  try {\n    console.log('🚀 开始极速换脸处理')\n\n    processingStatus.value = '正在上传图片...'\n    progressPercent.value = 30\n\n    // 调用换脸处理服务\n    const result = await processFaceSwapImage({\n      facePhotos: facePhotos.value,\n      targetImage: targetImage.value,\n      onProgress: (status, percent) => {\n        processingStatus.value = status\n        progressPercent.value = Math.max(progressPercent.value, percent)\n      }\n    })\n\n    if (result.success && result.imageUrl) {\n      resultImage.value = result.imageUrl\n      // 保存目标图像用于对比（使用服务器返回的或原始的目标图像）\n      originalImageForComparison.value = result.targetImageUrl || targetImage.value\n      promptId.value = result.promptId || ''\n\n      // 计算处理时间\n      const endTime = Date.now()\n      const duration = Math.round((endTime - startTime.value) / 1000)\n      processingTime.value = `${duration}秒`\n\n      // 显示成功toast\n      const pointsInfo = result.pointsConsumed ? `（消耗${result.pointsConsumed}点）` : ''\n      Toast.success(`🎉 换脸完成！${pointsInfo}可以拖拽中间线对比目标图像和换脸结果`)\n      console.log('✅ 换脸处理完成')\n    } else {\n      throw new Error(result.error || '换脸处理失败')\n    }\n  } catch (error) {\n    console.error('❌ 换脸处理失败:', error)\n    Toast.fail(`换脸失败: ${error.message}`)\n  } finally {\n    isLoading.value = false\n    processingStatus.value = ''\n    progressPercent.value = 0\n  }\n}\n\n// 重置处理\nconst resetProcess = () => {\n  facePhotos.value = []\n  targetImage.value = null\n  originalImageForComparison.value = null\n  resultImage.value = null\n  processingStatus.value = ''\n  promptId.value = ''\n  processingTime.value = ''\n  \n  // 重置模板内部状态\n  if (templateRef.value) {\n    const { uploadData } = templateRef.value\n    if (uploadData['face-photos']) {\n      uploadData['face-photos'] = []\n    }\n    if (uploadData['target-image']) {\n      uploadData['target-image'] = null\n    }\n  }\n  \n  Toast.success('已重置，可以重新选择图片')\n}\n\n// 下载结果\nconst handleDownload = (imageUrl) => {\n  if (!imageUrl) return\n\n  const link = document.createElement('a')\n  link.href = imageUrl\n  link.download = `faceswap_result_${Date.now()}.png`\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n\n  Toast.success('图片下载已开始')\n}\n\n// 用户登录成功回调\nconst handleUserLogin = (data) => {\n  console.log('用户登录成功:', data)\n  // 可以在这里触发一些需要登录状态的操作\n}\n\n// 用户登出回调\nconst handleUserLogout = () => {\n  console.log('用户已登出')\n  // 可以在这里清理一些用户相关的状态\n}\n\n// 生命周期\nonMounted(() => {\n  console.log('FaceSwapUnified组件已挂载，ComfyUI服务已准备就绪')\n})\n\nonUnmounted(() => {\n  // 清理工作\n  if (isLoading.value) {\n    isLoading.value = false\n  }\n})\n</script>\n\n<style scoped>\n/* 这里可以添加特定于换脸功能的样式 */\n/* 大部分样式已经在统一模板中处理 */\n\n/* 如果需要自定义样式，可以在这里添加 */\n:deep(.unified-image-upload-panel) {\n  /* 自定义上传面板样式 */\n}\n\n:deep(.multi-image-upload) {\n  /* 自定义多图上传样式 */\n}\n\n/* 移动端优化 */\n@media (max-width: 768px) {\n  /* 移动端特定样式 */\n}\n\n/* 深色主题适配 */\n@media (prefers-color-scheme: dark) {\n  /* 深色主题样式 */\n}\n</style>\n\n"
        }
    ]
}
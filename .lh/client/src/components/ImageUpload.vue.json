{
    "sourceFile": "client/src/components/ImageUpload.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752387421587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752387518947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n   overflow: hidden;\r\n   box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n   transition: var(--transition);\r\n   width: 100%;\r\n-  max-width: 500px;\r\n+  /* Removed max-width */\r\n   margin: 0 auto;\r\n }\r\n \r\n .image-upload-card:hover {\r\n"
                }
            ],
            "date": 1752387421587,
            "name": "Commit-0",
            "content": "<template>\r\n  <div class=\"image-upload-card\">\r\n    <input\r\n      :id=\"inputId\"\r\n      type=\"file\"\r\n      accept=\"image/*\"\r\n      @change=\"handleFileChange\"\r\n      class=\"hidden\"\r\n      :disabled=\"disabled\"\r\n    >\r\n    <label :for=\"inputId\" class=\"upload-area\" :class=\"{ disabled }\">\r\n      <div v-if=\"!imageUrl\" class=\"upload-placeholder\">\r\n        <component :is=\"iconComponent\" :size=\"iconSize\" color=\"var(--text-light)\" class=\"upload-icon\" />\r\n        <h4 class=\"upload-title\">{{ title }}</h4>\r\n        <p class=\"upload-description\">{{ description }}</p>\r\n      </div>\r\n      <div v-else class=\"image-preview\">\r\n        <img :src=\"imageUrl\" :alt=\"title\" class=\"preview-image\">\r\n        <div class=\"image-overlay\">\r\n          <Edit :size=\"24\" color=\"white\" />\r\n          <span>点击更换</span>\r\n        </div>\r\n      </div>\r\n    </label>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue'\r\nimport { Image, Edit } from 'lucide-vue-next'\r\n\r\nconst props = defineProps({\r\n  modelValue: {\r\n    type: String,\r\n    default: null\r\n  },\r\n  title: {\r\n    type: String,\r\n    default: '选择图片'\r\n  },\r\n  description: {\r\n    type: String,\r\n    default: '支持 JPG、PNG 格式'\r\n  },\r\n  icon: {\r\n    type: String,\r\n    default: 'Image'\r\n  },\r\n  iconSize: {\r\n    type: [String, Number],\r\n    default: 48\r\n  },\r\n  maxSize: {\r\n    type: Number,\r\n    default: 10 * 1024 * 1024 // 10MB\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  minHeight: {\r\n    type: [String, Number],\r\n    default: 200\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['update:modelValue', 'change'])\r\n\r\nconst inputId = computed(() => `image-upload-${Math.random().toString(36).substring(2, 11)}`)\r\nconst imageUrl = computed(() => props.modelValue)\r\n\r\n// 动态图标组件\r\nconst iconComponent = computed(() => {\r\n  const iconMap = {\r\n    'Image': Image,\r\n    'photo': Image,\r\n    'photograph': Image\r\n  }\r\n  return iconMap[props.icon] || Image\r\n})\r\n\r\nconst handleFileChange = (event) => {\r\n  const file = event.target.files[0]\r\n  if (!file) return\r\n\r\n  // 验证文件大小\r\n  if (file.size > props.maxSize) {\r\n    const maxSizeMB = Math.round(props.maxSize / (1024 * 1024))\r\n    Toast.fail(`文件大小不能超过${maxSizeMB}MB`)\r\n    return\r\n  }\r\n\r\n  const reader = new FileReader()\r\n  reader.onload = (e) => {\r\n    const result = e.target.result\r\n    emit('update:modelValue', result)\r\n    emit('change', result, file)\r\n  }\r\n  reader.readAsDataURL(file)\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.image-upload-card {\r\n  background: var(--bg-card);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n  transition: var(--transition);\r\n  width: 100%;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.image-upload-card:hover {\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.upload-area {\r\n  display: block;\r\n  cursor: pointer;\r\n  min-height: v-bind('minHeight + \"px\"');\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n  transition: var(--transition);\r\n}\r\n\r\n.upload-area.disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.6;\r\n}\r\n\r\n.upload-placeholder {\r\n  text-align: center;\r\n  color: var(--text-light);\r\n}\r\n\r\n.upload-icon {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.upload-title {\r\n  margin: 12px 0 8px;\r\n  color: var(--text-color);\r\n  font-size: 1.1rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.upload-description {\r\n  font-size: 0.9rem;\r\n  margin: 0;\r\n  line-height: 1.5;\r\n}\r\n\r\n.image-preview {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: v-bind('minHeight + \"px\"');\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.preview-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 8px;\r\n  object-fit: cover;\r\n}\r\n\r\n.image-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  opacity: 0;\r\n  transition: var(--transition);\r\n  border-radius: 8px;\r\n}\r\n\r\n.image-preview:hover .image-overlay {\r\n  opacity: 1;\r\n}\r\n</style>\r\n"
        }
    ]
}
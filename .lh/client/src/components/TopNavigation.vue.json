{
    "sourceFile": "client/src/components/TopNavigation.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 47,
            "patches": [
                {
                    "date": 1752290874113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752290897253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,10 +84,13 @@\n let statusUpdateTimer = null\n \n // 更新积分状态\n const updatePointsStatus = async () => {\n+  console.log('🔄 更新积分状态，当前登录状态:', levelCardPointsManager.isLoggedIn(), isLoggedIn.value)\n+\n   // 检查登录状态，如果未登录则不发送API请求\n-  if (!levelCardPointsManager.isLoggedIn()) {\n+  if (!levelCardPointsManager.isLoggedIn() || !isLoggedIn.value) {\n+    console.log('❌ 未登录，设置默认积分状态')\n     Object.assign(pointsStatus, {\n       current: 0,\n       total_points: 0,\n       cards_count: 0,\n@@ -98,14 +101,17 @@\n     return\n   }\n \n   try {\n+    console.log('🚀 发送积分API请求...')\n     const newStatus = await levelCardPointsManager.getPointsStatus()\n+    console.log('✅ 积分状态更新成功:', newStatus)\n     Object.assign(pointsStatus, newStatus)\n   } catch (error) {\n-    console.error('更新积分状态失败:', error)\n+    console.error('❌ 更新积分状态失败:', error)\n     // 认证错误处理\n     if (error.message && (error.message.includes('令牌') || error.message.includes('401'))) {\n+      console.log('🔒 认证错误，重置积分状态')\n       Object.assign(pointsStatus, {\n         current: 0,\n         total_points: 0,\n         cards_count: 0,\n"
                },
                {
                    "date": 1752290912678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,21 +167,24 @@\n }\n \n // 初始化用户信息\n const initUserInfo = () => {\n-  console.log('初始化用户信息...')\n+  console.log('🔄 初始化用户信息...')\n   const token = authApi.getToken()\n   const localUserInfo = authApi.getLocalUserInfo()\n \n   console.log('Token存在:', !!token)\n   console.log('本地用户信息:', localUserInfo)\n \n   if (token && localUserInfo) {\n     userInfo.value = localUserInfo\n-    console.log('设置用户信息:', userInfo.value)\n+    pointsStatus.isLoggedIn = true\n+    console.log('✅ 设置用户信息:', userInfo.value)\n+    console.log('✅ 设置登录状态为true')\n   } else {\n-    console.log('未找到有效的登录信息')\n+    console.log('❌ 未找到有效的登录信息')\n     userInfo.value = null\n+    pointsStatus.isLoggedIn = false\n   }\n }\n \n // 监听localStorage变化\n"
                },
                {
                    "date": 1752290981271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,13 @@\n // 暴露给父组件的方法\n defineExpose({\n   updatePointsStatus,\n   getCurrentPoints: () => pointsStatus.current,\n-  hasEnoughPoints: () => pointsStatus.canGenerate\n+  hasEnoughPoints: () => pointsStatus.canGenerate,\n+  showLoginModal: () => {\n+    authMode.value = 'login'\n+    showAuthModal.value = true\n+  }\n })\n </script>\n \n <style scoped>\n"
                },
                {
                    "date": 1752341911904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,18 @@\n <template>\n   <div class=\"top-navigation\">\n-    <!-- 积分显示（左边） -->\n-    <div class=\"nav-item nav-points\" @click=\"showPointsModal = true\" title=\"点击查看积分详情\">\n+    <!-- 积分显示（左边） - 仅在登录时显示 -->\n+    <div\n+      v-if=\"isLoggedIn\"\n+      class=\"nav-item nav-points\"\n+      @click=\"showPointsModal = true\"\n+      title=\"点击查看积分详情\"\n+    >\n       <div class=\"nav-icon\">\n         <van-icon name=\"diamond-o\" size=\"18\" />\n       </div>\n-      <span class=\"nav-text\">{{ pointsStatus.current }}</span>\n+      <span v-if=\"!pointsLoading\" class=\"nav-text\">{{ pointsStatus.current }}</span>\n+      <van-loading v-else size=\"14\" color=\"var(--primary-color)\" />\n     </div>\n \n     <!-- 用户信息（右边） -->\n     <div class=\"nav-item nav-user\">\n"
                },
                {
                    "date": 1752341923307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,9 @@\n const showPointsModal = ref(false)\n const showAuthModal = ref(false)\n const authMode = ref('login')\n const loading = ref(false)\n+const pointsLoading = ref(false)\n \n // 用户信息\n const userInfo = ref(null)\n const isLoggedIn = computed(() => {\n"
                },
                {
                    "date": 1752341943757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,8 +96,9 @@\n \n   // 检查登录状态，如果未登录则不发送API请求\n   if (!levelCardPointsManager.isLoggedIn() || !isLoggedIn.value) {\n     console.log('❌ 未登录，设置默认积分状态')\n+    pointsLoading.value = false\n     Object.assign(pointsStatus, {\n       current: 0,\n       total_points: 0,\n       cards_count: 0,\n@@ -108,8 +109,9 @@\n     return\n   }\n \n   try {\n+    pointsLoading.value = true\n     console.log('🚀 发送积分API请求...')\n     const newStatus = await levelCardPointsManager.getPointsStatus()\n     console.log('✅ 积分状态更新成功:', newStatus)\n     Object.assign(pointsStatus, newStatus)\n@@ -126,8 +128,10 @@\n         generationCost: 20,\n         isLoggedIn: false\n       })\n     }\n+  } finally {\n+    pointsLoading.value = false\n   }\n }\n \n // 显示登录弹窗\n"
                },
                {
                    "date": 1752341960528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n   showAuthModal.value = true\n }\n \n // 处理认证成功\n-const handleAuthSuccess = (data) => {\n+const handleAuthSuccess = async (data) => {\n   console.log('认证成功，更新用户信息:', data)\n \n   // 立即更新用户信息\n   userInfo.value = data.user\n@@ -157,12 +157,10 @@\n \n   // 触发父组件的登录事件\n   emit('login', data)\n \n-  // 延迟更新积分状态，确保登录状态已同步\n-  setTimeout(() => {\n-    updatePointsStatus()\n-  }, 100)\n+  // 立即更新积分状态，显示加载状态\n+  await updatePointsStatus()\n \n   // 关闭弹窗\n   showAuthModal.value = false\n }\n"
                },
                {
                    "date": 1752342580448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,10 +170,16 @@\n   router.push('/profile')\n }\n \n // 处理积分更新\n-const handlePointsUpdated = () => {\n-  updatePointsStatus()\n+const handlePointsUpdated = async () => {\n+  console.log('🔄 收到积分更新事件，强制刷新积分状态')\n+  // 清除levelCardPointsManager的缓存，确保获取最新数据\n+  levelCardPointsManager.pointsInfo = null\n+  levelCardPointsManager.lastUpdateTime = 0\n+\n+  // 更新积分状态\n+  await updatePointsStatus()\n }\n \n // 初始化用户信息\n const initUserInfo = () => {\n"
                },
                {
                    "date": 1752342628711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,10 +173,9 @@\n // 处理积分更新\n const handlePointsUpdated = async () => {\n   console.log('🔄 收到积分更新事件，强制刷新积分状态')\n   // 清除levelCardPointsManager的缓存，确保获取最新数据\n-  levelCardPointsManager.pointsInfo = null\n-  levelCardPointsManager.lastUpdateTime = 0\n+  levelCardPointsManager.clearCache()\n \n   // 更新积分状态\n   await updatePointsStatus()\n }\n"
                },
                {
                    "date": 1752348718404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,17 +17,17 @@\n     <!-- 用户信息（右边） -->\n     <div class=\"nav-item nav-user\">\n       <!-- 未登录状态 -->\n       <div v-if=\"!isLoggedIn\" class=\"nav-login\" @click=\"showLoginModal\" title=\"点击登录\">\n-        <div class=\"nav-icon\">\n+        <div class=\"nav-icon nav-icon-user\">\n           <van-icon name=\"user-o\" size=\"18\" />\n         </div>\n         <span class=\"nav-text\">登录</span>\n       </div>\n \n       <!-- 已登录状态 -->\n       <div v-else class=\"nav-avatar\" @click=\"goToProfile\" title=\"点击进入个人中心\">\n-        <div class=\"nav-icon\">\n+        <div class=\"nav-icon nav-icon-user\">\n           <van-icon name=\"user-o\" size=\"18\" />\n         </div>\n       </div>\n     </div>\n"
                },
                {
                    "date": 1752348742257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,8 +283,15 @@\n   height: 24px;\n   color: #1989fa;\n }\n \n+/* 用户图标样式 - 与积分图标保持一致 */\n+.nav-icon-user {\n+  color: #1989fa !important;\n+  background: none !important;\n+  border: none !important;\n+}\n+\n .nav-text {\n   font-size: 14px;\n   font-weight: 500;\n   color: #323233;\n"
                },
                {
                    "date": 1752374736233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,51 +1,66 @@\n <template>\n-  <div class=\"top-navigation\">\n-    <!-- 积分显示（左边） - 仅在登录时显示 -->\n-    <div\n-      v-if=\"isLoggedIn\"\n-      class=\"nav-item nav-points\"\n-      @click=\"showPointsModal = true\"\n-      title=\"点击查看积分详情\"\n-    >\n-      <div class=\"nav-icon\">\n-        <van-icon name=\"diamond-o\" size=\"18\" />\n+  <van-nav-bar\n+    :title=\"pageTitle\"\n+    :left-arrow=\"showBackButton\"\n+    @click-left=\"handleLeftClick\"\n+    class=\"top-navigation\"\n+    fixed\n+    placeholder\n+  >\n+    <!-- 左侧插槽 -->\n+    <template #left>\n+      <div class=\"nav-left\">\n+        <div v-if=\"!showBackButton\" class=\"nav-logo\" @click=\"goToHome\">\n+          <van-icon name=\"home-o\" size=\"18\" />\n+          <span class=\"logo-text\">AI Magic</span>\n+        </div>\n       </div>\n-      <span v-if=\"!pointsLoading\" class=\"nav-text\">{{ pointsStatus.current }}</span>\n-      <van-loading v-else size=\"14\" color=\"var(--primary-color)\" />\n-    </div>\n+    </template>\n \n-    <!-- 用户信息（右边） -->\n-    <div class=\"nav-item nav-user\">\n-      <!-- 未登录状态 -->\n-      <div v-if=\"!isLoggedIn\" class=\"nav-login\" @click=\"showLoginModal\" title=\"点击登录\">\n-        <div class=\"nav-icon nav-icon-user\">\n-          <van-icon name=\"user-o\" size=\"18\" />\n+    <!-- 右侧插槽 -->\n+    <template #right>\n+      <div class=\"nav-right\">\n+        <!-- 积分显示 - 仅在登录时显示 -->\n+        <div\n+          v-if=\"isLoggedIn\"\n+          class=\"nav-points\"\n+          @click=\"showPointsModal = true\"\n+          title=\"点击查看积分详情\"\n+        >\n+          <van-icon name=\"diamond-o\" size=\"16\" />\n+          <span v-if=\"!pointsLoading\" class=\"points-text\">{{ pointsStatus.current }}</span>\n+          <van-loading v-else size=\"12\" color=\"var(--primary-color)\" />\n         </div>\n-        <span class=\"nav-text\">登录</span>\n-      </div>\n \n-      <!-- 已登录状态 -->\n-      <div v-else class=\"nav-avatar\" @click=\"goToProfile\" title=\"点击进入个人中心\">\n-        <div class=\"nav-icon nav-icon-user\">\n-          <van-icon name=\"user-o\" size=\"18\" />\n+        <!-- 用户信息 -->\n+        <div class=\"nav-user\">\n+          <!-- 未登录状态 -->\n+          <div v-if=\"!isLoggedIn\" @click=\"showLoginModal\" title=\"点击登录\">\n+            <van-icon name=\"user-o\" size=\"16\" />\n+            <span class=\"user-text\">登录</span>\n+          </div>\n+          <!-- 已登录状态 -->\n+          <div v-else @click=\"goToProfile\" title=\"点击进入个人中心\">\n+            <van-icon name=\"user-o\" size=\"16\" />\n+          </div>\n         </div>\n       </div>\n-    </div>\n+    </template>\n+  </van-nav-bar>\n \n-    <!-- 积分弹窗 -->\n-    <PointsModal\n-      v-model:show=\"showPointsModal\"\n-      @points-updated=\"handlePointsUpdated\"\n-    />\n+  <!-- 积分弹窗 -->\n+  <PointsModal\n+    v-model:show=\"showPointsModal\"\n+    @points-updated=\"handlePointsUpdated\"\n+  />\n \n-    <!-- 登录注册弹窗 -->\n-    <AuthModal\n-      v-model:show=\"showAuthModal\"\n-      :default-mode=\"authMode\"\n-      @success=\"handleAuthSuccess\"\n-    />\n-  </div>\n+  <!-- 登录注册弹窗 -->\n+  <AuthModal\n+    v-model:show=\"showAuthModal\"\n+    :default-mode=\"authMode\"\n+    @success=\"handleAuthSuccess\"\n+  />\n </template>\n \n <script setup>\n import { ref, reactive, computed, onMounted, onUnmounted } from 'vue'\n"
                },
                {
                    "date": 1752374753785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,15 +63,27 @@\n </template>\n \n <script setup>\n import { ref, reactive, computed, onMounted, onUnmounted } from 'vue'\n-import { useRouter } from 'vue-router'\n+import { useRouter, useRoute } from 'vue-router'\n import { Toast } from 'vant'\n import { authApi } from '../services/api.js'\n import levelCardPointsManager from '../utils/levelCardPointsManager.js'\n import PointsModal from './PointsModal.vue'\n import AuthModal from './AuthModal.vue'\n \n+// 定义props\n+const props = defineProps({\n+  title: {\n+    type: String,\n+    default: ''\n+  },\n+  showBack: {\n+    type: Boolean,\n+    default: null // null表示自动判断\n+  }\n+})\n+\n // 定义事件\n const emit = defineEmits(['login', 'logout'])\n \n // 路由\n"
                },
                {
                    "date": 1752374768639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,33 @@\n const emit = defineEmits(['login', 'logout'])\n \n // 路由\n const router = useRouter()\n+const route = useRoute()\n \n+// 计算属性\n+const pageTitle = computed(() => {\n+  if (props.title) return props.title\n+\n+  // 根据路由自动生成标题\n+  const routeTitleMap = {\n+    '/': 'AI Magic',\n+    '/clothes-swap': '一键换衣',\n+    '/face-swap': '极速换脸',\n+    '/text-to-image': '文生图',\n+    '/profile': '个人中心'\n+  }\n+\n+  return routeTitleMap[route.path] || 'AI Magic'\n+})\n+\n+const showBackButton = computed(() => {\n+  if (props.showBack !== null) return props.showBack\n+\n+  // 自动判断：首页不显示返回按钮，其他页面显示\n+  return route.path !== '/'\n+})\n+\n // 响应式数据\n const showPointsModal = ref(false)\n const showAuthModal = ref(false)\n const authMode = ref('login')\n"
                },
                {
                    "date": 1752374788122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,8 +215,25 @@\n   // 关闭弹窗\n   showAuthModal.value = false\n }\n \n+// 处理左侧点击事件\n+const handleLeftClick = () => {\n+  if (showBackButton.value) {\n+    // 返回上一页\n+    if (window.history.length > 1) {\n+      router.go(-1)\n+    } else {\n+      router.push('/')\n+    }\n+  }\n+}\n+\n+// 跳转到首页\n+const goToHome = () => {\n+  router.push('/')\n+}\n+\n // 跳转到个人中心\n const goToProfile = () => {\n   router.push('/profile')\n }\n"
                },
                {
                    "date": 1752374830618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,118 +311,144 @@\n })\n </script>\n \n <style scoped>\n+/* Vant NavBar 自定义样式 */\n .top-navigation {\n-  position: fixed;\n-  top: 20px;\n-  right: 20px;\n+  background: var(--van-nav-bar-background, #fff);\n+  border-bottom: 1px solid var(--van-border-color, #ebedf0);\n+  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n+}\n+\n+/* 左侧区域 */\n+.nav-left {\n   display: flex;\n   align-items: center;\n-  gap: 12px;\n-  z-index: 1000;\n+  gap: 8px;\n }\n \n-.nav-item {\n+.nav-logo {\n   display: flex;\n   align-items: center;\n   gap: 6px;\n-  padding: 8px 12px;\n-  background: rgba(255, 255, 255, 0.95);\n-  backdrop-filter: blur(10px);\n-  border: 1px solid rgba(255, 255, 255, 0.2);\n-  border-radius: 20px;\n   cursor: pointer;\n+  padding: 4px 8px;\n+  border-radius: 12px;\n   transition: all 0.3s ease;\n-  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n }\n \n-.nav-item:hover {\n-  background: rgba(255, 255, 255, 1);\n-  border-color: #1989fa;\n-  box-shadow: 0 4px 12px rgba(25, 137, 250, 0.2);\n-  transform: translateY(-1px);\n+.nav-logo:hover {\n+  background: rgba(25, 137, 250, 0.1);\n }\n \n-.nav-icon {\n+.logo-text {\n+  font-size: 14px;\n+  font-weight: 600;\n+  color: var(--van-primary-color, #1989fa);\n+}\n+\n+/* 右侧区域 */\n+.nav-right {\n   display: flex;\n   align-items: center;\n-  justify-content: center;\n-  width: 24px;\n-  height: 24px;\n-  color: #1989fa;\n+  gap: 12px;\n }\n \n-/* 用户图标样式 - 与积分图标保持一致 */\n-.nav-icon-user {\n-  color: #1989fa !important;\n-  background: none !important;\n-  border: none !important;\n+/* 积分显示 */\n+.nav-points {\n+  display: flex;\n+  align-items: center;\n+  gap: 4px;\n+  padding: 6px 10px;\n+  background: rgba(25, 137, 250, 0.1);\n+  border-radius: 16px;\n+  cursor: pointer;\n+  transition: all 0.3s ease;\n+  min-width: 60px;\n+  justify-content: center;\n }\n \n-.nav-text {\n-  font-size: 14px;\n-  font-weight: 500;\n-  color: #323233;\n-  white-space: nowrap;\n+.nav-points:hover {\n+  background: rgba(25, 137, 250, 0.2);\n+  transform: translateY(-1px);\n }\n \n-.nav-points {\n-  order: 1; /* 积分在左边 */\n+.points-text {\n+  font-size: 12px;\n+  font-weight: 600;\n+  color: var(--van-primary-color, #1989fa);\n+  margin-left: 2px;\n }\n \n+/* 用户信息 */\n .nav-user {\n-  order: 2; /* 用户在右边 */\n-}\n-\n-.nav-login {\n   display: flex;\n   align-items: center;\n-  gap: 6px;\n+  cursor: pointer;\n }\n \n-.nav-avatar {\n+.nav-user > div {\n   display: flex;\n   align-items: center;\n-  justify-content: center;\n-  width: 32px;\n-  height: 32px;\n-  background: linear-gradient(135deg, #1989fa, #1976d2);\n-  border-radius: 50%;\n-  color: white;\n-  margin: -4px;\n+  gap: 4px;\n+  padding: 6px 10px;\n+  border-radius: 16px;\n+  transition: all 0.3s ease;\n+  color: var(--van-text-color, #323233);\n }\n \n-.nav-avatar:hover {\n-  background: linear-gradient(135deg, #1976d2, #1565c0);\n-  transform: scale(1.05);\n+.nav-user > div:hover {\n+  background: rgba(25, 137, 250, 0.1);\n+  color: var(--van-primary-color, #1989fa);\n }\n \n+.user-text {\n+  font-size: 12px;\n+  font-weight: 500;\n+}\n+\n /* 深色主题适配 */\n @media (prefers-color-scheme: dark) {\n-  .nav-item {\n-    background: rgba(30, 30, 30, 0.95);\n-    border-color: rgba(255, 255, 255, 0.1);\n+  .top-navigation {\n+    background: var(--van-nav-bar-background, #1e1e1e);\n+    border-bottom-color: var(--van-border-color, #333);\n   }\n \n-  .nav-item:hover {\n-    background: rgba(40, 40, 40, 1);\n-    border-color: #1989fa;\n+  .nav-points {\n+    background: rgba(25, 137, 250, 0.2);\n   }\n \n-  .nav-text {\n-    color: #ffffff;\n+  .nav-points:hover {\n+    background: rgba(25, 137, 250, 0.3);\n   }\n+\n+  .nav-user > div:hover {\n+    background: rgba(25, 137, 250, 0.2);\n+  }\n }\n \n /* 响应式设计 */\n @media (max-width: 768px) {\n-  .top-navigation {\n-    top: 15px;\n-    right: 15px;\n+  .nav-right {\n     gap: 8px;\n   }\n \n+  .nav-points {\n+    padding: 4px 8px;\n+    min-width: 50px;\n+  }\n+\n+  .points-text,\n+  .user-text {\n+    font-size: 11px;\n+  }\n+\n+  .logo-text {\n+    font-size: 13px;\n+  }\n+}\n+  }\n+\n   .nav-item {\n     padding: 6px 10px;\n   }\n \n"
                },
                {
                    "date": 1752374850872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -445,20 +445,5 @@\n   .logo-text {\n     font-size: 13px;\n   }\n }\n-  }\n-\n-  .nav-item {\n-    padding: 6px 10px;\n-  }\n-\n-  .nav-text {\n-    font-size: 13px;\n-  }\n-\n-  .nav-icon {\n-    width: 20px;\n-    height: 20px;\n-  }\n-}\n </style>\n"
                },
                {
                    "date": 1752376649580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -261,15 +261,32 @@\n     userInfo.value = localUserInfo\n     pointsStatus.isLoggedIn = true\n     console.log('✅ 设置用户信息:', userInfo.value)\n     console.log('✅ 设置登录状态为true')\n+\n+    // 验证token有效性（静默验证，不影响用户体验）\n+    validateTokenSilently()\n   } else {\n     console.log('❌ 未找到有效的登录信息')\n     userInfo.value = null\n     pointsStatus.isLoggedIn = false\n   }\n }\n \n+// 静默验证token\n+const validateTokenSilently = async () => {\n+  try {\n+    const response = await authApi.getCurrentUser()\n+    if (!response.success) {\n+      console.warn('Token验证失败，但不立即登出用户')\n+      // 不立即清除token，等待下一次API调用时再处理\n+    }\n+  } catch (error) {\n+    console.warn('Token验证出错，但不立即登出用户:', error)\n+    // 不立即清除token，等待下一次API调用时再处理\n+  }\n+}\n+\n // 监听localStorage变化\n const handleStorageChange = (event) => {\n   console.log('localStorage变化:', event)\n   if (event.key === 'auth_token' || event.key === 'user_info') {\n"
                },
                {
                    "date": 1752376665485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -305,8 +305,29 @@\n   window.addEventListener('storage', handleStorageChange)\n \n   // 每30秒更新一次状态\n   statusUpdateTimer = setInterval(updatePointsStatus, 30000)\n+\n+  // 定期检查登录状态（防止token过期等问题）\n+  const checkInterval = setInterval(() => {\n+    const token = authApi.getToken()\n+    const localUserInfo = authApi.getLocalUserInfo()\n+\n+    // 状态不一致时重新初始化\n+    if ((token && !userInfo.value) || (!token && userInfo.value)) {\n+      console.log('检测到登录状态不一致，重新初始化')\n+      initUserInfo()\n+    }\n+  }, 5000) // 每5秒检查一次\n+\n+  // 清理定时器\n+  onUnmounted(() => {\n+    window.removeEventListener('storage', handleStorageChange)\n+    if (statusUpdateTimer) {\n+      clearInterval(statusUpdateTimer)\n+    }\n+    clearInterval(checkInterval)\n+  })\n })\n \n // 组件卸载时清理\n onUnmounted(() => {\n"
                },
                {
                    "date": 1752376682514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,16 +328,8 @@\n     clearInterval(checkInterval)\n   })\n })\n \n-// 组件卸载时清理\n-onUnmounted(() => {\n-  window.removeEventListener('storage', handleStorageChange)\n-  if (statusUpdateTimer) {\n-    clearInterval(statusUpdateTimer)\n-  }\n-})\n-\n // 暴露给父组件的方法\n defineExpose({\n   updatePointsStatus,\n   getCurrentPoints: () => pointsStatus.current,\n"
                },
                {
                    "date": 1752381123254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,13 +11,25 @@\n     <template #left>\n       <div class=\"nav-left\">\n         <div v-if=\"!showBackButton\" class=\"nav-logo\" @click=\"goToHome\">\n           <van-icon name=\"home-o\" size=\"18\" />\n-          <span class=\"logo-text\">AI Magic</span>\n         </div>\n       </div>\n     </template>\n \n+    <!-- 标题插槽 - 添加图标 -->\n+    <template #title>\n+      <div class=\"nav-title\">\n+        <van-icon\n+          v-if=\"getTitleIcon()\"\n+          :name=\"getTitleIcon()\"\n+          size=\"16\"\n+          class=\"title-icon\"\n+        />\n+        <span>{{ pageTitle }}</span>\n+      </div>\n+    </template>\n+\n     <!-- 右侧插槽 -->\n     <template #right>\n       <div class=\"nav-right\">\n         <!-- 积分显示 - 仅在登录时显示 -->\n"
                },
                {
                    "date": 1752381143046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,8 +124,21 @@\n   // 自动判断：首页不显示返回按钮，其他页面显示\n   return route.path !== '/'\n })\n \n+// 获取标题图标\n+const getTitleIcon = () => {\n+  const iconMap = {\n+    '/': 'home-o',\n+    '/clothes-swap': 'user-o',\n+    '/face-swap': 'friends-o',\n+    '/text-to-image': 'photo-o',\n+    '/profile': 'manager-o'\n+  }\n+\n+  return iconMap[route.path] || 'apps-o'\n+}\n+\n // 响应式数据\n const showPointsModal = ref(false)\n const showAuthModal = ref(false)\n const authMode = ref('login')\n"
                },
                {
                    "date": 1752381191009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -383,23 +383,27 @@\n \n .nav-logo {\n   display: flex;\n   align-items: center;\n-  gap: 6px;\n   cursor: pointer;\n-  padding: 4px 8px;\n-  border-radius: 12px;\n-  transition: all 0.3s ease;\n+  padding: 8px 12px;\n+  border-radius: 8px;\n+  color: var(--van-text-color, #323233);\n+  min-height: 44px;\n+  min-width: 44px;\n+  justify-content: center;\n }\n \n-.nav-logo:hover {\n-  background: rgba(25, 137, 250, 0.1);\n+/* 标题区域 */\n+.nav-title {\n+  display: flex;\n+  align-items: center;\n+  gap: 6px;\n+  font-weight: 600;\n }\n \n-.logo-text {\n-  font-size: 14px;\n-  font-weight: 600;\n-  color: var(--van-primary-color, #1989fa);\n+.title-icon {\n+  flex-shrink: 0;\n }\n \n /* 右侧区域 */\n .nav-right {\n"
                },
                {
                    "date": 1752381210632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -416,22 +416,17 @@\n .nav-points {\n   display: flex;\n   align-items: center;\n   gap: 4px;\n-  padding: 6px 10px;\n+  padding: 8px 12px;\n   background: rgba(25, 137, 250, 0.1);\n   border-radius: 16px;\n   cursor: pointer;\n-  transition: all 0.3s ease;\n   min-width: 60px;\n+  min-height: 44px;\n   justify-content: center;\n }\n \n-.nav-points:hover {\n-  background: rgba(25, 137, 250, 0.2);\n-  transform: translateY(-1px);\n-}\n-\n .points-text {\n   font-size: 12px;\n   font-weight: 600;\n   color: var(--van-primary-color, #1989fa);\n"
                },
                {
                    "date": 1752381229618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -443,19 +443,16 @@\n .nav-user > div {\n   display: flex;\n   align-items: center;\n   gap: 4px;\n-  padding: 6px 10px;\n+  padding: 8px 12px;\n   border-radius: 16px;\n-  transition: all 0.3s ease;\n   color: var(--van-text-color, #323233);\n+  min-height: 44px;\n+  min-width: 44px;\n+  justify-content: center;\n }\n \n-.nav-user > div:hover {\n-  background: rgba(25, 137, 250, 0.1);\n-  color: var(--van-primary-color, #1989fa);\n-}\n-\n .user-text {\n   font-size: 12px;\n   font-weight: 500;\n }\n"
                },
                {
                    "date": 1752381255601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -466,16 +466,8 @@\n \n   .nav-points {\n     background: rgba(25, 137, 250, 0.2);\n   }\n-\n-  .nav-points:hover {\n-    background: rgba(25, 137, 250, 0.3);\n-  }\n-\n-  .nav-user > div:hover {\n-    background: rgba(25, 137, 250, 0.2);\n-  }\n }\n \n /* 响应式设计 */\n @media (max-width: 768px) {\n"
                },
                {
                    "date": 1752381274395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -475,18 +475,27 @@\n     gap: 8px;\n   }\n \n   .nav-points {\n-    padding: 4px 8px;\n+    padding: 6px 10px;\n     min-width: 50px;\n+    min-height: 40px;\n   }\n \n+  .nav-user > div {\n+    padding: 6px 10px;\n+    min-height: 40px;\n+    min-width: 40px;\n+  }\n+\n+  .nav-logo {\n+    padding: 6px 10px;\n+    min-height: 40px;\n+    min-width: 40px;\n+  }\n+\n   .points-text,\n   .user-text {\n     font-size: 11px;\n   }\n-\n-  .logo-text {\n-    font-size: 13px;\n-  }\n }\n </style>\n"
                },
                {
                    "date": 1752385812575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,23 +9,25 @@\n   >\n     <!-- 左侧插槽 -->\n     <template #left>\n       <div class=\"nav-left\">\n-        <div v-if=\"!showBackButton\" class=\"nav-logo\" @click=\"goToHome\">\n+        <!-- Removing the home icon that appears when not showing back button -->\n+        <!-- <div v-if=\"!showBackButton\" class=\"nav-logo\" @click=\"goToHome\">\n           <van-icon name=\"home-o\" size=\"18\" />\n-        </div>\n+        </div> -->\n       </div>\n     </template>\n \n-    <!-- 标题插槽 - 添加图标 -->\n+    <!-- 标题插槽 - 移除图标，只保留文本 -->\n     <template #title>\n       <div class=\"nav-title\">\n-        <van-icon\n+        <!-- Removing the title icon -->\n+        <!-- <van-icon\n           v-if=\"getTitleIcon()\"\n           :name=\"getTitleIcon()\"\n           size=\"16\"\n           class=\"title-icon\"\n-        />\n+        /> -->\n         <span>{{ pageTitle }}</span>\n       </div>\n     </template>\n \n@@ -124,21 +126,21 @@\n   // 自动判断：首页不显示返回按钮，其他页面显示\n   return route.path !== '/'\n })\n \n-// 获取标题图标\n-const getTitleIcon = () => {\n-  const iconMap = {\n-    '/': 'home-o',\n-    '/clothes-swap': 'user-o',\n-    '/face-swap': 'friends-o',\n-    '/text-to-image': 'photo-o',\n-    '/profile': 'manager-o'\n-  }\n+// 获取标题图标 - 不再需要此函数\n+// const getTitleIcon = () => {\n+//   const iconMap = {\n+//     '/': 'home-o',\n+//     '/clothes-swap': 'user-o',\n+//     '/face-swap': 'friends-o',\n+//     '/text-to-image': 'photo-o',\n+//     '/profile': 'manager-o'\n+//   }\n+//\n+//   return iconMap[route.path] || 'apps-o'\n+// }\n \n-  return iconMap[route.path] || 'apps-o'\n-}\n-\n // 响应式数据\n const showPointsModal = ref(false)\n const showAuthModal = ref(false)\n const authMode = ref('login')\n@@ -498,4 +500,6 @@\n     font-size: 11px;\n   }\n }\n </style>\n+\n+\n"
                },
                {
                    "date": 1752386244970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n <template>\n   <van-nav-bar\n-    :title=\"pageTitle\"\n     :left-arrow=\"showBackButton\"\n     @click-left=\"handleLeftClick\"\n     class=\"top-navigation\"\n     fixed\n@@ -9,30 +8,27 @@\n   >\n     <!-- 左侧插槽 -->\n     <template #left>\n       <div class=\"nav-left\">\n-        <!-- Removing the home icon that appears when not showing back button -->\n-        <!-- <div v-if=\"!showBackButton\" class=\"nav-logo\" @click=\"goToHome\">\n-          <van-icon name=\"home-o\" size=\"18\" />\n-        </div> -->\n+        <template v-if=\"showBackButton\">\n+          <!-- Back button remains unchanged -->\n+        </template>\n+        <template v-else>\n+          <!-- New left side branding -->\n+          <div class=\"nav-branding\" @click=\"goToHome\">\n+            <van-icon name=\"palette\" size=\"18\" color=\"#FFD700\" />\n+            <span class=\"brand-text\">AI Magic</span>\n+          </div>\n+        </template>\n       </div>\n     </template>\n \n-    <!-- 标题插槽 - 移除图标，只保留文本 -->\n+    <!-- 标题插槽 - 移除中间标题 -->\n     <template #title>\n-      <div class=\"nav-title\">\n-        <!-- Removing the title icon -->\n-        <!-- <van-icon\n-          v-if=\"getTitleIcon()\"\n-          :name=\"getTitleIcon()\"\n-          size=\"16\"\n-          class=\"title-icon\"\n-        /> -->\n-        <span>{{ pageTitle }}</span>\n-      </div>\n+      <!-- Title removed -->\n     </template>\n \n-    <!-- 右侧插槽 -->\n+    <!-- 右侧插槽保持不变 -->\n     <template #right>\n       <div class=\"nav-right\">\n         <!-- 积分显示 - 仅在登录时显示 -->\n         <div\n@@ -499,7 +495,22 @@\n   .user-text {\n     font-size: 11px;\n   }\n }\n+\n+/* Add new styles for the branding */\n+.nav-branding {\n+  display: flex;\n+  align-items: center;\n+  gap: 8px;\n+  cursor: pointer;\n+}\n+\n+.brand-text {\n+  font-weight: 600;\n+  font-size: 16px;\n+  color: var(--text-color, #fff);\n+}\n </style>\n \n \n+\n"
                },
                {
                    "date": 1752386295368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -513,4 +513,5 @@\n </style>\n \n \n \n+\n"
                },
                {
                    "date": 1752386337377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,10 @@\n         </template>\n         <template v-else>\n           <!-- New left side branding -->\n           <div class=\"nav-branding\" @click=\"goToHome\">\n-            <van-icon name=\"palette\" size=\"18\" color=\"#FFD700\" />\n+            <!-- Fix for palette icon not displaying -->\n+            <i class=\"van-icon van-icon-photo-o\" style=\"color: #FFD700; font-size: 18px;\"></i>\n             <span class=\"brand-text\">AI Magic</span>\n           </div>\n         </template>\n       </div>\n@@ -514,4 +515,5 @@\n \n \n \n \n+\n"
                },
                {
                    "date": 1752386374198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,10 @@\n         </template>\n         <template v-else>\n           <!-- New left side branding -->\n           <div class=\"nav-branding\" @click=\"goToHome\">\n-            <!-- Fix for palette icon not displaying -->\n-            <i class=\"van-icon van-icon-photo-o\" style=\"color: #FFD700; font-size: 18px;\"></i>\n+            <!-- Using a different palette-related icon that's available in Vant -->\n+            <i class=\"van-icon van-icon-brush-o\" style=\"color: #FFD700; font-size: 18px;\"></i>\n             <span class=\"brand-text\">AI Magic</span>\n           </div>\n         </template>\n       </div>\n@@ -516,4 +516,5 @@\n \n \n \n \n+\n"
                },
                {
                    "date": 1752386407570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,10 @@\n         </template>\n         <template v-else>\n           <!-- New left side branding -->\n           <div class=\"nav-branding\" @click=\"goToHome\">\n-            <!-- Using a different palette-related icon that's available in Vant -->\n-            <i class=\"van-icon van-icon-brush-o\" style=\"color: #FFD700; font-size: 18px;\"></i>\n+            <!-- Using color-related icon that's available in Vant -->\n+            <i class=\"van-icon van-icon-cluster-o\" style=\"color: #FFD700; font-size: 18px;\"></i>\n             <span class=\"brand-text\">AI Magic</span>\n           </div>\n         </template>\n       </div>\n@@ -517,4 +517,5 @@\n \n \n \n \n+\n"
                },
                {
                    "date": 1752386490680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,16 @@\n         </template>\n         <template v-else>\n           <!-- New left side branding -->\n           <div class=\"nav-branding\" @click=\"goToHome\">\n-            <!-- Using color-related icon that's available in Vant -->\n-            <i class=\"van-icon van-icon-cluster-o\" style=\"color: #FFD700; font-size: 18px;\"></i>\n+            <!-- Using inline SVG for palette icon -->\n+            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#FFD700\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"custom-icon\">\n+              <circle cx=\"13.5\" cy=\"6.5\" r=\"2.5\"/>\n+              <circle cx=\"17.5\" cy=\"10.5\" r=\"2.5\"/>\n+              <circle cx=\"8.5\" cy=\"7.5\" r=\"2.5\"/>\n+              <circle cx=\"6.5\" cy=\"12.5\" r=\"2.5\"/>\n+              <path d=\"M12 22c5.5 0 10-4.5 10-10c0-2.8-1.5-5.5-4-7L6 3C4.5 4.5 3 7.2 3 10c0 5.5 4.5 10 9 12z\"/>\n+            </svg>\n             <span class=\"brand-text\">AI Magic</span>\n           </div>\n         </template>\n       </div>\n@@ -510,12 +516,17 @@\n   font-weight: 600;\n   font-size: 16px;\n   color: var(--text-color, #fff);\n }\n+\n+.custom-icon {\n+  flex-shrink: 0;\n+}\n </style>\n \n \n \n \n \n \n \n+\n"
                },
                {
                    "date": 1752386523759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,18 +12,11 @@\n         <template v-if=\"showBackButton\">\n           <!-- Back button remains unchanged -->\n         </template>\n         <template v-else>\n-          <!-- New left side branding -->\n+          <!-- New left side branding with emoji -->\n           <div class=\"nav-branding\" @click=\"goToHome\">\n-            <!-- Using inline SVG for palette icon -->\n-            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#FFD700\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"custom-icon\">\n-              <circle cx=\"13.5\" cy=\"6.5\" r=\"2.5\"/>\n-              <circle cx=\"17.5\" cy=\"10.5\" r=\"2.5\"/>\n-              <circle cx=\"8.5\" cy=\"7.5\" r=\"2.5\"/>\n-              <circle cx=\"6.5\" cy=\"12.5\" r=\"2.5\"/>\n-              <path d=\"M12 22c5.5 0 10-4.5 10-10c0-2.8-1.5-5.5-4-7L6 3C4.5 4.5 3 7.2 3 10c0 5.5 4.5 10 9 12z\"/>\n-            </svg>\n+            <span class=\"palette-emoji\">🎨</span>\n             <span class=\"brand-text\">AI Magic</span>\n           </div>\n         </template>\n       </div>\n@@ -517,10 +510,11 @@\n   font-size: 16px;\n   color: var(--text-color, #fff);\n }\n \n-.custom-icon {\n-  flex-shrink: 0;\n+.palette-emoji {\n+  font-size: 18px;\n+  line-height: 1;\n }\n </style>\n \n \n@@ -529,4 +523,5 @@\n \n \n \n \n+\n"
                },
                {
                    "date": 1752387209498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,12 @@\n     <!-- 左侧插槽 -->\n     <template #left>\n       <div class=\"nav-left\">\n         <template v-if=\"showBackButton\">\n-          <!-- Back button remains unchanged -->\n+          <!-- Make back button visible -->\n+          <div class=\"back-button\">\n+            <van-icon name=\"arrow-left\" size=\"18\" color=\"#fff\" />\n+          </div>\n         </template>\n         <template v-else>\n           <!-- New left side branding with emoji -->\n           <div class=\"nav-branding\" @click=\"goToHome\">\n@@ -514,8 +517,18 @@\n .palette-emoji {\n   font-size: 18px;\n   line-height: 1;\n }\n+\n+/* Add styles for back button */\n+.back-button {\n+  display: flex;\n+  align-items: center;\n+  justify-content: center;\n+  min-width: 44px;\n+  min-height: 44px;\n+  cursor: pointer;\n+}\n </style>\n \n \n \n@@ -524,4 +537,5 @@\n \n \n \n \n+\n"
                },
                {
                    "date": 1752388983078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,10 +372,20 @@\n .top-navigation {\n   background: var(--van-nav-bar-background, #fff);\n   border-bottom: 1px solid var(--van-border-color, #ebedf0);\n   box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n+  height: 56px !important; /* 增加高度 */\n+  line-height: 56px !important; /* 保持内容垂直居中 */\n+  z-index: 100; /* 确保在页面最前面 */\n }\n \n+/* 调整内部元素垂直居中 */\n+.top-navigation :deep(.van-nav-bar__content) {\n+  height: 100%;\n+  display: flex;\n+  align-items: center;\n+}\n+\n /* 左侧区域 */\n .nav-left {\n   display: flex;\n   align-items: center;\n@@ -538,4 +548,5 @@\n \n \n \n \n+\n"
                },
                {
                    "date": 1752388995743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,20 +372,10 @@\n .top-navigation {\n   background: var(--van-nav-bar-background, #fff);\n   border-bottom: 1px solid var(--van-border-color, #ebedf0);\n   box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n-  height: 56px !important; /* 增加高度 */\n-  line-height: 56px !important; /* 保持内容垂直居中 */\n-  z-index: 100; /* 确保在页面最前面 */\n }\n \n-/* 调整内部元素垂直居中 */\n-.top-navigation :deep(.van-nav-bar__content) {\n-  height: 100%;\n-  display: flex;\n-  align-items: center;\n-}\n-\n /* 左侧区域 */\n .nav-left {\n   display: flex;\n   align-items: center;\n@@ -548,5 +538,4 @@\n \n \n \n \n-\n"
                },
                {
                    "date": 1752389045930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,10 +372,31 @@\n .top-navigation {\n   background: var(--van-nav-bar-background, #fff);\n   border-bottom: 1px solid var(--van-border-color, #ebedf0);\n   box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n+  height: 64px !important; /* 增加高度到64px */\n+  z-index: 9999 !important; /* 确保在最前面 */\n+  position: fixed !important; /* 确保固定定位 */\n+  top: 0 !important;\n+  left: 0 !important;\n+  right: 0 !important;\n }\n \n+/* 确保导航栏内容垂直居中 */\n+.top-navigation :deep(.van-nav-bar__content) {\n+  height: 64px !important;\n+  display: flex !important;\n+  align-items: center !important;\n+}\n+\n+.top-navigation :deep(.van-nav-bar__left),\n+.top-navigation :deep(.van-nav-bar__title),\n+.top-navigation :deep(.van-nav-bar__right) {\n+  height: 64px !important;\n+  display: flex !important;\n+  align-items: center !important;\n+}\n+\n /* 左侧区域 */\n .nav-left {\n   display: flex;\n   align-items: center;\n"
                },
                {
                    "date": 1752389062859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -492,8 +492,22 @@\n }\n \n /* 响应式设计 */\n @media (max-width: 768px) {\n+  .top-navigation {\n+    height: 60px !important; /* 移动端稍微降低高度但仍比默认高 */\n+  }\n+\n+  .top-navigation :deep(.van-nav-bar__content) {\n+    height: 60px !important;\n+  }\n+\n+  .top-navigation :deep(.van-nav-bar__left),\n+  .top-navigation :deep(.van-nav-bar__title),\n+  .top-navigation :deep(.van-nav-bar__right) {\n+    height: 60px !important;\n+  }\n+\n   .nav-right {\n     gap: 8px;\n   }\n \n"
                },
                {
                    "date": 1752389075007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -559,9 +559,9 @@\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   min-width: 44px;\n-  min-height: 44px;\n+  min-height: 64px; /* 匹配导航栏高度 */\n   cursor: pointer;\n }\n </style>\n \n"
                },
                {
                    "date": 1752834855418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,10 +163,9 @@\n   generationCost: 20,\n   isLoggedIn: false\n })\n \n-// 定时器\n-let statusUpdateTimer = null\n+// 移除定时器相关变量\n \n // 更新积分状态\n const updatePointsStatus = async () => {\n   console.log('🔄 更新积分状态，当前登录状态:', levelCardPointsManager.isLoggedIn(), isLoggedIn.value)\n"
                },
                {
                    "date": 1752834870464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -310,17 +310,9 @@\n     // 不立即清除token，等待下一次API调用时再处理\n   }\n }\n \n-// 监听localStorage变化\n-const handleStorageChange = (event) => {\n-  console.log('localStorage变化:', event)\n-  if (event.key === 'auth_token' || event.key === 'user_info') {\n-    console.log('认证相关数据变化，重新初始化')\n-    initUserInfo()\n-    updatePointsStatus()\n-  }\n-}\n+// 移除跨标签页同步逻辑\n \n // 组件挂载时初始化\n onMounted(() => {\n   initUserInfo()\n"
                },
                {
                    "date": 1752834885801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,35 +316,8 @@\n // 组件挂载时初始化\n onMounted(() => {\n   initUserInfo()\n   updatePointsStatus()\n-\n-  // 监听storage事件（跨标签页同步）\n-  window.addEventListener('storage', handleStorageChange)\n-\n-  // 每30秒更新一次状态\n-  statusUpdateTimer = setInterval(updatePointsStatus, 30000)\n-\n-  // 定期检查登录状态（防止token过期等问题）\n-  const checkInterval = setInterval(() => {\n-    const token = authApi.getToken()\n-    const localUserInfo = authApi.getLocalUserInfo()\n-\n-    // 状态不一致时重新初始化\n-    if ((token && !userInfo.value) || (!token && userInfo.value)) {\n-      console.log('检测到登录状态不一致，重新初始化')\n-      initUserInfo()\n-    }\n-  }, 5000) // 每5秒检查一次\n-\n-  // 清理定时器\n-  onUnmounted(() => {\n-    window.removeEventListener('storage', handleStorageChange)\n-    if (statusUpdateTimer) {\n-      clearInterval(statusUpdateTimer)\n-    }\n-    clearInterval(checkInterval)\n-  })\n })\n \n // 暴露给父组件的方法\n defineExpose({\n"
                },
                {
                    "date": 1753537806248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,540 +1,536 @@\n-<template>\n-  <van-nav-bar\n-    :left-arrow=\"showBackButton\"\n-    @click-left=\"handleLeftClick\"\n-    class=\"top-navigation\"\n-    fixed\n-    placeholder\n-  >\n-    <!-- 左侧插槽 -->\n-    <template #left>\n-      <div class=\"nav-left\">\n-        <template v-if=\"showBackButton\">\n-          <!-- Make back button visible -->\n-          <div class=\"back-button\">\n-            <van-icon name=\"arrow-left\" size=\"18\" color=\"#fff\" />\n-          </div>\n-        </template>\n-        <template v-else>\n-          <!-- New left side branding with emoji -->\n-          <div class=\"nav-branding\" @click=\"goToHome\">\n-            <span class=\"palette-emoji\">🎨</span>\n-            <span class=\"brand-text\">AI Magic</span>\n-          </div>\n-        </template>\n-      </div>\n-    </template>\n-\n-    <!-- 标题插槽 - 移除中间标题 -->\n-    <template #title>\n-      <!-- Title removed -->\n-    </template>\n-\n-    <!-- 右侧插槽保持不变 -->\n-    <template #right>\n-      <div class=\"nav-right\">\n-        <!-- 积分显示 - 仅在登录时显示 -->\n-        <div\n-          v-if=\"isLoggedIn\"\n-          class=\"nav-points\"\n-          @click=\"showPointsModal = true\"\n-          title=\"点击查看积分详情\"\n-        >\n-          <van-icon name=\"diamond-o\" size=\"16\" />\n-          <span v-if=\"!pointsLoading\" class=\"points-text\">{{ pointsStatus.current }}</span>\n-          <van-loading v-else size=\"12\" color=\"var(--primary-color)\" />\n-        </div>\n-\n-        <!-- 用户信息 -->\n-        <div class=\"nav-user\">\n-          <!-- 未登录状态 -->\n-          <div v-if=\"!isLoggedIn\" @click=\"showLoginModal\" title=\"点击登录\">\n-            <van-icon name=\"user-o\" size=\"16\" />\n-            <span class=\"user-text\">登录</span>\n-          </div>\n-          <!-- 已登录状态 -->\n-          <div v-else @click=\"goToProfile\" title=\"点击进入个人中心\">\n-            <van-icon name=\"user-o\" size=\"16\" />\n-          </div>\n-        </div>\n-      </div>\n-    </template>\n-  </van-nav-bar>\n-\n-  <!-- 积分弹窗 -->\n-  <PointsModal\n-    v-model:show=\"showPointsModal\"\n-    @points-updated=\"handlePointsUpdated\"\n-  />\n-\n-  <!-- 登录注册弹窗 -->\n-  <AuthModal\n-    v-model:show=\"showAuthModal\"\n-    :default-mode=\"authMode\"\n-    @success=\"handleAuthSuccess\"\n-  />\n-</template>\n-\n-<script setup>\n-import { ref, reactive, computed, onMounted, onUnmounted } from 'vue'\n-import { useRouter, useRoute } from 'vue-router'\n-import { Toast } from 'vant'\n-import { authApi } from '../services/api.js'\n-import levelCardPointsManager from '../utils/levelCardPointsManager.js'\n-import PointsModal from './PointsModal.vue'\n-import AuthModal from './AuthModal.vue'\n-\n-// 定义props\n-const props = defineProps({\n-  title: {\n-    type: String,\n-    default: ''\n-  },\n-  showBack: {\n-    type: Boolean,\n-    default: null // null表示自动判断\n-  }\n-})\n-\n-// 定义事件\n-const emit = defineEmits(['login', 'logout'])\n-\n-// 路由\n-const router = useRouter()\n-const route = useRoute()\n-\n-// 计算属性\n-const pageTitle = computed(() => {\n-  if (props.title) return props.title\n-\n-  // 根据路由自动生成标题\n-  const routeTitleMap = {\n-    '/': 'AI Magic',\n-    '/clothes-swap': '一键换衣',\n-    '/face-swap': '极速换脸',\n-    '/text-to-image': '文生图',\n-    '/profile': '个人中心'\n-  }\n-\n-  return routeTitleMap[route.path] || 'AI Magic'\n-})\n-\n-const showBackButton = computed(() => {\n-  if (props.showBack !== null) return props.showBack\n-\n-  // 自动判断：首页不显示返回按钮，其他页面显示\n-  return route.path !== '/'\n-})\n-\n-// 获取标题图标 - 不再需要此函数\n-// const getTitleIcon = () => {\n-//   const iconMap = {\n-//     '/': 'home-o',\n-//     '/clothes-swap': 'user-o',\n-//     '/face-swap': 'friends-o',\n-//     '/text-to-image': 'photo-o',\n-//     '/profile': 'manager-o'\n-//   }\n-//\n-//   return iconMap[route.path] || 'apps-o'\n-// }\n-\n-// 响应式数据\n-const showPointsModal = ref(false)\n-const showAuthModal = ref(false)\n-const authMode = ref('login')\n-const loading = ref(false)\n-const pointsLoading = ref(false)\n-\n-// 用户信息\n-const userInfo = ref(null)\n-const isLoggedIn = computed(() => {\n-  const hasToken = authApi.isLoggedIn()\n-  const hasUserInfo = !!userInfo.value\n-  return hasToken && hasUserInfo\n-})\n-\n-// 积分状态\n-const pointsStatus = reactive({\n-  current: 0,\n-  total_points: 0,\n-  cards_count: 0,\n-  canGenerate: false,\n-  generationCost: 20,\n-  isLoggedIn: false\n-})\n-\n-// 移除定时器相关变量\n-\n-// 更新积分状态\n-const updatePointsStatus = async () => {\n-  console.log('🔄 更新积分状态，当前登录状态:', levelCardPointsManager.isLoggedIn(), isLoggedIn.value)\n-\n-  // 检查登录状态，如果未登录则不发送API请求\n-  if (!levelCardPointsManager.isLoggedIn() || !isLoggedIn.value) {\n-    console.log('❌ 未登录，设置默认积分状态')\n-    pointsLoading.value = false\n-    Object.assign(pointsStatus, {\n-      current: 0,\n-      total_points: 0,\n-      cards_count: 0,\n-      canGenerate: false,\n-      generationCost: 20,\n-      isLoggedIn: false\n-    })\n-    return\n-  }\n-\n-  try {\n-    pointsLoading.value = true\n-    console.log('🚀 发送积分API请求...')\n-    const newStatus = await levelCardPointsManager.getPointsStatus()\n-    console.log('✅ 积分状态更新成功:', newStatus)\n-    Object.assign(pointsStatus, newStatus)\n-  } catch (error) {\n-    console.error('❌ 更新积分状态失败:', error)\n-    // 认证错误处理\n-    if (error.message && (error.message.includes('令牌') || error.message.includes('401'))) {\n-      console.log('🔒 认证错误，重置积分状态')\n-      Object.assign(pointsStatus, {\n-        current: 0,\n-        total_points: 0,\n-        cards_count: 0,\n-        canGenerate: false,\n-        generationCost: 20,\n-        isLoggedIn: false\n-      })\n-    }\n-  } finally {\n-    pointsLoading.value = false\n-  }\n-}\n-\n-// 显示登录弹窗\n-const showLoginModal = () => {\n-  authMode.value = 'login'\n-  showAuthModal.value = true\n-}\n-\n-// 处理认证成功\n-const handleAuthSuccess = async (data) => {\n-  console.log('认证成功，更新用户信息:', data)\n-\n-  // 立即更新用户信息\n-  userInfo.value = data.user\n-\n-  // 确保localStorage中的数据是最新的\n-  if (data.user) {\n-    localStorage.setItem('user_info', JSON.stringify(data.user))\n-  }\n-\n-  // 立即更新积分状态中的登录状态\n-  pointsStatus.isLoggedIn = true\n-\n-  // 触发父组件的登录事件\n-  emit('login', data)\n-\n-  // 立即更新积分状态，显示加载状态\n-  await updatePointsStatus()\n-\n-  // 关闭弹窗\n-  showAuthModal.value = false\n-}\n-\n-// 处理左侧点击事件\n-const handleLeftClick = () => {\n-  if (showBackButton.value) {\n-    // 返回上一页\n-    if (window.history.length > 1) {\n-      router.go(-1)\n-    } else {\n-      router.push('/')\n-    }\n-  }\n-}\n-\n-// 跳转到首页\n-const goToHome = () => {\n-  router.push('/')\n-}\n-\n-// 跳转到个人中心\n-const goToProfile = () => {\n-  router.push('/profile')\n-}\n-\n-// 处理积分更新\n-const handlePointsUpdated = async () => {\n-  console.log('🔄 收到积分更新事件，强制刷新积分状态')\n-  // 清除levelCardPointsManager的缓存，确保获取最新数据\n-  levelCardPointsManager.clearCache()\n-\n-  // 更新积分状态\n-  await updatePointsStatus()\n-}\n-\n-// 初始化用户信息\n-const initUserInfo = () => {\n-  console.log('🔄 初始化用户信息...')\n-  const token = authApi.getToken()\n-  const localUserInfo = authApi.getLocalUserInfo()\n-\n-  console.log('Token存在:', !!token)\n-  console.log('本地用户信息:', localUserInfo)\n-\n-  if (token && localUserInfo) {\n-    userInfo.value = localUserInfo\n-    pointsStatus.isLoggedIn = true\n-    console.log('✅ 设置用户信息:', userInfo.value)\n-    console.log('✅ 设置登录状态为true')\n-\n-    // 验证token有效性（静默验证，不影响用户体验）\n-    validateTokenSilently()\n-  } else {\n-    console.log('❌ 未找到有效的登录信息')\n-    userInfo.value = null\n-    pointsStatus.isLoggedIn = false\n-  }\n-}\n-\n-// 静默验证token\n-const validateTokenSilently = async () => {\n-  try {\n-    const response = await authApi.getCurrentUser()\n-    if (!response.success) {\n-      console.warn('Token验证失败，但不立即登出用户')\n-      // 不立即清除token，等待下一次API调用时再处理\n-    }\n-  } catch (error) {\n-    console.warn('Token验证出错，但不立即登出用户:', error)\n-    // 不立即清除token，等待下一次API调用时再处理\n-  }\n-}\n-\n-// 移除跨标签页同步逻辑\n-\n-// 组件挂载时初始化\n-onMounted(() => {\n-  initUserInfo()\n-  updatePointsStatus()\n-})\n-\n-// 暴露给父组件的方法\n-defineExpose({\n-  updatePointsStatus,\n-  getCurrentPoints: () => pointsStatus.current,\n-  hasEnoughPoints: () => pointsStatus.canGenerate,\n-  showLoginModal: () => {\n-    authMode.value = 'login'\n-    showAuthModal.value = true\n-  }\n-})\n-</script>\n-\n-<style scoped>\n-/* Vant NavBar 自定义样式 */\n-.top-navigation {\n-  background: var(--van-nav-bar-background, #fff);\n-  border-bottom: 1px solid var(--van-border-color, #ebedf0);\n-  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n-  height: 64px !important; /* 增加高度到64px */\n-  z-index: 9999 !important; /* 确保在最前面 */\n-  position: fixed !important; /* 确保固定定位 */\n-  top: 0 !important;\n-  left: 0 !important;\n-  right: 0 !important;\n-}\n-\n-/* 确保导航栏内容垂直居中 */\n-.top-navigation :deep(.van-nav-bar__content) {\n-  height: 64px !important;\n-  display: flex !important;\n-  align-items: center !important;\n-}\n-\n-.top-navigation :deep(.van-nav-bar__left),\n-.top-navigation :deep(.van-nav-bar__title),\n-.top-navigation :deep(.van-nav-bar__right) {\n-  height: 64px !important;\n-  display: flex !important;\n-  align-items: center !important;\n-}\n-\n-/* 左侧区域 */\n-.nav-left {\n-  display: flex;\n-  align-items: center;\n-  gap: 8px;\n-}\n-\n-.nav-logo {\n-  display: flex;\n-  align-items: center;\n-  cursor: pointer;\n-  padding: 8px 12px;\n-  border-radius: 8px;\n-  color: var(--van-text-color, #323233);\n-  min-height: 44px;\n-  min-width: 44px;\n-  justify-content: center;\n-}\n-\n-/* 标题区域 */\n-.nav-title {\n-  display: flex;\n-  align-items: center;\n-  gap: 6px;\n-  font-weight: 600;\n-}\n-\n-.title-icon {\n-  flex-shrink: 0;\n-}\n-\n-/* 右侧区域 */\n-.nav-right {\n-  display: flex;\n-  align-items: center;\n-  gap: 12px;\n-}\n-\n-/* 积分显示 */\n-.nav-points {\n-  display: flex;\n-  align-items: center;\n-  gap: 4px;\n-  padding: 8px 12px;\n-  background: rgba(25, 137, 250, 0.1);\n-  border-radius: 16px;\n-  cursor: pointer;\n-  min-width: 60px;\n-  min-height: 44px;\n-  justify-content: center;\n-}\n-\n-.points-text {\n-  font-size: 12px;\n-  font-weight: 600;\n-  color: var(--van-primary-color, #1989fa);\n-  margin-left: 2px;\n-}\n-\n-/* 用户信息 */\n-.nav-user {\n-  display: flex;\n-  align-items: center;\n-  cursor: pointer;\n-}\n-\n-.nav-user > div {\n-  display: flex;\n-  align-items: center;\n-  gap: 4px;\n-  padding: 8px 12px;\n-  border-radius: 16px;\n-  color: var(--van-text-color, #323233);\n-  min-height: 44px;\n-  min-width: 44px;\n-  justify-content: center;\n-}\n-\n-.user-text {\n-  font-size: 12px;\n-  font-weight: 500;\n-}\n-\n-/* 深色主题适配 */\n-@media (prefers-color-scheme: dark) {\n-  .top-navigation {\n-    background: var(--van-nav-bar-background, #1e1e1e);\n-    border-bottom-color: var(--van-border-color, #333);\n-  }\n-\n-  .nav-points {\n-    background: rgba(25, 137, 250, 0.2);\n-  }\n-}\n-\n-/* 响应式设计 */\n-@media (max-width: 768px) {\n-  .top-navigation {\n-    height: 60px !important; /* 移动端稍微降低高度但仍比默认高 */\n-  }\n-\n-  .top-navigation :deep(.van-nav-bar__content) {\n-    height: 60px !important;\n-  }\n-\n-  .top-navigation :deep(.van-nav-bar__left),\n-  .top-navigation :deep(.van-nav-bar__title),\n-  .top-navigation :deep(.van-nav-bar__right) {\n-    height: 60px !important;\n-  }\n-\n-  .nav-right {\n-    gap: 8px;\n-  }\n-\n-  .nav-points {\n-    padding: 6px 10px;\n-    min-width: 50px;\n-    min-height: 40px;\n-  }\n-\n-  .nav-user > div {\n-    padding: 6px 10px;\n-    min-height: 40px;\n-    min-width: 40px;\n-  }\n-\n-  .nav-logo {\n-    padding: 6px 10px;\n-    min-height: 40px;\n-    min-width: 40px;\n-  }\n-\n-  .points-text,\n-  .user-text {\n-    font-size: 11px;\n-  }\n-}\n-\n-/* Add new styles for the branding */\n-.nav-branding {\n-  display: flex;\n-  align-items: center;\n-  gap: 8px;\n-  cursor: pointer;\n-}\n-\n-.brand-text {\n-  font-weight: 600;\n-  font-size: 16px;\n-  color: var(--text-color, #fff);\n-}\n-\n-.palette-emoji {\n-  font-size: 18px;\n-  line-height: 1;\n-}\n-\n-/* Add styles for back button */\n-.back-button {\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  min-width: 44px;\n-  min-height: 64px; /* 匹配导航栏高度 */\n-  cursor: pointer;\n-}\n-</style>\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+<template>\r\n+  <van-nav-bar\r\n+    :left-arrow=\"showBackButton\"\r\n+    @click-left=\"handleLeftClick\"\r\n+    class=\"top-navigation\"\r\n+    fixed\r\n+    placeholder\r\n+  >\r\n+    <!-- 左侧插槽 -->\r\n+    <template #left>\r\n+      <div class=\"nav-left\">\r\n+        <template v-if=\"showBackButton\">\r\n+          <!-- Make back button visible -->\r\n+          <div class=\"back-button\">\r\n+            <van-icon name=\"arrow-left\" size=\"18\" color=\"#fff\" />\r\n+          </div>\r\n+        </template>\r\n+        <template v-else>\r\n+          <!-- New left side branding with emoji -->\r\n+          <div class=\"nav-branding\" @click=\"goToHome\">\r\n+            <span class=\"palette-emoji\">🎨</span>\r\n+            <span class=\"brand-text\">AI Magic</span>\r\n+          </div>\r\n+        </template>\r\n+      </div>\r\n+    </template>\r\n+\r\n+    <!-- 标题插槽 - 移除中间标题 -->\r\n+    <template #title>\r\n+      <!-- Title removed -->\r\n+    </template>\r\n+\r\n+    <!-- 右侧插槽保持不变 -->\r\n+    <template #right>\r\n+      <div class=\"nav-right\">\r\n+        <!-- 积分显示 - 仅在登录时显示 -->\r\n+        <div\r\n+          v-if=\"isLoggedIn\"\r\n+          class=\"nav-points\"\r\n+          @click=\"showPointsModal = true\"\r\n+          title=\"点击查看积分详情\"\r\n+        >\r\n+          <van-icon name=\"diamond-o\" size=\"16\" />\r\n+          <span v-if=\"!pointsLoading\" class=\"points-text\">{{ pointsStatus.current }}</span>\r\n+          <van-loading v-else size=\"12\" color=\"var(--primary-color)\" />\r\n+        </div>\r\n+\r\n+        <!-- 用户信息 -->\r\n+        <div class=\"nav-user\">\r\n+          <!-- 未登录状态 -->\r\n+          <div v-if=\"!isLoggedIn\" @click=\"showLoginModal\" title=\"点击登录\">\r\n+            <van-icon name=\"user-o\" size=\"16\" />\r\n+            <span class=\"user-text\">登录</span>\r\n+          </div>\r\n+          <!-- 已登录状态 -->\r\n+          <div v-else @click=\"goToProfile\" title=\"点击进入个人中心\">\r\n+            <van-icon name=\"user-o\" size=\"16\" />\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+    </template>\r\n+  </van-nav-bar>\r\n+\r\n+  <!-- 积分弹窗 -->\r\n+  <PointsModal\r\n+    v-model:show=\"showPointsModal\"\r\n+    @points-updated=\"handlePointsUpdated\"\r\n+  />\r\n+\r\n+  <!-- 登录注册弹窗 -->\r\n+  <AuthModal\r\n+    v-model:show=\"showAuthModal\"\r\n+    :default-mode=\"authMode\"\r\n+    @success=\"handleAuthSuccess\"\r\n+  />\r\n+</template>\r\n+\r\n+<script setup>\r\n+import { ref, reactive, computed, onMounted, onUnmounted } from 'vue'\r\n+import { useRouter, useRoute } from 'vue-router'\r\n+import { Toast } from 'vant'\r\n+import { authApi } from '../services/api.js'\r\n+import levelCardPointsManager from '../utils/levelCardPointsManager.js'\r\n+import PointsModal from './PointsModal.vue'\r\n+import AuthModal from './AuthModal.vue'\r\n+\r\n+// 定义props\r\n+const props = defineProps({\r\n+  title: {\r\n+    type: String,\r\n+    default: ''\r\n+  },\r\n+  showBack: {\r\n+    type: Boolean,\r\n+    default: null // null表示自动判断\r\n+  }\r\n+})\r\n+\r\n+// 定义事件\r\n+const emit = defineEmits(['login', 'logout'])\r\n+\r\n+// 路由\r\n+const router = useRouter()\r\n+const route = useRoute()\r\n+\r\n+// 计算属性\r\n+const pageTitle = computed(() => {\r\n+  if (props.title) return props.title\r\n+\r\n+  // 根据路由自动生成标题\r\n+  const routeTitleMap = {\r\n+    '/': 'AI Magic',\r\n+    '/clothes-swap': '一键换衣',\r\n+    '/face-swap': '极速换脸',\r\n+    '/text-to-image': '文生图',\r\n+    '/profile': '个人中心'\r\n+  }\r\n+\r\n+  return routeTitleMap[route.path] || 'AI Magic'\r\n+})\r\n+\r\n+const showBackButton = computed(() => {\r\n+  if (props.showBack !== null) return props.showBack\r\n+\r\n+  // 自动判断：首页不显示返回按钮，其他页面显示\r\n+  return route.path !== '/'\r\n+})\r\n+\r\n+// 获取标题图标 - 不再需要此函数\r\n+// const getTitleIcon = () => {\r\n+//   const iconMap = {\r\n+//     '/': 'home-o',\r\n+//     '/clothes-swap': 'user-o',\r\n+//     '/face-swap': 'friends-o',\r\n+//     '/text-to-image': 'photo-o',\r\n+//     '/profile': 'manager-o'\r\n+//   }\r\n+//\r\n+//   return iconMap[route.path] || 'apps-o'\r\n+// }\r\n+\r\n+// 响应式数据\r\n+const showPointsModal = ref(false)\r\n+const showAuthModal = ref(false)\r\n+const authMode = ref('login')\r\n+const loading = ref(false)\r\n+const pointsLoading = ref(false)\r\n+\r\n+// 用户信息\r\n+const userInfo = ref(null)\r\n+const isLoggedIn = computed(() => {\r\n+  const hasToken = authApi.isLoggedIn()\r\n+  const hasUserInfo = !!userInfo.value\r\n+  return hasToken && hasUserInfo\r\n+})\r\n+\r\n+// 积分状态\r\n+const pointsStatus = reactive({\r\n+  current: 0,\r\n+  total_points: 0,\r\n+  cards_count: 0,\r\n+  canGenerate: false,\r\n+  generationCost: 20,\r\n+  isLoggedIn: false\r\n+})\r\n+\r\n+// 移除定时器相关变量\r\n+\r\n+// 更新积分状态\r\n+const updatePointsStatus = async () => {\r\n+  console.log('🔄 更新积分状态，当前登录状态:', levelCardPointsManager.isLoggedIn(), isLoggedIn.value)\r\n+\r\n+  // 检查登录状态，如果未登录则不发送API请求\r\n+  if (!levelCardPointsManager.isLoggedIn() || !isLoggedIn.value) {\r\n+    console.log('❌ 未登录，设置默认积分状态')\r\n+    pointsLoading.value = false\r\n+    Object.assign(pointsStatus, {\r\n+      current: 0,\r\n+      total_points: 0,\r\n+      cards_count: 0,\r\n+      canGenerate: false,\r\n+      generationCost: 20,\r\n+      isLoggedIn: false\r\n+    })\r\n+    return\r\n+  }\r\n+\r\n+  try {\r\n+    pointsLoading.value = true\r\n+    console.log('🚀 发送积分API请求...')\r\n+    const newStatus = await levelCardPointsManager.getPointsStatus()\r\n+    console.log('✅ 积分状态更新成功:', newStatus)\r\n+    Object.assign(pointsStatus, newStatus)\r\n+  } catch (error) {\r\n+    console.error('❌ 更新积分状态失败:', error)\r\n+    // 认证错误处理\r\n+    if (error.message && (error.message.includes('令牌') || error.message.includes('401'))) {\r\n+      console.log('🔒 认证错误，重置积分状态')\r\n+      Object.assign(pointsStatus, {\r\n+        current: 0,\r\n+        total_points: 0,\r\n+        cards_count: 0,\r\n+        canGenerate: false,\r\n+        generationCost: 20,\r\n+        isLoggedIn: false\r\n+      })\r\n+    }\r\n+  } finally {\r\n+    pointsLoading.value = false\r\n+  }\r\n+}\r\n+\r\n+// 显示登录弹窗\r\n+const showLoginModal = () => {\r\n+  authMode.value = 'login'\r\n+  showAuthModal.value = true\r\n+}\r\n+\r\n+// 处理认证成功\r\n+const handleAuthSuccess = async (data) => {\r\n+  console.log('认证成功，更新用户信息:', data)\r\n+\r\n+  // 立即更新用户信息\r\n+  userInfo.value = data.user\r\n+\r\n+  // 确保localStorage中的数据是最新的\r\n+  if (data.user) {\r\n+    localStorage.setItem('user_info', JSON.stringify(data.user))\r\n+  }\r\n+\r\n+  // 立即更新积分状态中的登录状态\r\n+  pointsStatus.isLoggedIn = true\r\n+\r\n+  // 触发父组件的登录事件\r\n+  emit('login', data)\r\n+\r\n+  // 立即更新积分状态，显示加载状态\r\n+  await updatePointsStatus()\r\n+\r\n+  // 关闭弹窗\r\n+  showAuthModal.value = false\r\n+}\r\n+\r\n+// 处理左侧点击事件\r\n+const handleLeftClick = () => {\r\n+  if (showBackButton.value) {\r\n+    // 直接跳转到首页\r\n+    router.push('/')\r\n+  }\r\n+}\r\n+\r\n+// 跳转到首页\r\n+const goToHome = () => {\r\n+  router.push('/')\r\n+}\r\n+\r\n+// 跳转到个人中心\r\n+const goToProfile = () => {\r\n+  router.push('/profile')\r\n+}\r\n+\r\n+// 处理积分更新\r\n+const handlePointsUpdated = async () => {\r\n+  console.log('🔄 收到积分更新事件，强制刷新积分状态')\r\n+  // 清除levelCardPointsManager的缓存，确保获取最新数据\r\n+  levelCardPointsManager.clearCache()\r\n+\r\n+  // 更新积分状态\r\n+  await updatePointsStatus()\r\n+}\r\n+\r\n+// 初始化用户信息\r\n+const initUserInfo = () => {\r\n+  console.log('🔄 初始化用户信息...')\r\n+  const token = authApi.getToken()\r\n+  const localUserInfo = authApi.getLocalUserInfo()\r\n+\r\n+  console.log('Token存在:', !!token)\r\n+  console.log('本地用户信息:', localUserInfo)\r\n+\r\n+  if (token && localUserInfo) {\r\n+    userInfo.value = localUserInfo\r\n+    pointsStatus.isLoggedIn = true\r\n+    console.log('✅ 设置用户信息:', userInfo.value)\r\n+    console.log('✅ 设置登录状态为true')\r\n+\r\n+    // 验证token有效性（静默验证，不影响用户体验）\r\n+    validateTokenSilently()\r\n+  } else {\r\n+    console.log('❌ 未找到有效的登录信息')\r\n+    userInfo.value = null\r\n+    pointsStatus.isLoggedIn = false\r\n+  }\r\n+}\r\n+\r\n+// 静默验证token\r\n+const validateTokenSilently = async () => {\r\n+  try {\r\n+    const response = await authApi.getCurrentUser()\r\n+    if (!response.success) {\r\n+      console.warn('Token验证失败，但不立即登出用户')\r\n+      // 不立即清除token，等待下一次API调用时再处理\r\n+    }\r\n+  } catch (error) {\r\n+    console.warn('Token验证出错，但不立即登出用户:', error)\r\n+    // 不立即清除token，等待下一次API调用时再处理\r\n+  }\r\n+}\r\n+\r\n+// 移除跨标签页同步逻辑\r\n+\r\n+// 组件挂载时初始化\r\n+onMounted(() => {\r\n+  initUserInfo()\r\n+  updatePointsStatus()\r\n+})\r\n+\r\n+// 暴露给父组件的方法\r\n+defineExpose({\r\n+  updatePointsStatus,\r\n+  getCurrentPoints: () => pointsStatus.current,\r\n+  hasEnoughPoints: () => pointsStatus.canGenerate,\r\n+  showLoginModal: () => {\r\n+    authMode.value = 'login'\r\n+    showAuthModal.value = true\r\n+  }\r\n+})\r\n+</script>\r\n+\r\n+<style scoped>\r\n+/* Vant NavBar 自定义样式 */\r\n+.top-navigation {\r\n+  background: var(--van-nav-bar-background, #fff);\r\n+  border-bottom: 1px solid var(--van-border-color, #ebedf0);\r\n+  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n+  height: 64px !important; /* 增加高度到64px */\r\n+  z-index: 9999 !important; /* 确保在最前面 */\r\n+  position: fixed !important; /* 确保固定定位 */\r\n+  top: 0 !important;\r\n+  left: 0 !important;\r\n+  right: 0 !important;\r\n+}\r\n+\r\n+/* 确保导航栏内容垂直居中 */\r\n+.top-navigation :deep(.van-nav-bar__content) {\r\n+  height: 64px !important;\r\n+  display: flex !important;\r\n+  align-items: center !important;\r\n+}\r\n+\r\n+.top-navigation :deep(.van-nav-bar__left),\r\n+.top-navigation :deep(.van-nav-bar__title),\r\n+.top-navigation :deep(.van-nav-bar__right) {\r\n+  height: 64px !important;\r\n+  display: flex !important;\r\n+  align-items: center !important;\r\n+}\r\n+\r\n+/* 左侧区域 */\r\n+.nav-left {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  gap: 8px;\r\n+}\r\n+\r\n+.nav-logo {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  cursor: pointer;\r\n+  padding: 8px 12px;\r\n+  border-radius: 8px;\r\n+  color: var(--van-text-color, #323233);\r\n+  min-height: 44px;\r\n+  min-width: 44px;\r\n+  justify-content: center;\r\n+}\r\n+\r\n+/* 标题区域 */\r\n+.nav-title {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  gap: 6px;\r\n+  font-weight: 600;\r\n+}\r\n+\r\n+.title-icon {\r\n+  flex-shrink: 0;\r\n+}\r\n+\r\n+/* 右侧区域 */\r\n+.nav-right {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  gap: 12px;\r\n+}\r\n+\r\n+/* 积分显示 */\r\n+.nav-points {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  gap: 4px;\r\n+  padding: 8px 12px;\r\n+  background: rgba(25, 137, 250, 0.1);\r\n+  border-radius: 16px;\r\n+  cursor: pointer;\r\n+  min-width: 60px;\r\n+  min-height: 44px;\r\n+  justify-content: center;\r\n+}\r\n+\r\n+.points-text {\r\n+  font-size: 12px;\r\n+  font-weight: 600;\r\n+  color: var(--van-primary-color, #1989fa);\r\n+  margin-left: 2px;\r\n+}\r\n+\r\n+/* 用户信息 */\r\n+.nav-user {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  cursor: pointer;\r\n+}\r\n+\r\n+.nav-user > div {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  gap: 4px;\r\n+  padding: 8px 12px;\r\n+  border-radius: 16px;\r\n+  color: var(--van-text-color, #323233);\r\n+  min-height: 44px;\r\n+  min-width: 44px;\r\n+  justify-content: center;\r\n+}\r\n+\r\n+.user-text {\r\n+  font-size: 12px;\r\n+  font-weight: 500;\r\n+}\r\n+\r\n+/* 深色主题适配 */\r\n+@media (prefers-color-scheme: dark) {\r\n+  .top-navigation {\r\n+    background: var(--van-nav-bar-background, #1e1e1e);\r\n+    border-bottom-color: var(--van-border-color, #333);\r\n+  }\r\n+\r\n+  .nav-points {\r\n+    background: rgba(25, 137, 250, 0.2);\r\n+  }\r\n+}\r\n+\r\n+/* 响应式设计 */\r\n+@media (max-width: 768px) {\r\n+  .top-navigation {\r\n+    height: 60px !important; /* 移动端稍微降低高度但仍比默认高 */\r\n+  }\r\n+\r\n+  .top-navigation :deep(.van-nav-bar__content) {\r\n+    height: 60px !important;\r\n+  }\r\n+\r\n+  .top-navigation :deep(.van-nav-bar__left),\r\n+  .top-navigation :deep(.van-nav-bar__title),\r\n+  .top-navigation :deep(.van-nav-bar__right) {\r\n+    height: 60px !important;\r\n+  }\r\n+\r\n+  .nav-right {\r\n+    gap: 8px;\r\n+  }\r\n+\r\n+  .nav-points {\r\n+    padding: 6px 10px;\r\n+    min-width: 50px;\r\n+    min-height: 40px;\r\n+  }\r\n+\r\n+  .nav-user > div {\r\n+    padding: 6px 10px;\r\n+    min-height: 40px;\r\n+    min-width: 40px;\r\n+  }\r\n+\r\n+  .nav-logo {\r\n+    padding: 6px 10px;\r\n+    min-height: 40px;\r\n+    min-width: 40px;\r\n+  }\r\n+\r\n+  .points-text,\r\n+  .user-text {\r\n+    font-size: 11px;\r\n+  }\r\n+}\r\n+\r\n+/* Add new styles for the branding */\r\n+.nav-branding {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  gap: 8px;\r\n+  cursor: pointer;\r\n+}\r\n+\r\n+.brand-text {\r\n+  font-weight: 600;\r\n+  font-size: 16px;\r\n+  color: var(--text-color, #fff);\r\n+}\r\n+\r\n+.palette-emoji {\r\n+  font-size: 18px;\r\n+  line-height: 1;\r\n+}\r\n+\r\n+/* Add styles for back button */\r\n+.back-button {\r\n+  display: flex;\r\n+  align-items: center;\r\n+  justify-content: center;\r\n+  min-width: 44px;\r\n+  min-height: 64px; /* 匹配导航栏高度 */\r\n+  cursor: pointer;\r\n+}\r\n+</style>\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1753639374027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,9 @@\n import { authApi } from '../services/api.js'\r\n import levelCardPointsManager from '../utils/levelCardPointsManager.js'\r\n import PointsModal from './PointsModal.vue'\r\n import AuthModal from './AuthModal.vue'\r\n+import eventBus, { EVENTS } from '../utils/eventBus.js'\r\n \r\n // 定义props\r\n const props = defineProps({\r\n   title: {\r\n"
                },
                {
                    "date": 1753639389634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,14 +309,30 @@\n }\r\n \r\n // 移除跨标签页同步逻辑\r\n \r\n+// 监听积分更新事件\r\n+const handlePointsUpdateEvent = async () => {\r\n+  console.log('🔄 收到积分更新事件，刷新积分显示')\r\n+  await updatePointsStatus()\r\n+}\r\n+\r\n // 组件挂载时初始化\r\n onMounted(() => {\r\n   initUserInfo()\r\n   updatePointsStatus()\r\n+\r\n+  // 监听积分相关事件\r\n+  eventBus.on(EVENTS.POINTS_UPDATED, handlePointsUpdateEvent)\r\n+  eventBus.on(EVENTS.POINTS_CONSUMED, handlePointsUpdateEvent)\r\n })\r\n \r\n+// 组件卸载时清理事件监听\r\n+onUnmounted(() => {\r\n+  eventBus.off(EVENTS.POINTS_UPDATED, handlePointsUpdateEvent)\r\n+  eventBus.off(EVENTS.POINTS_CONSUMED, handlePointsUpdateEvent)\r\n+})\r\n+\r\n // 暴露给父组件的方法\r\n defineExpose({\r\n   updatePointsStatus,\r\n   getCurrentPoints: () => pointsStatus.current,\r\n"
                }
            ],
            "date": 1752290874113,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"top-navigation\">\n    <!-- 积分显示（左边） -->\n    <div class=\"nav-item nav-points\" @click=\"showPointsModal = true\" title=\"点击查看积分详情\">\n      <div class=\"nav-icon\">\n        <van-icon name=\"diamond-o\" size=\"18\" />\n      </div>\n      <span class=\"nav-text\">{{ pointsStatus.current }}</span>\n    </div>\n\n    <!-- 用户信息（右边） -->\n    <div class=\"nav-item nav-user\">\n      <!-- 未登录状态 -->\n      <div v-if=\"!isLoggedIn\" class=\"nav-login\" @click=\"showLoginModal\" title=\"点击登录\">\n        <div class=\"nav-icon\">\n          <van-icon name=\"user-o\" size=\"18\" />\n        </div>\n        <span class=\"nav-text\">登录</span>\n      </div>\n\n      <!-- 已登录状态 -->\n      <div v-else class=\"nav-avatar\" @click=\"goToProfile\" title=\"点击进入个人中心\">\n        <div class=\"nav-icon\">\n          <van-icon name=\"user-o\" size=\"18\" />\n        </div>\n      </div>\n    </div>\n\n    <!-- 积分弹窗 -->\n    <PointsModal\n      v-model:show=\"showPointsModal\"\n      @points-updated=\"handlePointsUpdated\"\n    />\n\n    <!-- 登录注册弹窗 -->\n    <AuthModal\n      v-model:show=\"showAuthModal\"\n      :default-mode=\"authMode\"\n      @success=\"handleAuthSuccess\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, onMounted, onUnmounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { Toast } from 'vant'\nimport { authApi } from '../services/api.js'\nimport levelCardPointsManager from '../utils/levelCardPointsManager.js'\nimport PointsModal from './PointsModal.vue'\nimport AuthModal from './AuthModal.vue'\n\n// 定义事件\nconst emit = defineEmits(['login', 'logout'])\n\n// 路由\nconst router = useRouter()\n\n// 响应式数据\nconst showPointsModal = ref(false)\nconst showAuthModal = ref(false)\nconst authMode = ref('login')\nconst loading = ref(false)\n\n// 用户信息\nconst userInfo = ref(null)\nconst isLoggedIn = computed(() => {\n  const hasToken = authApi.isLoggedIn()\n  const hasUserInfo = !!userInfo.value\n  return hasToken && hasUserInfo\n})\n\n// 积分状态\nconst pointsStatus = reactive({\n  current: 0,\n  total_points: 0,\n  cards_count: 0,\n  canGenerate: false,\n  generationCost: 20,\n  isLoggedIn: false\n})\n\n// 定时器\nlet statusUpdateTimer = null\n\n// 更新积分状态\nconst updatePointsStatus = async () => {\n  // 检查登录状态，如果未登录则不发送API请求\n  if (!levelCardPointsManager.isLoggedIn()) {\n    Object.assign(pointsStatus, {\n      current: 0,\n      total_points: 0,\n      cards_count: 0,\n      canGenerate: false,\n      generationCost: 20,\n      isLoggedIn: false\n    })\n    return\n  }\n\n  try {\n    const newStatus = await levelCardPointsManager.getPointsStatus()\n    Object.assign(pointsStatus, newStatus)\n  } catch (error) {\n    console.error('更新积分状态失败:', error)\n    // 认证错误处理\n    if (error.message && (error.message.includes('令牌') || error.message.includes('401'))) {\n      Object.assign(pointsStatus, {\n        current: 0,\n        total_points: 0,\n        cards_count: 0,\n        canGenerate: false,\n        generationCost: 20,\n        isLoggedIn: false\n      })\n    }\n  }\n}\n\n// 显示登录弹窗\nconst showLoginModal = () => {\n  authMode.value = 'login'\n  showAuthModal.value = true\n}\n\n// 处理认证成功\nconst handleAuthSuccess = (data) => {\n  console.log('认证成功，更新用户信息:', data)\n\n  // 立即更新用户信息\n  userInfo.value = data.user\n\n  // 确保localStorage中的数据是最新的\n  if (data.user) {\n    localStorage.setItem('user_info', JSON.stringify(data.user))\n  }\n\n  // 立即更新积分状态中的登录状态\n  pointsStatus.isLoggedIn = true\n\n  // 触发父组件的登录事件\n  emit('login', data)\n\n  // 延迟更新积分状态，确保登录状态已同步\n  setTimeout(() => {\n    updatePointsStatus()\n  }, 100)\n\n  // 关闭弹窗\n  showAuthModal.value = false\n}\n\n// 跳转到个人中心\nconst goToProfile = () => {\n  router.push('/profile')\n}\n\n// 处理积分更新\nconst handlePointsUpdated = () => {\n  updatePointsStatus()\n}\n\n// 初始化用户信息\nconst initUserInfo = () => {\n  console.log('初始化用户信息...')\n  const token = authApi.getToken()\n  const localUserInfo = authApi.getLocalUserInfo()\n\n  console.log('Token存在:', !!token)\n  console.log('本地用户信息:', localUserInfo)\n\n  if (token && localUserInfo) {\n    userInfo.value = localUserInfo\n    console.log('设置用户信息:', userInfo.value)\n  } else {\n    console.log('未找到有效的登录信息')\n    userInfo.value = null\n  }\n}\n\n// 监听localStorage变化\nconst handleStorageChange = (event) => {\n  console.log('localStorage变化:', event)\n  if (event.key === 'auth_token' || event.key === 'user_info') {\n    console.log('认证相关数据变化，重新初始化')\n    initUserInfo()\n    updatePointsStatus()\n  }\n}\n\n// 组件挂载时初始化\nonMounted(() => {\n  initUserInfo()\n  updatePointsStatus()\n\n  // 监听storage事件（跨标签页同步）\n  window.addEventListener('storage', handleStorageChange)\n\n  // 每30秒更新一次状态\n  statusUpdateTimer = setInterval(updatePointsStatus, 30000)\n})\n\n// 组件卸载时清理\nonUnmounted(() => {\n  window.removeEventListener('storage', handleStorageChange)\n  if (statusUpdateTimer) {\n    clearInterval(statusUpdateTimer)\n  }\n})\n\n// 暴露给父组件的方法\ndefineExpose({\n  updatePointsStatus,\n  getCurrentPoints: () => pointsStatus.current,\n  hasEnoughPoints: () => pointsStatus.canGenerate\n})\n</script>\n\n<style scoped>\n.top-navigation {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  z-index: 1000;\n}\n\n.nav-item {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 12px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 20px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.nav-item:hover {\n  background: rgba(255, 255, 255, 1);\n  border-color: #1989fa;\n  box-shadow: 0 4px 12px rgba(25, 137, 250, 0.2);\n  transform: translateY(-1px);\n}\n\n.nav-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  color: #1989fa;\n}\n\n.nav-text {\n  font-size: 14px;\n  font-weight: 500;\n  color: #323233;\n  white-space: nowrap;\n}\n\n.nav-points {\n  order: 1; /* 积分在左边 */\n}\n\n.nav-user {\n  order: 2; /* 用户在右边 */\n}\n\n.nav-login {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.nav-avatar {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  background: linear-gradient(135deg, #1989fa, #1976d2);\n  border-radius: 50%;\n  color: white;\n  margin: -4px;\n}\n\n.nav-avatar:hover {\n  background: linear-gradient(135deg, #1976d2, #1565c0);\n  transform: scale(1.05);\n}\n\n/* 深色主题适配 */\n@media (prefers-color-scheme: dark) {\n  .nav-item {\n    background: rgba(30, 30, 30, 0.95);\n    border-color: rgba(255, 255, 255, 0.1);\n  }\n\n  .nav-item:hover {\n    background: rgba(40, 40, 40, 1);\n    border-color: #1989fa;\n  }\n\n  .nav-text {\n    color: #ffffff;\n  }\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .top-navigation {\n    top: 15px;\n    right: 15px;\n    gap: 8px;\n  }\n\n  .nav-item {\n    padding: 6px 10px;\n  }\n\n  .nav-text {\n    font-size: 13px;\n  }\n\n  .nav-icon {\n    width: 20px;\n    height: 20px;\n  }\n}\n</style>\n"
        }
    ]
}
{
    "sourceFile": "client/src/components/PointsDisplay.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1752286351267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752286385556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,8 +282,14 @@\n           </div>\r\n         </div>\r\n       </div>\r\n     </van-popup>\r\n+\r\n+    <!-- 积分弹窗 -->\r\n+    <PointsModal\r\n+      v-model:show=\"showPointsModal\"\r\n+      @points-updated=\"handlePointsUpdated\"\r\n+    />\r\n   </div>\r\n </template>\r\n \r\n <script setup>\r\n"
                },
                {
                    "date": 1752286398454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -295,8 +295,9 @@\n <script setup>\r\n import { ref, reactive, onMounted, onUnmounted } from 'vue'\r\n import { Toast } from 'vant'\r\n import pointsManager from '../utils/pointsManager.js'\r\n+import PointsModal from './PointsModal.vue'\r\n \r\n // Props\r\n const props = defineProps({\r\n   compact: {\r\n"
                },
                {
                    "date": 1752286412508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,8 +313,9 @@\n const pointsStatus = reactive(pointsManager.getPointsStatus())\r\n const showPurchaseModal = ref(false)\r\n const showPaymentModal = ref(false)\r\n const showDetailsModal = ref(false)\r\n+const showPointsModal = ref(false)\r\n const selectedPayment = ref('wechat')\r\n const generating = ref(false)\r\n const checkingPayment = ref(false)\r\n const currentOrderId = ref('')\r\n"
                },
                {
                    "date": 1752286435787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -449,8 +449,21 @@\n   paymentStatusText.value = '等待支付...'\r\n   checkingPayment.value = false\r\n }\r\n \r\n+// 处理积分更新（等级卡绑定成功后）\r\n+const handlePointsUpdated = (data) => {\r\n+  console.log('积分已更新:', data)\r\n+\r\n+  // 更新本地积分状态\r\n+  updatePointsStatus()\r\n+\r\n+  // 显示成功提示\r\n+  if (data.pointsAdded) {\r\n+    Toast.success(`绑定成功！获得 ${data.pointsAdded} 积分`)\r\n+  }\r\n+}\r\n+\r\n // 格式化日期\r\n const formatDate = (timestamp) => {\r\n   const date = new Date(timestamp)\r\n   return `${date.getMonth() + 1}/${date.getDate()} ${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`\r\n"
                },
                {
                    "date": 1752286511133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -294,9 +294,9 @@\n \r\n <script setup>\r\n import { ref, reactive, onMounted, onUnmounted } from 'vue'\r\n import { Toast } from 'vant'\r\n-import pointsManager from '../utils/pointsManager.js'\r\n+import levelCardPointsManager from '../utils/levelCardPointsManager.js'\r\n import PointsModal from './PointsModal.vue'\r\n \r\n // Props\r\n const props = defineProps({\r\n"
                },
                {
                    "date": 1752286525302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,9 +309,16 @@\n // 计算是否为紧凑模式\r\n const isCompact = ref(props.compact)\r\n \r\n // 响应式数据\r\n-const pointsStatus = reactive(pointsManager.getPointsStatus())\r\n+const pointsStatus = reactive({\r\n+  current: 0,\r\n+  total_points: 0,\r\n+  cards_count: 0,\r\n+  canGenerate: false,\r\n+  generationCost: 20,\r\n+  isLoggedIn: false\r\n+})\r\n const showPurchaseModal = ref(false)\r\n const showPaymentModal = ref(false)\r\n const showDetailsModal = ref(false)\r\n const showPointsModal = ref(false)\r\n"
                },
                {
                    "date": 1752286555236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -349,11 +349,15 @@\n   }\r\n })\r\n \r\n // 更新点数状态\r\n-const updatePointsStatus = () => {\r\n-  const newStatus = pointsManager.getPointsStatus()\r\n-  Object.assign(pointsStatus, newStatus)\r\n+const updatePointsStatus = async () => {\r\n+  try {\r\n+    const newStatus = await levelCardPointsManager.getPointsStatus()\r\n+    Object.assign(pointsStatus, newStatus)\r\n+  } catch (error) {\r\n+    console.error('更新积分状态失败:', error)\r\n+  }\r\n }\r\n \r\n // 生成付款码\r\n const generatePaymentCode = async () => {\r\n"
                },
                {
                    "date": 1752286866474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -422,29 +422,27 @@\n   }\r\n }\r\n \r\n // 处理支付成功\r\n-const handlePaymentSuccess = () => {\r\n+const handlePaymentSuccess = async () => {\r\n   try {\r\n-    const result = pointsManager.addExperienceCardPoints()\r\n-\r\n     // 清理定时器\r\n     if (paymentCheckTimer) {\r\n       clearInterval(paymentCheckTimer)\r\n       paymentCheckTimer = null\r\n     }\r\n \r\n     // 更新状态\r\n-    updatePointsStatus()\r\n+    await updatePointsStatus()\r\n \r\n     // 关闭模态框\r\n     closePaymentModal()\r\n \r\n     // 显示成功消息\r\n-    Toast.success(`充值成功！获得 ${result.added} 体验点`)\r\n+    Toast.success('支付成功！请使用等级卡绑定功能获得积分')\r\n \r\n   } catch (error) {\r\n-    Toast.fail('充值失败，请联系客服')\r\n+    Toast.fail('处理支付失败，请联系客服')\r\n   }\r\n }\r\n \r\n // 关闭支付模态框\r\n"
                },
                {
                    "date": 1752286884477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,13 +459,13 @@\n   checkingPayment.value = false\r\n }\r\n \r\n // 处理积分更新（等级卡绑定成功后）\r\n-const handlePointsUpdated = (data) => {\r\n+const handlePointsUpdated = async (data) => {\r\n   console.log('积分已更新:', data)\r\n \r\n   // 更新本地积分状态\r\n-  updatePointsStatus()\r\n+  await updatePointsStatus()\r\n \r\n   // 显示成功提示\r\n   if (data.pointsAdded) {\r\n     Toast.success(`绑定成功！获得 ${data.pointsAdded} 积分`)\r\n"
                },
                {
                    "date": 1752286899820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -481,9 +481,19 @@\n // 暴露给父组件的方法\r\n defineExpose({\r\n   updatePointsStatus,\r\n   getCurrentPoints: () => pointsStatus.current,\r\n-  hasEnoughPoints: () => pointsStatus.canGenerate\r\n+  hasEnoughPoints: () => pointsStatus.canGenerate,\r\n+  consumePoints: async (amount, description) => {\r\n+    try {\r\n+      await levelCardPointsManager.consumePoints(amount, description)\r\n+      await updatePointsStatus()\r\n+      return true\r\n+    } catch (error) {\r\n+      console.error('消耗积分失败:', error)\r\n+      throw error\r\n+    }\r\n+  }\r\n })\r\n </script>\r\n \r\n <style scoped>\r\n"
                },
                {
                    "date": 1752288005621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -355,8 +355,19 @@\n     const newStatus = await levelCardPointsManager.getPointsStatus()\r\n     Object.assign(pointsStatus, newStatus)\r\n   } catch (error) {\r\n     console.error('更新积分状态失败:', error)\r\n+    // 如果是认证错误，重置为未登录状态\r\n+    if (error.message && (error.message.includes('令牌') || error.message.includes('401'))) {\r\n+      Object.assign(pointsStatus, {\r\n+        current: 0,\r\n+        total_points: 0,\r\n+        cards_count: 0,\r\n+        canGenerate: false,\r\n+        generationCost: 20,\r\n+        isLoggedIn: false\r\n+      })\r\n+    }\r\n   }\r\n }\r\n \r\n // 生成付款码\r\n"
                },
                {
                    "date": 1752288488658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -350,8 +350,21 @@\n })\r\n \r\n // 更新点数状态\r\n const updatePointsStatus = async () => {\r\n+  // 检查登录状态，如果未登录则不发送API请求\r\n+  if (!levelCardPointsManager.isLoggedIn()) {\r\n+    Object.assign(pointsStatus, {\r\n+      current: 0,\r\n+      total_points: 0,\r\n+      cards_count: 0,\r\n+      canGenerate: false,\r\n+      generationCost: 20,\r\n+      isLoggedIn: false\r\n+    })\r\n+    return\r\n+  }\r\n+\r\n   try {\r\n     const newStatus = await levelCardPointsManager.getPointsStatus()\r\n     Object.assign(pointsStatus, newStatus)\r\n   } catch (error) {\r\n"
                },
                {
                    "date": 1752288804814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,8 @@\n       <div class=\"compact-main\">\r\n         <span class=\"points-icon\">💎</span>\r\n         <span class=\"points-value\">{{ pointsStatus.current }}</span>\r\n       </div>\r\n-      <div class=\"compact-status\" v-if=\"!pointsStatus.canGenerate\">\r\n-        <span class=\"status-text\">点数不足</span>\r\n-      </div>\r\n     </div>\r\n \r\n     <!-- 完整模式：原有显示 -->\r\n     <template v-else>\r\n"
                }
            ],
            "date": 1752286351267,
            "name": "Commit-0",
            "content": "<template>\r\n  <div class=\"points-display\" :class=\"{ 'compact': isCompact }\">\r\n    <!-- 紧凑模式：右上角显示 -->\r\n    <div v-if=\"isCompact\" class=\"points-compact\" @click=\"showPointsModal = true\" title=\"点击查看积分详情\">\r\n      <div class=\"compact-main\">\r\n        <span class=\"points-icon\">💎</span>\r\n        <span class=\"points-value\">{{ pointsStatus.current }}</span>\r\n      </div>\r\n      <div class=\"compact-status\" v-if=\"!pointsStatus.canGenerate\">\r\n        <span class=\"status-text\">点数不足</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 完整模式：原有显示 -->\r\n    <template v-else>\r\n      <div class=\"points-info\">\r\n        <div class=\"points-main\">\r\n          <span class=\"points-icon\">💎</span>\r\n          <span class=\"points-value\">{{ pointsStatus.current }}</span>\r\n          <span class=\"points-label\">体验点</span>\r\n        </div>\r\n\r\n        <div class=\"points-details\">\r\n          <div class=\"daily-info\">\r\n            <span class=\"daily-label\">今日免费:</span>\r\n            <span class=\"daily-value\">{{ pointsStatus.dailyRemaining }}/{{ pointsStatus.dailyFreePoints }}</span>\r\n          </div>\r\n\r\n          <div class=\"cost-info\">\r\n            <span class=\"cost-label\">每次消耗:</span>\r\n            <span class=\"cost-value\">{{ pointsStatus.generationCost }}点</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"points-actions\">\r\n        <van-button\r\n          v-if=\"!pointsStatus.canGenerate\"\r\n          @click=\"showPurchaseModal = true\"\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          round\r\n          class=\"recharge-btn\"\r\n        >\r\n          <span class=\"btn-icon\">🎫</span>\r\n          充值体验卡\r\n        </van-button>\r\n\r\n        <van-button\r\n          v-else\r\n          @click=\"showDetailsModal = true\"\r\n          type=\"default\"\r\n          size=\"small\"\r\n          plain\r\n          round\r\n          class=\"details-btn\"\r\n        >\r\n          详情\r\n        </van-button>\r\n      </div>\r\n    </template>\r\n\r\n    <!-- 购买体验卡模态框 -->\r\n    <van-popup\r\n      v-model:show=\"showPurchaseModal\"\r\n      position=\"center\"\r\n      :style=\"{ width: '90%', maxWidth: '400px' }\"\r\n      round\r\n    >\r\n      <div class=\"purchase-modal\">\r\n        <div class=\"modal-header\">\r\n          <h3 class=\"modal-title\">\r\n            <span class=\"title-icon\">🎫</span>\r\n            购买体验卡\r\n          </h3>\r\n          <van-icon\r\n            name=\"cross\"\r\n            @click=\"showPurchaseModal = false\"\r\n            class=\"close-btn\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"modal-content\">\r\n          <div class=\"card-info\">\r\n            <div class=\"card-item\">\r\n              <span class=\"card-icon\">💎</span>\r\n              <div class=\"card-details\">\r\n                <div class=\"card-title\">体验卡</div>\r\n                <div class=\"card-desc\">获得 {{ pointsStatus.experienceCardPoints }} 体验点</div>\r\n              </div>\r\n              <div class=\"card-price\">¥{{ pointsStatus.experienceCardPrice }}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"payment-section\">\r\n            <h4 class=\"payment-title\">支付方式</h4>\r\n            <div class=\"payment-methods\">\r\n              <div\r\n                class=\"payment-method\"\r\n                :class=\"{ active: selectedPayment === 'wechat' }\"\r\n                @click=\"selectedPayment = 'wechat'\"\r\n              >\r\n                <span class=\"payment-icon\">💚</span>\r\n                <span class=\"payment-name\">微信支付</span>\r\n              </div>\r\n              <div\r\n                class=\"payment-method\"\r\n                :class=\"{ active: selectedPayment === 'alipay' }\"\r\n                @click=\"selectedPayment = 'alipay'\"\r\n              >\r\n                <span class=\"payment-icon\">💙</span>\r\n                <span class=\"payment-name\">支付宝</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"modal-actions\">\r\n            <van-button\r\n              @click=\"generatePaymentCode\"\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              round\r\n              block\r\n              :loading=\"generating\"\r\n            >\r\n              {{ generating ? '生成中...' : '生成付款码' }}\r\n            </van-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </van-popup>\r\n\r\n    <!-- 付款码模态框 -->\r\n    <van-popup\r\n      v-model:show=\"showPaymentModal\"\r\n      position=\"center\"\r\n      :style=\"{ width: '90%', maxWidth: '350px' }\"\r\n      round\r\n    >\r\n      <div class=\"payment-modal\">\r\n        <div class=\"modal-header\">\r\n          <h3 class=\"modal-title\">\r\n            <span class=\"title-icon\">{{ selectedPayment === 'wechat' ? '💚' : '💙' }}</span>\r\n            {{ selectedPayment === 'wechat' ? '微信支付' : '支付宝' }}\r\n          </h3>\r\n          <van-icon\r\n            name=\"cross\"\r\n            @click=\"closePaymentModal\"\r\n            class=\"close-btn\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"modal-content\">\r\n          <div class=\"qr-section\">\r\n            <div class=\"qr-code\">\r\n              <div class=\"qr-placeholder\">\r\n                <span class=\"qr-icon\">📱</span>\r\n                <div class=\"qr-text\">\r\n                  <div>请使用{{ selectedPayment === 'wechat' ? '微信' : '支付宝' }}扫码支付</div>\r\n                  <div class=\"qr-amount\">¥{{ pointsStatus.experienceCardPrice }}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"payment-info\">\r\n            <div class=\"info-item\">\r\n              <span class=\"info-label\">商品:</span>\r\n              <span class=\"info-value\">体验卡 ({{ pointsStatus.experienceCardPoints }}点)</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"info-label\">金额:</span>\r\n              <span class=\"info-value\">¥{{ pointsStatus.experienceCardPrice }}</span>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"info-label\">订单号:</span>\r\n              <span class=\"info-value\">{{ currentOrderId }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"payment-status\">\r\n            <van-loading v-if=\"checkingPayment\" size=\"20px\" />\r\n            <span class=\"status-text\">{{ paymentStatusText }}</span>\r\n          </div>\r\n\r\n          <div class=\"modal-actions\">\r\n            <van-button\r\n              @click=\"checkPaymentStatus\"\r\n              type=\"primary\"\r\n              size=\"normal\"\r\n              round\r\n              :loading=\"checkingPayment\"\r\n            >\r\n              {{ checkingPayment ? '检查中...' : '我已支付' }}\r\n            </van-button>\r\n            <van-button\r\n              @click=\"closePaymentModal\"\r\n              type=\"default\"\r\n              size=\"normal\"\r\n              round\r\n            >\r\n              取消支付\r\n            </van-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </van-popup>\r\n\r\n    <!-- 点数详情模态框 -->\r\n    <van-popup\r\n      v-model:show=\"showDetailsModal\"\r\n      position=\"center\"\r\n      :style=\"{ width: '90%', maxWidth: '400px' }\"\r\n      round\r\n    >\r\n      <div class=\"details-modal\">\r\n        <div class=\"modal-header\">\r\n          <h3 class=\"modal-title\">\r\n            <span class=\"title-icon\">💎</span>\r\n            体验点详情\r\n          </h3>\r\n          <van-icon\r\n            name=\"cross\"\r\n            @click=\"showDetailsModal = false\"\r\n            class=\"close-btn\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"modal-content\">\r\n          <div class=\"status-overview\">\r\n            <div class=\"status-item\">\r\n              <div class=\"status-value\">{{ pointsStatus.current }}</div>\r\n              <div class=\"status-label\">当前点数</div>\r\n            </div>\r\n            <div class=\"status-item\">\r\n              <div class=\"status-value\">{{ pointsStatus.dailyRemaining }}</div>\r\n              <div class=\"status-label\">今日免费剩余</div>\r\n            </div>\r\n            <div class=\"status-item\">\r\n              <div class=\"status-value\">{{ pointsStatus.totalUsedToday }}</div>\r\n              <div class=\"status-label\">今日已用</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"rules-section\">\r\n            <h4 class=\"rules-title\">使用规则</h4>\r\n            <ul class=\"rules-list\">\r\n              <li>每日免费获得 {{ pointsStatus.dailyFreePoints }} 体验点</li>\r\n              <li>每次生成图片消耗 {{ pointsStatus.generationCost }} 体验点</li>\r\n              <li>体验卡可获得 {{ pointsStatus.experienceCardPoints }} 体验点</li>\r\n              <li>免费点数每日0点重置，购买点数永久有效</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div class=\"purchase-history\" v-if=\"pointsStatus.purchaseHistory.length > 0\">\r\n            <h4 class=\"history-title\">购买记录</h4>\r\n            <div class=\"history-list\">\r\n              <div\r\n                v-for=\"item in pointsStatus.purchaseHistory.slice(-3)\"\r\n                :key=\"item.id\"\r\n                class=\"history-item\"\r\n              >\r\n                <div class=\"history-info\">\r\n                  <div class=\"history-type\">体验卡</div>\r\n                  <div class=\"history-date\">{{ formatDate(item.timestamp) }}</div>\r\n                </div>\r\n                <div class=\"history-points\">+{{ item.points }}点</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"modal-actions\">\r\n            <van-button\r\n              @click=\"showPurchaseModal = true; showDetailsModal = false\"\r\n              type=\"primary\"\r\n              size=\"normal\"\r\n              round\r\n              block\r\n            >\r\n              购买体验卡\r\n            </van-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, onUnmounted } from 'vue'\r\nimport { Toast } from 'vant'\r\nimport pointsManager from '../utils/pointsManager.js'\r\n\r\n// Props\r\nconst props = defineProps({\r\n  compact: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\n// 计算是否为紧凑模式\r\nconst isCompact = ref(props.compact)\r\n\r\n// 响应式数据\r\nconst pointsStatus = reactive(pointsManager.getPointsStatus())\r\nconst showPurchaseModal = ref(false)\r\nconst showPaymentModal = ref(false)\r\nconst showDetailsModal = ref(false)\r\nconst selectedPayment = ref('wechat')\r\nconst generating = ref(false)\r\nconst checkingPayment = ref(false)\r\nconst currentOrderId = ref('')\r\nconst paymentStatusText = ref('等待支付...')\r\n\r\n// 定时器\r\nlet statusUpdateTimer = null\r\nlet paymentCheckTimer = null\r\n\r\n// 组件挂载时启动定时器\r\nonMounted(() => {\r\n  updatePointsStatus()\r\n  // 每30秒更新一次状态\r\n  statusUpdateTimer = setInterval(updatePointsStatus, 30000)\r\n})\r\n\r\n// 组件卸载时清理定时器\r\nonUnmounted(() => {\r\n  if (statusUpdateTimer) {\r\n    clearInterval(statusUpdateTimer)\r\n  }\r\n  if (paymentCheckTimer) {\r\n    clearInterval(paymentCheckTimer)\r\n  }\r\n})\r\n\r\n// 更新点数状态\r\nconst updatePointsStatus = () => {\r\n  const newStatus = pointsManager.getPointsStatus()\r\n  Object.assign(pointsStatus, newStatus)\r\n}\r\n\r\n// 生成付款码\r\nconst generatePaymentCode = async () => {\r\n  generating.value = true\r\n\r\n  try {\r\n    // 模拟生成订单\r\n    await new Promise(resolve => setTimeout(resolve, 1000))\r\n\r\n    currentOrderId.value = `EXP${Date.now()}`\r\n    paymentStatusText.value = '等待支付...'\r\n\r\n    showPurchaseModal.value = false\r\n    showPaymentModal.value = true\r\n\r\n    // 开始检查支付状态\r\n    startPaymentCheck()\r\n\r\n  } catch (error) {\r\n    Toast.fail('生成付款码失败，请重试')\r\n  } finally {\r\n    generating.value = false\r\n  }\r\n}\r\n\r\n// 开始支付状态检查\r\nconst startPaymentCheck = () => {\r\n  // 模拟支付检查，实际应该调用后端API\r\n  paymentCheckTimer = setInterval(() => {\r\n    // 这里应该调用真实的支付状态检查API\r\n    // 现在模拟30秒后支付成功\r\n    if (Date.now() - parseInt(currentOrderId.value.replace('EXP', '')) > 30000) {\r\n      handlePaymentSuccess()\r\n    }\r\n  }, 3000)\r\n}\r\n\r\n// 检查支付状态\r\nconst checkPaymentStatus = async () => {\r\n  checkingPayment.value = true\r\n  paymentStatusText.value = '检查支付状态...'\r\n\r\n  try {\r\n    // 模拟检查支付状态\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n\r\n    // 模拟支付成功（实际应该调用后端API）\r\n    const isSuccess = Math.random() > 0.3 // 70%概率成功\r\n\r\n    if (isSuccess) {\r\n      handlePaymentSuccess()\r\n    } else {\r\n      paymentStatusText.value = '未检测到支付，请确认支付后重试'\r\n      Toast.fail('未检测到支付')\r\n    }\r\n\r\n  } catch (error) {\r\n    paymentStatusText.value = '检查失败，请重试'\r\n    Toast.fail('检查支付状态失败')\r\n  } finally {\r\n    checkingPayment.value = false\r\n  }\r\n}\r\n\r\n// 处理支付成功\r\nconst handlePaymentSuccess = () => {\r\n  try {\r\n    const result = pointsManager.addExperienceCardPoints()\r\n\r\n    // 清理定时器\r\n    if (paymentCheckTimer) {\r\n      clearInterval(paymentCheckTimer)\r\n      paymentCheckTimer = null\r\n    }\r\n\r\n    // 更新状态\r\n    updatePointsStatus()\r\n\r\n    // 关闭模态框\r\n    closePaymentModal()\r\n\r\n    // 显示成功消息\r\n    Toast.success(`充值成功！获得 ${result.added} 体验点`)\r\n\r\n  } catch (error) {\r\n    Toast.fail('充值失败，请联系客服')\r\n  }\r\n}\r\n\r\n// 关闭支付模态框\r\nconst closePaymentModal = () => {\r\n  showPaymentModal.value = false\r\n\r\n  if (paymentCheckTimer) {\r\n    clearInterval(paymentCheckTimer)\r\n    paymentCheckTimer = null\r\n  }\r\n\r\n  currentOrderId.value = ''\r\n  paymentStatusText.value = '等待支付...'\r\n  checkingPayment.value = false\r\n}\r\n\r\n// 格式化日期\r\nconst formatDate = (timestamp) => {\r\n  const date = new Date(timestamp)\r\n  return `${date.getMonth() + 1}/${date.getDate()} ${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`\r\n}\r\n\r\n// 暴露给父组件的方法\r\ndefineExpose({\r\n  updatePointsStatus,\r\n  getCurrentPoints: () => pointsStatus.current,\r\n  hasEnoughPoints: () => pointsStatus.canGenerate\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.points-display {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: var(--bg-card);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 12px;\r\n  padding: 12px 16px;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.points-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n}\r\n\r\n.points-main {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.points-icon {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.points-value {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: var(--primary-color);\r\n}\r\n\r\n.points-label {\r\n  color: var(--text-light);\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.points-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n  font-size: 0.8rem;\r\n  color: var(--text-light);\r\n}\r\n\r\n.daily-info, .cost-info {\r\n  display: flex;\r\n  gap: 4px;\r\n}\r\n\r\n.daily-value, .cost-value {\r\n  color: var(--text-color);\r\n  font-weight: 500;\r\n}\r\n\r\n.points-actions {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.recharge-btn {\r\n  background: linear-gradient(135deg, var(--primary-color) 0%, var(--success-color) 100%);\r\n  border: none;\r\n}\r\n\r\n.btn-icon {\r\n  margin-right: 4px;\r\n}\r\n\r\n/* 紧凑模式样式 */\r\n.points-display.compact {\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  background: transparent;\r\n  border: none;\r\n}\r\n\r\n.points-compact {\r\n  background: var(--bg-card);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 20px;\r\n  padding: 8px 12px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  backdrop-filter: blur(10px);\r\n  box-shadow: var(--shadow-md);\r\n}\r\n\r\n.points-compact:hover {\r\n  background: var(--bg-secondary);\r\n  border-color: var(--primary-color);\r\n  transform: translateY(-2px);\r\n  box-shadow: var(--shadow-lg);\r\n}\r\n\r\n.compact-main {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n}\r\n\r\n.compact-main .points-icon {\r\n  font-size: 1rem;\r\n}\r\n\r\n.compact-main .points-value {\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: var(--primary-color);\r\n}\r\n\r\n.compact-status {\r\n  margin-top: 2px;\r\n  text-align: center;\r\n}\r\n\r\n.status-text {\r\n  font-size: 0.7rem;\r\n  color: var(--error-color);\r\n  font-weight: 500;\r\n}\r\n\r\n/* 模态框样式 */\r\n.purchase-modal,\r\n.payment-modal,\r\n.details-modal {\r\n  background: var(--bg-card);\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.modal-title {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin: 0;\r\n  color: var(--text-color);\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.title-icon {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.close-btn {\r\n  color: var(--text-light);\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n  padding: 4px;\r\n  border-radius: 4px;\r\n  transition: var(--transition);\r\n}\r\n\r\n.close-btn:hover {\r\n  background: var(--bg-hover);\r\n  color: var(--text-color);\r\n}\r\n\r\n.modal-content {\r\n  padding: 20px;\r\n}\r\n\r\n/* 体验卡信息 */\r\n.card-info {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.card-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  padding: 16px;\r\n  background: var(--bg-secondary);\r\n  border-radius: 12px;\r\n  border: 2px solid var(--primary-color);\r\n}\r\n\r\n.card-icon {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.card-details {\r\n  flex: 1;\r\n}\r\n\r\n.card-title {\r\n  color: var(--text-color);\r\n  font-weight: 600;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.card-desc {\r\n  color: var(--text-light);\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.card-price {\r\n  color: var(--primary-color);\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 支付方式 */\r\n.payment-section {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.payment-title {\r\n  color: var(--text-color);\r\n  margin: 0 0 12px 0;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.payment-methods {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 12px;\r\n}\r\n\r\n.payment-method {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 12px;\r\n  background: var(--bg-secondary);\r\n  border: 2px solid var(--border-color);\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: var(--transition);\r\n}\r\n\r\n.payment-method.active {\r\n  border-color: var(--primary-color);\r\n  background: rgba(var(--primary-color-rgb), 0.1);\r\n}\r\n\r\n.payment-icon {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.payment-name {\r\n  color: var(--text-color);\r\n  font-weight: 500;\r\n}\r\n\r\n/* 二维码区域 */\r\n.qr-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.qr-code {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.qr-placeholder {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 200px;\r\n  height: 200px;\r\n  background: var(--bg-secondary);\r\n  border: 2px dashed var(--border-color);\r\n  border-radius: 12px;\r\n  text-align: center;\r\n}\r\n\r\n.qr-icon {\r\n  font-size: 3rem;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.qr-text {\r\n  color: var(--text-light);\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.qr-amount {\r\n  color: var(--primary-color);\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  margin-top: 8px;\r\n}\r\n\r\n/* 支付信息 */\r\n.payment-info {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 8px 0;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.info-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.info-label {\r\n  color: var(--text-light);\r\n}\r\n\r\n.info-value {\r\n  color: var(--text-color);\r\n  font-weight: 500;\r\n}\r\n\r\n/* 支付状态 */\r\n.payment-status {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  padding: 12px;\r\n  background: var(--bg-secondary);\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.status-text {\r\n  color: var(--text-light);\r\n  font-size: 0.9rem;\r\n}\r\n\r\n/* 状态概览 */\r\n.status-overview {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 16px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.status-item {\r\n  text-align: center;\r\n  padding: 16px;\r\n  background: var(--bg-secondary);\r\n  border-radius: 12px;\r\n}\r\n\r\n.status-value {\r\n  color: var(--primary-color);\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.status-label {\r\n  color: var(--text-light);\r\n  font-size: 0.8rem;\r\n}\r\n\r\n/* 规则说明 */\r\n.rules-section {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.rules-title {\r\n  color: var(--text-color);\r\n  margin: 0 0 12px 0;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.rules-list {\r\n  margin: 0;\r\n  padding-left: 16px;\r\n  color: var(--text-light);\r\n  font-size: 0.9rem;\r\n  line-height: 1.6;\r\n}\r\n\r\n.rules-list li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n/* 购买历史 */\r\n.purchase-history {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.history-title {\r\n  color: var(--text-color);\r\n  margin: 0 0 12px 0;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.history-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n}\r\n\r\n.history-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px;\r\n  background: var(--bg-secondary);\r\n  border-radius: 8px;\r\n}\r\n\r\n.history-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n}\r\n\r\n.history-type {\r\n  color: var(--text-color);\r\n  font-weight: 500;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.history-date {\r\n  color: var(--text-light);\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.history-points {\r\n  color: var(--success-color);\r\n  font-weight: 600;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  gap: 12px;\r\n}\r\n\r\n.modal-actions .van-button {\r\n  flex: 1;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .points-display {\r\n    flex-direction: column;\r\n    gap: 12px;\r\n    align-items: stretch;\r\n  }\r\n\r\n  .points-info {\r\n    justify-content: center;\r\n  }\r\n\r\n  .points-actions {\r\n    text-align: center;\r\n  }\r\n\r\n  .status-overview {\r\n    grid-template-columns: 1fr;\r\n    gap: 12px;\r\n  }\r\n\r\n  .payment-methods {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .modal-actions {\r\n    flex-direction: column;\r\n  }\r\n}\r\n</style>\r\n"
        }
    ]
}
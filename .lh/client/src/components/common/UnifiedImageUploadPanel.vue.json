{
    "sourceFile": "client/src/components/common/UnifiedImageUploadPanel.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1752393164890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752393182729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,8 +94,10 @@\n \n <script setup>\n import { ref, computed, watch } from 'vue'\n import { Toast } from 'vant'\n+import SingleImageUpload from './SingleImageUpload.vue'\n+import MultiImageUpload from './MultiImageUpload.vue'\n \n // Props\n const props = defineProps({\n   modelValue: {\n@@ -112,20 +114,19 @@\n   }\n })\n \n // Emits\n-const emit = defineEmits(['update:modelValue', 'change'])\n+const emit = defineEmits(['update:modelValue', 'change', 'error'])\n \n // Refs\n-const fileInput = ref(null)\n-const fileList = ref([])\n const singleImage = ref(null)\n+const multiImages = ref([])\n \n // 计算属性\n const uploadedCount = computed(() => {\n   return props.config.uploadType === 'single'\n     ? (singleImage.value ? 1 : 0)\n-    : fileList.value.length\n+    : multiImages.value.length\n })\n \n // 监听modelValue变化\n watch(() => props.modelValue, (newValue) => {\n"
                },
                {
                    "date": 1752393207456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,102 +132,34 @@\n watch(() => props.modelValue, (newValue) => {\n   if (props.config.uploadType === 'single') {\n     singleImage.value = newValue\n   } else {\n-    fileList.value = Array.isArray(newValue) ? newValue : []\n+    multiImages.value = Array.isArray(newValue) ? newValue : []\n   }\n }, { immediate: true })\n \n // 监听内部数据变化\n-watch([fileList, singleImage], () => {\n+watch([singleImage, multiImages], () => {\n   const value = props.config.uploadType === 'single'\n     ? singleImage.value\n-    : fileList.value\n+    : multiImages.value\n \n   emit('update:modelValue', value)\n   emit('change', value)\n }, { deep: true })\n \n // 方法\n-const triggerUpload = () => {\n-  if (fileInput.value) {\n-    fileInput.value.click()\n-  }\n+const handleSingleImageChange = (imageData, file) => {\n+  singleImage.value = imageData\n }\n \n-const handleFileSelect = (event) => {\n-  const files = Array.from(event.target.files)\n-  if (files.length === 0) return\n-\n-  if (props.config.uploadType === 'single') {\n-    handleSingleFileUpload(files[0])\n-  } else {\n-    handleMultiFileUpload(files)\n-  }\n-\n-  // 清空input\n-  event.target.value = ''\n+const handleMultiImageChange = (images) => {\n+  multiImages.value = images\n }\n \n-const handleSingleFileUpload = (file) => {\n-  if (!beforeRead(file)) return\n-\n-  const reader = new FileReader()\n-  reader.onload = (e) => {\n-    singleImage.value = e.target.result\n-  }\n-  reader.readAsDataURL(file)\n+const handleUploadError = (error) => {\n+  emit('error', error)\n }\n-\n-const handleMultiFileUpload = (files) => {\n-  const validFiles = files.filter(file => beforeRead(file))\n-  const remainingSlots = props.config.maxCount - fileList.value.length\n-  const filesToProcess = validFiles.slice(0, remainingSlots)\n-\n-  filesToProcess.forEach(file => {\n-    const reader = new FileReader()\n-    reader.onload = (e) => {\n-      fileList.value.push({\n-        url: e.target.result,\n-        file: file,\n-        status: 'done'\n-      })\n-    }\n-    reader.readAsDataURL(file)\n-  })\n-\n-  if (validFiles.length > remainingSlots) {\n-    Toast.fail(`最多只能上传 ${props.config.maxCount} 张图片`)\n-  }\n-}\n-\n-const beforeRead = (file) => {\n-  // 检查文件大小\n-  if (file.size > props.config.maxSize) {\n-    Toast.fail(`文件大小不能超过 ${Math.round(props.config.maxSize / 1024 / 1024)}MB`)\n-    return false\n-  }\n-\n-  // 检查文件类型\n-  if (!file.type.startsWith('image/')) {\n-    Toast.fail('请选择图片文件')\n-    return false\n-  }\n-\n-  return true\n-}\n-\n-const removeSingleImage = () => {\n-  singleImage.value = null\n-}\n-\n-const onDelete = (file, detail) => {\n-  fileList.value.splice(detail.index, 1)\n-}\n-\n-const onOversize = () => {\n-  Toast.fail(`文件大小不能超过 ${Math.round(props.config.maxSize / 1024 / 1024)}MB`)\n-}\n </script>\n \n <style scoped>\n .unified-image-upload-panel {\n"
                },
                {
                    "date": 1752393237971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,66 +191,8 @@\n .upload-area {\n   margin-bottom: 16px;\n }\n \n-.upload-slot {\n-  display: flex;\n-  flex-direction: column;\n-  align-items: center;\n-  justify-content: center;\n-  border: 2px dashed rgba(255, 255, 255, 0.2);\n-  border-radius: 8px;\n-  cursor: pointer;\n-  transition: all 0.3s ease;\n-}\n-\n-.single-upload {\n-  height: 120px;\n-  position: relative;\n-  overflow: hidden;\n-}\n-\n-.single-upload:hover:not(.disabled) {\n-  border-color: rgba(255, 255, 255, 0.4);\n-  background: rgba(255, 255, 255, 0.05);\n-}\n-\n-.multi-upload {\n-  height: 80px;\n-  width: 80px;\n-}\n-\n-.upload-text {\n-  font-size: 14px;\n-  color: var(--van-text-color-2);\n-  margin-top: 8px;\n-}\n-\n-.uploaded-image {\n-  width: 100%;\n-  height: 100%;\n-  object-fit: cover;\n-}\n-\n-.image-overlay {\n-  position: absolute;\n-  top: 0;\n-  left: 0;\n-  right: 0;\n-  bottom: 0;\n-  background: rgba(0, 0, 0, 0.5);\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  gap: 16px;\n-  opacity: 0;\n-  transition: opacity 0.3s ease;\n-}\n-\n-.single-upload:hover .image-overlay {\n-  opacity: 1;\n-}\n-\n .status-section {\n   display: flex;\n   flex-direction: column;\n   gap: 8px;\n@@ -285,15 +227,5 @@\n \n .text-warning {\n   color: var(--van-warning-color);\n }\n-\n-.disabled {\n-  opacity: 0.5;\n-  cursor: not-allowed;\n-}\n-\n-.multi-uploader {\n-  --van-uploader-upload-background: transparent;\n-  --van-uploader-upload-border-color: rgba(255, 255, 255, 0.2);\n-}\n </style>\n"
                }
            ],
            "date": 1752393164890,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"unified-image-upload-panel\">\n    <!-- 标题区域 -->\n    <div class=\"panel-header\">\n      <van-icon\n        :name=\"config.icon\"\n        :color=\"config.iconColor\"\n        size=\"18\"\n      />\n      <span class=\"panel-title\">{{ config.title }}</span>\n      <span v-if=\"config.showCount\" class=\"count-badge\">\n        ({{ config.minCount }}-{{ config.maxCount }}张)\n      </span>\n    </div>\n\n    <!-- 上传区域 -->\n    <div class=\"upload-area\">\n      <!-- 单图上传 -->\n      <SingleImageUpload\n        v-if=\"config.uploadType === 'single'\"\n        v-model=\"singleImage\"\n        :upload-text=\"config.uploadText\"\n        :accept=\"config.accept\"\n        :max-size=\"config.maxSize\"\n        :disabled=\"disabled\"\n        :container-height=\"120\"\n        @change=\"handleSingleImageChange\"\n        @error=\"handleUploadError\"\n      />\n\n      <!-- 多图上传 -->\n      <MultiImageUpload\n        v-else\n        v-model=\"multiImages\"\n        :max-count=\"config.maxCount\"\n        :min-count=\"config.minCount\"\n        :upload-text=\"config.uploadText\"\n        :accept=\"config.accept\"\n        :max-size=\"config.maxSize\"\n        :disabled=\"disabled\"\n        :grid-columns=\"4\"\n        @change=\"handleMultiImageChange\"\n        @error=\"handleUploadError\"\n      />\n    </div>\n\n    <!-- 状态信息 -->\n    <div class=\"status-section\">\n      <div class=\"status-item\">\n        <van-icon\n          name=\"photograph\"\n          size=\"16\"\n          :color=\"uploadedCount > 0 ? 'var(--van-success-color)' : 'var(--van-text-color-3)'\"\n        />\n        <span :class=\"{ 'text-success': uploadedCount > 0 }\">\n          已上传 {{ uploadedCount }}/{{ config.maxCount }} 张图片\n        </span>\n      </div>\n\n      <div v-if=\"config.minCount > 0\" class=\"status-item\">\n        <van-icon\n          :name=\"uploadedCount >= config.minCount ? 'success' : 'warning-o'\"\n          size=\"16\"\n          :color=\"uploadedCount >= config.minCount ? 'var(--van-success-color)' : 'var(--van-warning-color)'\"\n        />\n        <span :class=\"{\n          'text-success': uploadedCount >= config.minCount,\n          'text-warning': uploadedCount < config.minCount\n        }\">\n          {{ uploadedCount >= config.minCount ? '已满足上传要求' : `至少需要上传 ${config.minCount} 张图片` }}\n        </span>\n      </div>\n    </div>\n\n    <!-- 提示信息 -->\n    <div v-if=\"config.tips && config.tips.length > 0\" class=\"tips-section\">\n      <div v-for=\"(tip, index) in config.tips\" :key=\"index\" class=\"tip-item\">\n        <van-icon name=\"info-o\" size=\"12\" color=\"var(--van-text-color-3)\" />\n        <span>{{ tip }}</span>\n      </div>\n    </div>\n\n    <!-- 隐藏的文件输入 -->\n    <input\n      ref=\"fileInput\"\n      type=\"file\"\n      :accept=\"config.accept\"\n      :multiple=\"config.uploadType === 'multi'\"\n      style=\"display: none\"\n      @change=\"handleFileSelect\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { Toast } from 'vant'\n\n// Props\nconst props = defineProps({\n  modelValue: {\n    type: [Array, String, null],\n    default: null\n  },\n  config: {\n    type: Object,\n    required: true\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n})\n\n// Emits\nconst emit = defineEmits(['update:modelValue', 'change'])\n\n// Refs\nconst fileInput = ref(null)\nconst fileList = ref([])\nconst singleImage = ref(null)\n\n// 计算属性\nconst uploadedCount = computed(() => {\n  return props.config.uploadType === 'single'\n    ? (singleImage.value ? 1 : 0)\n    : fileList.value.length\n})\n\n// 监听modelValue变化\nwatch(() => props.modelValue, (newValue) => {\n  if (props.config.uploadType === 'single') {\n    singleImage.value = newValue\n  } else {\n    fileList.value = Array.isArray(newValue) ? newValue : []\n  }\n}, { immediate: true })\n\n// 监听内部数据变化\nwatch([fileList, singleImage], () => {\n  const value = props.config.uploadType === 'single'\n    ? singleImage.value\n    : fileList.value\n\n  emit('update:modelValue', value)\n  emit('change', value)\n}, { deep: true })\n\n// 方法\nconst triggerUpload = () => {\n  if (fileInput.value) {\n    fileInput.value.click()\n  }\n}\n\nconst handleFileSelect = (event) => {\n  const files = Array.from(event.target.files)\n  if (files.length === 0) return\n\n  if (props.config.uploadType === 'single') {\n    handleSingleFileUpload(files[0])\n  } else {\n    handleMultiFileUpload(files)\n  }\n\n  // 清空input\n  event.target.value = ''\n}\n\nconst handleSingleFileUpload = (file) => {\n  if (!beforeRead(file)) return\n\n  const reader = new FileReader()\n  reader.onload = (e) => {\n    singleImage.value = e.target.result\n  }\n  reader.readAsDataURL(file)\n}\n\nconst handleMultiFileUpload = (files) => {\n  const validFiles = files.filter(file => beforeRead(file))\n  const remainingSlots = props.config.maxCount - fileList.value.length\n  const filesToProcess = validFiles.slice(0, remainingSlots)\n\n  filesToProcess.forEach(file => {\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      fileList.value.push({\n        url: e.target.result,\n        file: file,\n        status: 'done'\n      })\n    }\n    reader.readAsDataURL(file)\n  })\n\n  if (validFiles.length > remainingSlots) {\n    Toast.fail(`最多只能上传 ${props.config.maxCount} 张图片`)\n  }\n}\n\nconst beforeRead = (file) => {\n  // 检查文件大小\n  if (file.size > props.config.maxSize) {\n    Toast.fail(`文件大小不能超过 ${Math.round(props.config.maxSize / 1024 / 1024)}MB`)\n    return false\n  }\n\n  // 检查文件类型\n  if (!file.type.startsWith('image/')) {\n    Toast.fail('请选择图片文件')\n    return false\n  }\n\n  return true\n}\n\nconst removeSingleImage = () => {\n  singleImage.value = null\n}\n\nconst onDelete = (file, detail) => {\n  fileList.value.splice(detail.index, 1)\n}\n\nconst onOversize = () => {\n  Toast.fail(`文件大小不能超过 ${Math.round(props.config.maxSize / 1024 / 1024)}MB`)\n}\n</script>\n\n<style scoped>\n.unified-image-upload-panel {\n  background: rgba(15, 15, 30, 0.6);\n  border-radius: 12px;\n  border: 1px solid rgba(30, 30, 60, 0.5);\n  padding: 16px;\n  margin-bottom: 16px;\n}\n\n.panel-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 16px;\n  color: var(--van-text-color, #f7f8fa);\n}\n\n.panel-title {\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.count-badge {\n  font-size: 14px;\n  color: var(--van-text-color-2);\n}\n\n.upload-area {\n  margin-bottom: 16px;\n}\n\n.upload-slot {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 2px dashed rgba(255, 255, 255, 0.2);\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.single-upload {\n  height: 120px;\n  position: relative;\n  overflow: hidden;\n}\n\n.single-upload:hover:not(.disabled) {\n  border-color: rgba(255, 255, 255, 0.4);\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.multi-upload {\n  height: 80px;\n  width: 80px;\n}\n\n.upload-text {\n  font-size: 14px;\n  color: var(--van-text-color-2);\n  margin-top: 8px;\n}\n\n.uploaded-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.image-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.single-upload:hover .image-overlay {\n  opacity: 1;\n}\n\n.status-section {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 12px;\n}\n\n.status-item {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  color: var(--van-text-color-2);\n}\n\n.tips-section {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.tip-item {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 12px;\n  color: var(--van-text-color-3);\n}\n\n.text-success {\n  color: var(--van-success-color);\n}\n\n.text-warning {\n  color: var(--van-warning-color);\n}\n\n.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.multi-uploader {\n  --van-uploader-upload-background: transparent;\n  --van-uploader-upload-border-color: rgba(255, 255, 255, 0.2);\n}\n</style>\n"
        }
    ]
}
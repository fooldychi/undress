{
    "sourceFile": "client/src/components/common/MultiImageUpload.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1752393516868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752393530406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,9 +308,9 @@\n .images-grid {\n   display: grid;\n   gap: 8px;\n   margin-bottom: 12px;\n-  v-bind(gridStyle);\n+  grid-template-columns: v-bind(gridColumnsValue);\n }\n \n .image-item,\n .upload-item {\n"
                },
                {
                    "date": 1752393715447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n <template>\n   <div class=\"multi-image-upload\">\n     <!-- 图片网格 -->\n-    <div class=\"images-grid\">\n+    <div class=\"images-grid\" :style=\"{ gridTemplateColumns: gridColumnsValue }\">\n       <!-- 已上传的图片 -->\n       <div\n         v-for=\"(image, index) in imageList\"\n         :key=\"`image-${index}`\"\n"
                },
                {
                    "date": 1752393732889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,9 +308,8 @@\n .images-grid {\n   display: grid;\n   gap: 8px;\n   margin-bottom: 12px;\n-  grid-template-columns: v-bind(gridColumnsValue);\n }\n \n .image-item,\n .upload-item {\n"
                },
                {
                    "date": 1752421922375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -323,14 +323,19 @@\n   width: 100%;\n   height: 100%;\n   position: relative;\n   cursor: pointer;\n+  display: flex;\n+  align-items: center;\n+  justify-content: center;\n }\n \n .uploaded-image {\n-  width: 100%;\n-  height: 100%;\n-  object-fit: cover;\n+  max-width: 100%;\n+  max-height: 100%;\n+  width: auto;\n+  height: auto;\n+  object-fit: contain;\n }\n \n .image-overlay {\n   position: absolute;\n"
                }
            ],
            "date": 1752393516868,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"multi-image-upload\">\n    <!-- 图片网格 -->\n    <div class=\"images-grid\">\n      <!-- 已上传的图片 -->\n      <div\n        v-for=\"(image, index) in imageList\"\n        :key=\"`image-${index}`\"\n        class=\"image-item\"\n      >\n        <div class=\"image-container\">\n          <img\n            :src=\"image.url\"\n            :alt=\"`图片 ${index + 1}`\"\n            class=\"uploaded-image\"\n            @click=\"previewImage(index)\"\n          />\n\n          <!-- 图片操作覆盖层 -->\n          <div class=\"image-overlay\">\n            <van-icon\n              name=\"eye-o\"\n              size=\"16\"\n              color=\"white\"\n              @click.stop=\"previewImage(index)\"\n            />\n            <van-icon\n              name=\"delete\"\n              size=\"16\"\n              color=\"white\"\n              @click.stop=\"removeImage(index)\"\n            />\n          </div>\n\n          <!-- 图片序号 -->\n          <div class=\"image-index\">{{ index + 1 }}</div>\n        </div>\n      </div>\n\n      <!-- 上传按钮 -->\n      <div\n        v-if=\"imageList.length < maxCount\"\n        class=\"upload-item\"\n        :class=\"{ 'disabled': disabled }\"\n        @click=\"!disabled && triggerUpload()\"\n      >\n        <van-icon\n          name=\"plus\"\n          :size=\"iconSize\"\n          :color=\"iconColor\"\n        />\n        <div class=\"upload-text\">{{ uploadText }}</div>\n      </div>\n    </div>\n\n    <!-- 批量操作 -->\n    <div v-if=\"imageList.length > 0\" class=\"batch-actions\">\n      <van-button\n        size=\"small\"\n        type=\"default\"\n        @click=\"clearAll\"\n      >\n        <van-icon name=\"delete-o\" size=\"14\" />\n        清空全部\n      </van-button>\n\n      <van-button\n        size=\"small\"\n        type=\"primary\"\n        @click=\"triggerUpload()\"\n        :disabled=\"disabled || imageList.length >= maxCount\"\n      >\n        <van-icon name=\"plus\" size=\"14\" />\n        继续添加\n      </van-button>\n    </div>\n\n    <!-- 拖拽排序提示 -->\n    <div v-if=\"sortable && imageList.length > 1\" class=\"sort-tip\">\n      <van-icon name=\"info-o\" size=\"12\" />\n      <span>长按图片可拖拽排序</span>\n    </div>\n\n    <!-- 隐藏的文件输入 -->\n    <input\n      ref=\"fileInput\"\n      type=\"file\"\n      :accept=\"accept\"\n      :multiple=\"true\"\n      style=\"display: none\"\n      @change=\"handleFileSelect\"\n    />\n\n    <!-- 图片预览弹窗 -->\n    <van-image-preview\n      v-model:show=\"showPreview\"\n      :images=\"previewImages\"\n      :start-position=\"previewIndex\"\n      @close=\"showPreview = false\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { Toast } from 'vant'\n\n// Props\nconst props = defineProps({\n  modelValue: {\n    type: Array,\n    default: () => []\n  },\n  maxCount: {\n    type: Number,\n    default: 4\n  },\n  minCount: {\n    type: Number,\n    default: 1\n  },\n  uploadText: {\n    type: String,\n    default: '添加图片'\n  },\n  accept: {\n    type: String,\n    default: 'image/*'\n  },\n  maxSize: {\n    type: Number,\n    default: 10 * 1024 * 1024 // 10MB\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  iconSize: {\n    type: [String, Number],\n    default: 24\n  },\n  iconColor: {\n    type: String,\n    default: 'var(--van-text-color-3)'\n  },\n  sortable: {\n    type: Boolean,\n    default: false\n  },\n  gridColumns: {\n    type: Number,\n    default: 4\n  }\n})\n\n// Emits\nconst emit = defineEmits(['update:modelValue', 'change', 'error'])\n\n// 响应式数据\nconst fileInput = ref(null)\nconst imageList = ref([])\nconst showPreview = ref(false)\nconst previewIndex = ref(0)\n\n// 计算属性\nconst previewImages = computed(() => {\n  return imageList.value.map(item => item.url)\n})\n\nconst gridColumnsValue = computed(() => {\n  return `repeat(${props.gridColumns}, 1fr)`\n})\n\n// 监听modelValue变化\nwatch(() => props.modelValue, (newValue) => {\n  if (Array.isArray(newValue)) {\n    imageList.value = newValue.map((item, index) => ({\n      id: `img-${Date.now()}-${index}`,\n      url: typeof item === 'string' ? item : item.url,\n      file: typeof item === 'object' ? item.file : null\n    }))\n  } else {\n    imageList.value = []\n  }\n}, { immediate: true })\n\n// 监听imageList变化\nwatch(imageList, () => {\n  const value = imageList.value.map(item => ({\n    url: item.url,\n    file: item.file\n  }))\n  emit('update:modelValue', value)\n  emit('change', value)\n}, { deep: true })\n\n// 方法\nconst triggerUpload = () => {\n  if (fileInput.value && !props.disabled) {\n    fileInput.value.click()\n  }\n}\n\nconst handleFileSelect = async (event) => {\n  const files = Array.from(event.target.files)\n  if (files.length === 0) return\n\n  // 检查数量限制\n  const remainingSlots = props.maxCount - imageList.value.length\n  if (remainingSlots <= 0) {\n    Toast.fail(`最多只能上传 ${props.maxCount} 张图片`)\n    event.target.value = ''\n    return\n  }\n\n  // 处理文件\n  const validFiles = files.slice(0, remainingSlots).filter(file => validateFile(file))\n\n  if (validFiles.length === 0) {\n    event.target.value = ''\n    return\n  }\n\n  try {\n    const newImages = await Promise.all(\n      validFiles.map(async (file, index) => {\n        const dataUrl = await readFileAsDataURL(file)\n        return {\n          id: `img-${Date.now()}-${imageList.value.length + index}`,\n          url: dataUrl,\n          file: file\n        }\n      })\n    )\n\n    imageList.value.push(...newImages)\n\n    const addedCount = newImages.length\n    Toast.success(`成功添加 ${addedCount} 张图片`)\n\n    if (files.length > remainingSlots) {\n      Toast.fail(`已达到最大数量限制，仅添加了前 ${remainingSlots} 张图片`)\n    }\n  } catch (error) {\n    console.error('图片处理失败:', error)\n    Toast.fail('图片处理失败')\n    emit('error', error)\n  } finally {\n    event.target.value = ''\n  }\n}\n\nconst validateFile = (file) => {\n  // 检查文件类型\n  if (!file.type.startsWith('image/')) {\n    Toast.fail(`文件 ${file.name} 不是图片格式`)\n    return false\n  }\n\n  // 检查文件大小\n  if (file.size > props.maxSize) {\n    const maxSizeMB = Math.round(props.maxSize / 1024 / 1024)\n    Toast.fail(`文件 ${file.name} 大小超过 ${maxSizeMB}MB`)\n    return false\n  }\n\n  return true\n}\n\nconst readFileAsDataURL = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = (e) => resolve(e.target.result)\n    reader.onerror = reject\n    reader.readAsDataURL(file)\n  })\n}\n\nconst removeImage = (index) => {\n  imageList.value.splice(index, 1)\n  Toast.success('图片已移除')\n}\n\nconst clearAll = () => {\n  imageList.value = []\n  Toast.success('已清空所有图片')\n}\n\nconst previewImage = (index) => {\n  previewIndex.value = index\n  showPreview.value = true\n}\n\n// 拖拽排序功能（如果需要的话）\nconst startDrag = (index, event) => {\n  if (!props.sortable) return\n\n  // 这里可以实现拖拽排序逻辑\n  console.log('开始拖拽:', index)\n}\n</script>\n\n<style scoped>\n.multi-image-upload {\n  width: 100%;\n}\n\n.images-grid {\n  display: grid;\n  gap: 8px;\n  margin-bottom: 12px;\n  v-bind(gridStyle);\n}\n\n.image-item,\n.upload-item {\n  aspect-ratio: 1;\n  border-radius: 8px;\n  overflow: hidden;\n  position: relative;\n}\n\n.image-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  cursor: pointer;\n}\n\n.uploaded-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.image-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.image-item:hover .image-overlay {\n  opacity: 1;\n}\n\n.image-index {\n  position: absolute;\n  top: 4px;\n  left: 4px;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  font-size: 12px;\n  padding: 2px 6px;\n  border-radius: 4px;\n  min-width: 20px;\n  text-align: center;\n}\n\n.upload-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 2px dashed rgba(255, 255, 255, 0.2);\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.upload-item:hover:not(.disabled) {\n  border-color: rgba(255, 255, 255, 0.4);\n  background: rgba(255, 255, 255, 0.05);\n}\n\n.upload-item.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.upload-text {\n  font-size: 12px;\n  color: var(--van-text-color-3);\n  margin-top: 4px;\n}\n\n.batch-actions {\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  margin-bottom: 8px;\n}\n\n.sort-tip {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 12px;\n  color: var(--van-text-color-3);\n  justify-content: center;\n}\n\n/* 移动端优化 */\n@media (max-width: 768px) {\n  .images-grid {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  .image-overlay {\n    gap: 8px;\n  }\n\n  .batch-actions {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n/* 小屏幕优化 */\n@media (max-width: 480px) {\n  .images-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n</style>\n"
        }
    ]
}
{
    "sourceFile": "client/src/components/common/VantTextInput.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752385091482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752385123849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -282,30 +282,61 @@\n }\n \n /* 移动端优化 */\n @media (max-width: 768px) {\n+  .examples-section,\n+  .options-section {\n+    padding: 12px;\n+    margin-top: 16px;\n+  }\n+\n   .examples-title {\n-    font-size: 13px;\n+    font-size: 14px;\n   }\n \n   .examples-grid {\n-    gap: 6px;\n+    gap: 8px;\n   }\n \n   .example-tag {\n     font-size: 12px;\n-    padding: 4px 8px;\n+    padding: 6px 10px;\n   }\n }\n \n /* 深色主题适配 */\n @media (prefers-color-scheme: dark) {\n+  .text-input-field {\n+    --van-field-input-text-color: rgba(255, 255, 255, 0.9);\n+    --van-field-placeholder-text-color: rgba(255, 255, 255, 0.5);\n+    --van-field-background: rgba(0, 0, 0, 0.3);\n+    --van-field-border-color: rgba(255, 255, 255, 0.1);\n+  }\n+\n   .examples-section,\n   .options-section {\n-    border-top-color: var(--van-border-color, #333);\n+    background: rgba(0, 0, 0, 0.2);\n+    border-color: rgba(255, 255, 255, 0.1);\n   }\n \n+  .example-tag {\n+    background: rgba(0, 0, 0, 0.3);\n+    border-color: rgba(255, 255, 255, 0.1);\n+  }\n+\n   .example-tag:hover {\n-    background: rgba(25, 137, 250, 0.2);\n+    background: rgba(0, 0, 0, 0.4);\n+    border-color: rgba(255, 255, 255, 0.2);\n   }\n }\n+\n+/* 减少动画在低性能设备上的影响 */\n+@media (prefers-reduced-motion: reduce) {\n+  .example-tag {\n+    transition: none;\n+  }\n+\n+  .example-tag:hover {\n+    transform: none;\n+  }\n+}\n </style>\n"
                }
            ],
            "date": 1752385091482,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"vant-text-input\">\n    <MobileCard :title=\"title\" inset>\n      <!-- 文本输入区域 -->\n      <van-field\n        v-model=\"inputValue\"\n        type=\"textarea\"\n        :placeholder=\"placeholder\"\n        :rows=\"rows\"\n        :maxlength=\"maxLength\"\n        :disabled=\"disabled\"\n        :show-word-limit=\"showWordLimit\"\n        :autosize=\"autosize\"\n        class=\"text-input-field\"\n      />\n\n      <!-- 示例提示词 -->\n      <div v-if=\"showExamples && examples.length > 0\" class=\"examples-section\">\n        <div class=\"examples-header\">\n          <van-icon name=\"bulb-o\" size=\"16\" color=\"var(--van-warning-color)\" />\n          <span class=\"examples-title\">示例提示词</span>\n        </div>\n\n        <div class=\"examples-grid\">\n          <van-tag\n            v-for=\"(example, index) in examples\"\n            :key=\"index\"\n            type=\"default\"\n            size=\"medium\"\n            round\n            @click=\"selectExample(example)\"\n            class=\"example-tag\"\n          >\n            {{ example }}\n          </van-tag>\n        </div>\n      </div>\n\n      <!-- 选项配置 -->\n      <div v-if=\"showOptions && options.length > 0\" class=\"options-section\">\n        <van-cell-group inset>\n          <van-cell\n            v-for=\"option in options\"\n            :key=\"option.key\"\n            :title=\"option.label\"\n            :value=\"getOptionValue(option)\"\n            is-link\n            @click=\"showOptionPicker(option)\"\n          />\n        </van-cell-group>\n      </div>\n    </MobileCard>\n\n    <!-- 选项选择器 -->\n    <van-popup\n      v-model:show=\"showPicker\"\n      position=\"bottom\"\n      :style=\"{ height: '40%' }\"\n    >\n      <van-picker\n        v-if=\"currentOption\"\n        :columns=\"currentOption.options\"\n        :default-index=\"getCurrentOptionIndex()\"\n        @confirm=\"onOptionConfirm\"\n        @cancel=\"showPicker = false\"\n      />\n    </van-popup>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport { MobileCard } from '../mobile'\n\n// Props\nconst props = defineProps({\n  modelValue: {\n    type: String,\n    default: ''\n  },\n  title: {\n    type: String,\n    default: '输入描述'\n  },\n  placeholder: {\n    type: String,\n    default: '请输入描述内容...'\n  },\n  rows: {\n    type: Number,\n    default: 4\n  },\n  maxLength: {\n    type: Number,\n    default: 500\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  showWordLimit: {\n    type: Boolean,\n    default: true\n  },\n  autosize: {\n    type: [Boolean, Object],\n    default: true\n  },\n  showExamples: {\n    type: Boolean,\n    default: true\n  },\n  examples: {\n    type: Array,\n    default: () => []\n  },\n  showOptions: {\n    type: Boolean,\n    default: false\n  },\n  options: {\n    type: Array,\n    default: () => []\n  },\n  optionValues: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\n// Events\nconst emit = defineEmits(['update:modelValue', 'update:optionValues', 'change', 'option-change'])\n\n// Data\nconst inputValue = ref('')\nconst showPicker = ref(false)\nconst currentOption = ref(null)\nconst localOptionValues = ref({})\n\n// Watch\nwatch(() => props.modelValue, (newValue) => {\n  inputValue.value = newValue\n}, { immediate: true })\n\nwatch(inputValue, (newValue) => {\n  emit('update:modelValue', newValue)\n  emit('change', newValue)\n})\n\nwatch(() => props.optionValues, (newValue) => {\n  localOptionValues.value = { ...newValue }\n}, { immediate: true, deep: true })\n\nwatch(localOptionValues, (newValue) => {\n  emit('update:optionValues', newValue)\n  emit('option-change', newValue)\n}, { deep: true })\n\n// Methods\nconst selectExample = (example) => {\n  inputValue.value = example\n}\n\nconst getOptionValue = (option) => {\n  const value = localOptionValues.value[option.key]\n  if (!value) return option.defaultValue || '请选择'\n\n  const optionItem = option.options.find(item =>\n    typeof item === 'string' ? item === value : item.value === value\n  )\n\n  return typeof optionItem === 'string' ? optionItem : optionItem?.text || value\n}\n\nconst showOptionPicker = (option) => {\n  currentOption.value = option\n  showPicker.value = true\n}\n\nconst getCurrentOptionIndex = () => {\n  if (!currentOption.value) return 0\n\n  const value = localOptionValues.value[currentOption.value.key]\n  if (!value) return 0\n\n  return currentOption.value.options.findIndex(item =>\n    typeof item === 'string' ? item === value : item.value === value\n  )\n}\n\nconst onOptionConfirm = ({ selectedOptions }) => {\n  if (!currentOption.value || !selectedOptions[0]) return\n\n  const selectedValue = typeof selectedOptions[0] === 'string'\n    ? selectedOptions[0]\n    : selectedOptions[0].value\n\n  localOptionValues.value[currentOption.value.key] = selectedValue\n  showPicker.value = false\n}\n</script>\n\n<style scoped>\n.vant-text-input {\n  width: 100%;\n}\n\n.text-input-field {\n  --van-field-input-text-color: rgba(255, 255, 255, 0.9);\n  --van-field-placeholder-text-color: rgba(255, 255, 255, 0.6);\n  --van-field-background: rgba(255, 255, 255, 0.1);\n  --van-field-border-color: rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border-radius: 12px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n}\n\n.examples-section {\n  margin-top: 20px;\n  padding: 16px;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border-radius: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);\n}\n\n.examples-header {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 16px;\n}\n\n.examples-title {\n  font-size: 15px;\n  font-weight: 600;\n  color: rgba(255, 255, 255, 0.9);\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.examples-grid {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.example-tag {\n  cursor: pointer;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  background: rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.example-tag:hover {\n  background: rgba(255, 255, 255, 0.2);\n  border-color: rgba(255, 255, 255, 0.4);\n  color: rgba(255, 255, 255, 0.95);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.options-section {\n  margin-top: 20px;\n  padding: 16px;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n  border-radius: 12px;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);\n}\n\n/* 移动端优化 */\n@media (max-width: 768px) {\n  .examples-title {\n    font-size: 13px;\n  }\n\n  .examples-grid {\n    gap: 6px;\n  }\n\n  .example-tag {\n    font-size: 12px;\n    padding: 4px 8px;\n  }\n}\n\n/* 深色主题适配 */\n@media (prefers-color-scheme: dark) {\n  .examples-section,\n  .options-section {\n    border-top-color: var(--van-border-color, #333);\n  }\n\n  .example-tag:hover {\n    background: rgba(25, 137, 250, 0.2);\n  }\n}\n</style>\n"
        }
    ]
}
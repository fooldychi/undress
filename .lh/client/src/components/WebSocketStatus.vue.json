{
    "sourceFile": "client/src/components/WebSocketStatus.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1752463749504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752464153128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,20 +16,17 @@\n   setup() {\n     const showStatus = ref(false)\n     const statusClass = ref('disconnected')\n     const statusText = ref('WebSocket Êú™ËøûÊé•')\n-\n+    \n     let statusCheckInterval = null\n-\n+    \n     // Êõ¥Êñ∞Áä∂ÊÄÅÊòæÁ§∫\n     const updateStatus = () => {\n-      // Ê£ÄÊü• WebSocket ËøûÊé•Áä∂ÊÄÅ\n-      const connected = wsConnection && wsConnection.readyState === WebSocket.OPEN\n-\n-      if (connected) {\n+      if (isWsConnected) {\n         statusClass.value = 'connected'\n         statusText.value = 'ComfyUI Â∑≤ËøûÊé•'\n-\n+        \n         // ËøûÊé•ÊàêÂäüÂêé3ÁßíÈöêËóèÁä∂ÊÄÅ\n         setTimeout(() => {\n           showStatus.value = false\n         }, 3000)\n@@ -38,40 +35,40 @@\n         statusText.value = 'ComfyUI ËøûÊé•‰∏≠...'\n         showStatus.value = true\n       }\n     }\n-\n+    \n     onMounted(() => {\n       // ÂàùÂßãÁä∂ÊÄÅÊ£ÄÊü•\n       updateStatus()\n-\n+      \n       // ÂÆöÊúüÊ£ÄÊü•ËøûÊé•Áä∂ÊÄÅ\n       statusCheckInterval = setInterval(updateStatus, 2000)\n-\n+      \n       // ÁõëÂê¨ WebSocket ‰∫ã‰ª∂\n       if (wsConnection) {\n         wsConnection.addEventListener('open', () => {\n           updateStatus()\n         })\n-\n+        \n         wsConnection.addEventListener('close', () => {\n           updateStatus()\n         })\n-\n+        \n         wsConnection.addEventListener('error', () => {\n           statusClass.value = 'error'\n           statusText.value = 'ComfyUI ËøûÊé•ÈîôËØØ'\n           showStatus.value = true\n         })\n       }\n     })\n-\n+    \n     onUnmounted(() => {\n       if (statusCheckInterval) {\n         clearInterval(statusCheckInterval)\n       }\n     })\n-\n+    \n     return {\n       showStatus,\n       statusClass,\n       statusText\n"
                },
                {
                    "date": 1752465565302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,30 @@\n <template>\n-  <div class=\"websocket-status\" v-if=\"showStatus\">\n-    <div class=\"status-indicator\" :class=\"statusClass\">\n-      <div class=\"status-dot\"></div>\n-      <span class=\"status-text\">{{ statusText }}</span>\n+  <div>\n+    <!-- WebSocketËøûÊé•Áä∂ÊÄÅ -->\n+    <div class=\"websocket-status\" v-if=\"showStatus\">\n+      <div class=\"status-indicator\" :class=\"statusClass\">\n+        <div class=\"status-dot\"></div>\n+        <span class=\"status-text\">{{ statusText }}</span>\n+      </div>\n     </div>\n+\n+    <!-- Â§ÑÁêÜÁªìÊûúÈÄöÁü• -->\n+    <div v-if=\"notifications.length > 0\" class=\"notification-container\">\n+      <div\n+        v-for=\"notification in notifications\"\n+        :key=\"notification.id\"\n+        class=\"notification\"\n+        :class=\"notification.type\"\n+      >\n+        <div class=\"notification-content\">\n+          <div class=\"notification-icon\">{{ getNotificationIcon(notification.type) }}</div>\n+          <div class=\"notification-message\">{{ notification.message }}</div>\n+          <div class=\"notification-time\">{{ notification.time }}</div>\n+        </div>\n+        <button @click=\"removeNotification(notification.id)\" class=\"notification-close\">√ó</button>\n+      </div>\n+    </div>\n   </div>\n </template>\n \n <script>\n@@ -16,63 +36,135 @@\n   setup() {\n     const showStatus = ref(false)\n     const statusClass = ref('disconnected')\n     const statusText = ref('WebSocket Êú™ËøûÊé•')\n-    \n+    const notifications = ref([])\n+\n     let statusCheckInterval = null\n-    \n+    let notificationId = 0\n+\n     // Êõ¥Êñ∞Áä∂ÊÄÅÊòæÁ§∫\n     const updateStatus = () => {\n       if (isWsConnected) {\n         statusClass.value = 'connected'\n-        statusText.value = 'ComfyUI Â∑≤ËøûÊé•'\n-        \n-        // ËøûÊé•ÊàêÂäüÂêé3ÁßíÈöêËóèÁä∂ÊÄÅ\n+        statusText.value = 'ComfyUI ÂÆûÊó∂ËøûÊé•'\n+        showStatus.value = true\n+\n+        // ËøûÊé•ÊàêÂäüÂêé5ÁßíÈöêËóèÁä∂ÊÄÅ\n         setTimeout(() => {\n           showStatus.value = false\n-        }, 3000)\n+        }, 5000)\n       } else {\n         statusClass.value = 'disconnected'\n         statusText.value = 'ComfyUI ËøûÊé•‰∏≠...'\n         showStatus.value = true\n       }\n     }\n-    \n+\n+    // Ê∑ªÂä†ÈÄöÁü•\n+    const addNotification = (message, type = 'info') => {\n+      const notification = {\n+        id: ++notificationId,\n+        message,\n+        type,\n+        time: new Date().toLocaleTimeString()\n+      }\n+\n+      notifications.value.unshift(notification)\n+\n+      // Âú®ÊéßÂà∂Âè∞ÊòæÁ§∫ÊòéÊòæÊ†áËÆ∞\n+      console.log('üîîüîîüîî ÂâçÁ´ØÈÄöÁü•ÊòæÁ§∫ üîîüîîüîî')\n+      console.log(`ÈÄöÁü•ÂÜÖÂÆπ: ${message}`)\n+      console.log(`ÈÄöÁü•Á±ªÂûã: ${type}`)\n+      console.log(`ÈÄöÁü•Êó∂Èó¥: ${notification.time}`)\n+\n+      // Ëá™Âä®ÁßªÈô§ÈÄöÁü•ÔºàÊàêÂäüÂíå‰ø°ÊÅØÁ±ªÂûã8ÁßíÂêéÁßªÈô§ÔºåÈîôËØØÁ±ªÂûã15ÁßíÂêéÁßªÈô§Ôºâ\n+      const autoRemoveTime = type === 'error' ? 15000 : 8000\n+      setTimeout(() => {\n+        removeNotification(notification.id)\n+      }, autoRemoveTime)\n+\n+      // ÊúÄÂ§ö‰øùÁïô5‰∏™ÈÄöÁü•\n+      if (notifications.value.length > 5) {\n+        notifications.value = notifications.value.slice(0, 5)\n+      }\n+    }\n+\n+    // ÁßªÈô§ÈÄöÁü•\n+    const removeNotification = (id) => {\n+      const index = notifications.value.findIndex(n => n.id === id)\n+      if (index > -1) {\n+        notifications.value.splice(index, 1)\n+      }\n+    }\n+\n+    // Ëé∑ÂèñÈÄöÁü•ÂõæÊ†á\n+    const getNotificationIcon = (type) => {\n+      const icons = {\n+        'success': '‚úÖ',\n+        'error': '‚ùå',\n+        'warning': '‚ö†Ô∏è',\n+        'info': '‚ÑπÔ∏è'\n+      }\n+      return icons[type] || '‚ÑπÔ∏è'\n+    }\n+\n+    // ÁõëÂê¨Ëá™ÂÆö‰πâ‰∫ã‰ª∂\n+    const handleComfyUIStatus = (event) => {\n+      const { message, type } = event.detail\n+      addNotification(message, type)\n+    }\n+\n     onMounted(() => {\n       // ÂàùÂßãÁä∂ÊÄÅÊ£ÄÊü•\n       updateStatus()\n-      \n+\n       // ÂÆöÊúüÊ£ÄÊü•ËøûÊé•Áä∂ÊÄÅ\n       statusCheckInterval = setInterval(updateStatus, 2000)\n-      \n+\n+      // ÁõëÂê¨ComfyUIÁä∂ÊÄÅ‰∫ã‰ª∂\n+      window.addEventListener('comfyui-status', handleComfyUIStatus)\n+\n+      // ÊòæÁ§∫ÂàùÂßãÂåñÈÄöÁü•\n+      addNotification('WebSocketÁä∂ÊÄÅÁõëÊéßÂ∑≤ÂêØÂä®', 'info')\n+\n       // ÁõëÂê¨ WebSocket ‰∫ã‰ª∂\n       if (wsConnection) {\n         wsConnection.addEventListener('open', () => {\n           updateStatus()\n+          addNotification('WebSocketËøûÊé•ÊàêÂäü', 'success')\n         })\n-        \n+\n         wsConnection.addEventListener('close', () => {\n           updateStatus()\n+          addNotification('WebSocketËøûÊé•Â∑≤Êñ≠ÂºÄ', 'warning')\n         })\n-        \n+\n         wsConnection.addEventListener('error', () => {\n           statusClass.value = 'error'\n           statusText.value = 'ComfyUI ËøûÊé•ÈîôËØØ'\n           showStatus.value = true\n+          addNotification('WebSocketËøûÊé•ÈîôËØØ', 'error')\n         })\n       }\n     })\n-    \n+\n     onUnmounted(() => {\n       if (statusCheckInterval) {\n         clearInterval(statusCheckInterval)\n       }\n+\n+      // ÁßªÈô§‰∫ã‰ª∂ÁõëÂê¨\n+      window.removeEventListener('comfyui-status', handleComfyUIStatus)\n     })\n-    \n+\n     return {\n       showStatus,\n       statusClass,\n-      statusText\n+      statusText,\n+      notifications,\n+      removeNotification,\n+      getNotificationIcon\n     }\n   }\n }\n </script>\n"
                },
                {
                    "date": 1752465587852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,14 +230,130 @@\n .status-text {\n   font-weight: 500;\n }\n \n+/* ÈÄöÁü•ÂÆπÂô® */\n+.notification-container {\n+  position: fixed;\n+  top: 70px;\n+  right: 20px;\n+  z-index: 1001;\n+  max-width: 350px;\n+}\n+\n+.notification {\n+  display: flex;\n+  align-items: flex-start;\n+  margin-bottom: 10px;\n+  padding: 12px;\n+  border-radius: 8px;\n+  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n+  animation: slideIn 0.3s ease-out;\n+  transition: all 0.3s ease;\n+  backdrop-filter: blur(10px);\n+}\n+\n+.notification:hover {\n+  transform: translateX(-5px);\n+}\n+\n+.notification.success {\n+  background-color: rgba(240, 253, 244, 0.95);\n+  border: 1px solid #22c55e;\n+  color: #15803d;\n+}\n+\n+.notification.error {\n+  background-color: rgba(254, 242, 242, 0.95);\n+  border: 1px solid #ef4444;\n+  color: #dc2626;\n+}\n+\n+.notification.warning {\n+  background-color: rgba(255, 251, 235, 0.95);\n+  border: 1px solid #f59e0b;\n+  color: #d97706;\n+}\n+\n+.notification.info {\n+  background-color: rgba(240, 249, 255, 0.95);\n+  border: 1px solid #3b82f6;\n+  color: #1d4ed8;\n+}\n+\n+.notification-content {\n+  flex: 1;\n+  display: flex;\n+  align-items: center;\n+  gap: 8px;\n+}\n+\n+.notification-icon {\n+  font-size: 16px;\n+  flex-shrink: 0;\n+}\n+\n+.notification-message {\n+  flex: 1;\n+  font-size: 14px;\n+  font-weight: 500;\n+  line-height: 1.4;\n+}\n+\n+.notification-time {\n+  font-size: 11px;\n+  opacity: 0.7;\n+  flex-shrink: 0;\n+}\n+\n+.notification-close {\n+  background: none;\n+  border: none;\n+  font-size: 18px;\n+  cursor: pointer;\n+  padding: 0;\n+  margin-left: 8px;\n+  opacity: 0.5;\n+  transition: opacity 0.2s;\n+  color: inherit;\n+}\n+\n+.notification-close:hover {\n+  opacity: 1;\n+}\n+\n+@keyframes slideIn {\n+  from {\n+    transform: translateX(100%);\n+    opacity: 0;\n+  }\n+  to {\n+    transform: translateX(0);\n+    opacity: 1;\n+  }\n+}\n+\n /* ÁßªÂä®Á´ØÈÄÇÈÖç */\n @media (max-width: 768px) {\n   .websocket-status {\n     top: 10px;\n     right: 10px;\n     font-size: 11px;\n     padding: 6px 10px;\n   }\n+\n+  .notification-container {\n+    top: 60px;\n+    right: 10px;\n+    max-width: calc(100vw - 20px);\n+  }\n+\n+  .notification {\n+    padding: 10px;\n+    font-size: 13px;\n+  }\n+\n+  .notification-message {\n+    font-size: 13px;\n+  }\n }\n </style>\n"
                },
                {
                    "date": 1752467896266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,14 +70,8 @@\n       }\n \n       notifications.value.unshift(notification)\n \n-      // Âú®ÊéßÂà∂Âè∞ÊòæÁ§∫ÊòéÊòæÊ†áËÆ∞\n-      console.log('üîîüîîüîî ÂâçÁ´ØÈÄöÁü•ÊòæÁ§∫ üîîüîîüîî')\n-      console.log(`ÈÄöÁü•ÂÜÖÂÆπ: ${message}`)\n-      console.log(`ÈÄöÁü•Á±ªÂûã: ${type}`)\n-      console.log(`ÈÄöÁü•Êó∂Èó¥: ${notification.time}`)\n-\n       // Ëá™Âä®ÁßªÈô§ÈÄöÁü•ÔºàÊàêÂäüÂíå‰ø°ÊÅØÁ±ªÂûã8ÁßíÂêéÁßªÈô§ÔºåÈîôËØØÁ±ªÂûã15ÁßíÂêéÁßªÈô§Ôºâ\n       const autoRemoveTime = type === 'error' ? 15000 : 8000\n       setTimeout(() => {\n         removeNotification(notification.id)\n"
                },
                {
                    "date": 1752467913491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,11 +117,8 @@\n \n       // ÁõëÂê¨ComfyUIÁä∂ÊÄÅ‰∫ã‰ª∂\n       window.addEventListener('comfyui-status', handleComfyUIStatus)\n \n-      // ÊòæÁ§∫ÂàùÂßãÂåñÈÄöÁü•\n-      addNotification('WebSocketÁä∂ÊÄÅÁõëÊéßÂ∑≤ÂêØÂä®', 'info')\n-\n       // ÁõëÂê¨ WebSocket ‰∫ã‰ª∂\n       if (wsConnection) {\n         wsConnection.addEventListener('open', () => {\n           updateStatus()\n"
                }
            ],
            "date": 1752463749504,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"websocket-status\" v-if=\"showStatus\">\n    <div class=\"status-indicator\" :class=\"statusClass\">\n      <div class=\"status-dot\"></div>\n      <span class=\"status-text\">{{ statusText }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue'\nimport { wsConnection, isWsConnected } from '../services/comfyui.js'\n\nexport default {\n  name: 'WebSocketStatus',\n  setup() {\n    const showStatus = ref(false)\n    const statusClass = ref('disconnected')\n    const statusText = ref('WebSocket Êú™ËøûÊé•')\n\n    let statusCheckInterval = null\n\n    // Êõ¥Êñ∞Áä∂ÊÄÅÊòæÁ§∫\n    const updateStatus = () => {\n      // Ê£ÄÊü• WebSocket ËøûÊé•Áä∂ÊÄÅ\n      const connected = wsConnection && wsConnection.readyState === WebSocket.OPEN\n\n      if (connected) {\n        statusClass.value = 'connected'\n        statusText.value = 'ComfyUI Â∑≤ËøûÊé•'\n\n        // ËøûÊé•ÊàêÂäüÂêé3ÁßíÈöêËóèÁä∂ÊÄÅ\n        setTimeout(() => {\n          showStatus.value = false\n        }, 3000)\n      } else {\n        statusClass.value = 'disconnected'\n        statusText.value = 'ComfyUI ËøûÊé•‰∏≠...'\n        showStatus.value = true\n      }\n    }\n\n    onMounted(() => {\n      // ÂàùÂßãÁä∂ÊÄÅÊ£ÄÊü•\n      updateStatus()\n\n      // ÂÆöÊúüÊ£ÄÊü•ËøûÊé•Áä∂ÊÄÅ\n      statusCheckInterval = setInterval(updateStatus, 2000)\n\n      // ÁõëÂê¨ WebSocket ‰∫ã‰ª∂\n      if (wsConnection) {\n        wsConnection.addEventListener('open', () => {\n          updateStatus()\n        })\n\n        wsConnection.addEventListener('close', () => {\n          updateStatus()\n        })\n\n        wsConnection.addEventListener('error', () => {\n          statusClass.value = 'error'\n          statusText.value = 'ComfyUI ËøûÊé•ÈîôËØØ'\n          showStatus.value = true\n        })\n      }\n    })\n\n    onUnmounted(() => {\n      if (statusCheckInterval) {\n        clearInterval(statusCheckInterval)\n      }\n    })\n\n    return {\n      showStatus,\n      statusClass,\n      statusText\n    }\n  }\n}\n</script>\n\n<style scoped>\n.websocket-status {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1000;\n  background: rgba(0, 0, 0, 0.8);\n  backdrop-filter: blur(10px);\n  border-radius: 8px;\n  padding: 8px 12px;\n  color: white;\n  font-size: 12px;\n  transition: all 0.3s ease;\n}\n\n.status-indicator {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.status-dot {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  transition: background-color 0.3s ease;\n}\n\n.connected .status-dot {\n  background-color: #4caf50;\n  box-shadow: 0 0 6px rgba(76, 175, 80, 0.6);\n}\n\n.disconnected .status-dot {\n  background-color: #ff9800;\n  animation: pulse 1.5s infinite;\n}\n\n.error .status-dot {\n  background-color: #f44336;\n  animation: pulse 1s infinite;\n}\n\n@keyframes pulse {\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  50% {\n    opacity: 0.5;\n    transform: scale(1.2);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.status-text {\n  font-weight: 500;\n}\n\n/* ÁßªÂä®Á´ØÈÄÇÈÖç */\n@media (max-width: 768px) {\n  .websocket-status {\n    top: 10px;\n    right: 10px;\n    font-size: 11px;\n    padding: 6px 10px;\n  }\n}\n</style>\n"
        }
    ]
}
{
    "sourceFile": "client/src/components/mobile/MobileFixedStatusBar.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752499765205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752499765205,
            "name": "Commit-0",
            "content": "<template>\n  <Teleport to=\"body\">\n    <div\n      v-if=\"visible\"\n      class=\"mobile-fixed-status-bar\"\n      :class=\"`status-bar--${status}`\"\n    >\n      <div class=\"status-bar-content\">\n        <!-- 状态图标 -->\n        <div class=\"status-icon\">\n          <van-loading\n            v-if=\"status === 'loading'\"\n            size=\"16\"\n            color=\"currentColor\"\n          />\n          <van-icon\n            v-else\n            :name=\"statusIcon\"\n            size=\"16\"\n          />\n        </div>\n\n        <!-- 状态信息 -->\n        <div class=\"status-info\">\n          <div class=\"status-title\">{{ title }}</div>\n          <div v-if=\"description\" class=\"status-description\">{{ description }}</div>\n        </div>\n\n        <!-- 进度条 -->\n        <div v-if=\"status === 'loading' && showProgress\" class=\"status-progress\">\n          <van-progress\n            :percentage=\"progress\"\n            :show-pivot=\"false\"\n            color=\"rgba(255, 255, 255, 0.8)\"\n            track-color=\"rgba(255, 255, 255, 0.2)\"\n            stroke-width=\"2\"\n          />\n          <span class=\"progress-text\">{{ progress }}%</span>\n        </div>\n\n        <!-- 关闭按钮 -->\n        <div v-if=\"closable\" class=\"status-close\" @click=\"$emit('close')\">\n          <van-icon name=\"cross\" size=\"14\" />\n        </div>\n      </div>\n    </div>\n  </Teleport>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\n\n// Props\nconst props = defineProps({\n  visible: {\n    type: Boolean,\n    default: false\n  },\n  status: {\n    type: String,\n    default: 'loading',\n    validator: (value) => ['loading', 'success', 'error', 'warning', 'info'].includes(value)\n  },\n  title: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    default: ''\n  },\n  progress: {\n    type: Number,\n    default: 0\n  },\n  showProgress: {\n    type: Boolean,\n    default: false\n  },\n  closable: {\n    type: Boolean,\n    default: false\n  }\n})\n\n// Emits\nconst emit = defineEmits(['close'])\n\n// Computed\nconst statusIcon = computed(() => {\n  const iconMap = {\n    loading: 'loading',\n    success: 'success',\n    error: 'close',\n    warning: 'warning-o',\n    info: 'info-o'\n  }\n  return iconMap[props.status] || 'info-o'\n})\n</script>\n\n<style scoped>\n.mobile-fixed-status-bar {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 9999;\n  padding: 12px 16px;\n  backdrop-filter: blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);\n  animation: slideDown 0.3s ease-out;\n}\n\n.status-bar--loading {\n  background: linear-gradient(135deg,\n    rgba(25, 137, 250, 0.9) 0%,\n    rgba(25, 137, 250, 0.8) 100%);\n  color: white;\n}\n\n.status-bar--success {\n  background: linear-gradient(135deg,\n    rgba(7, 193, 96, 0.9) 0%,\n    rgba(7, 193, 96, 0.8) 100%);\n  color: white;\n}\n\n.status-bar--error {\n  background: linear-gradient(135deg,\n    rgba(238, 10, 36, 0.9) 0%,\n    rgba(238, 10, 36, 0.8) 100%);\n  color: white;\n}\n\n.status-bar--warning {\n  background: linear-gradient(135deg,\n    rgba(255, 151, 106, 0.9) 0%,\n    rgba(255, 151, 106, 0.8) 100%);\n  color: white;\n}\n\n.status-bar--info {\n  background: linear-gradient(135deg,\n    rgba(25, 137, 250, 0.9) 0%,\n    rgba(25, 137, 250, 0.8) 100%);\n  color: white;\n}\n\n.status-bar-content {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  max-width: 100%;\n}\n\n.status-icon {\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.status-info {\n  flex: 1;\n  min-width: 0;\n}\n\n.status-title {\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.2;\n  margin-bottom: 2px;\n}\n\n.status-description {\n  font-size: 12px;\n  opacity: 0.9;\n  line-height: 1.3;\n}\n\n.status-progress {\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 80px;\n}\n\n.progress-text {\n  font-size: 12px;\n  font-weight: 500;\n  white-space: nowrap;\n}\n\n.status-close {\n  flex-shrink: 0;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-radius: 50%;\n  transition: background-color 0.2s;\n}\n\n.status-close:hover {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.status-close:active {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n\n@keyframes slideDown {\n  from {\n    transform: translateY(-100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n/* 确保页面内容不被遮挡 */\n:global(body.has-fixed-status-bar) {\n  padding-top: 70px !important;\n}\n\n:global(body.has-fixed-status-bar .mobile-page-container) {\n  padding-top: 0 !important;\n}\n\n/* 响应式设计 */\n@media (max-width: 480px) {\n  .mobile-fixed-status-bar {\n    padding: 10px 12px;\n  }\n\n  .status-bar-content {\n    gap: 8px;\n  }\n\n  .status-title {\n    font-size: 13px;\n  }\n\n  .status-description {\n    font-size: 11px;\n  }\n\n  .status-progress {\n    min-width: 60px;\n  }\n\n  .progress-text {\n    font-size: 11px;\n  }\n}\n</style>\n"
        }
    ]
}
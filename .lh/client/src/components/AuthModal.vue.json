{
    "sourceFile": "client/src/components/AuthModal.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1752285564155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752290037367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,42 +18,39 @@\n       </div>\n \n       <!-- 表单 -->\n       <div class=\"auth-form\">\n-        <van-form @submit=\"handleSubmit\">\n+        <form @submit.prevent=\"handleSubmit\">\n           <!-- 用户名输入 -->\n-          <van-field\n+          <BaseInput\n             v-model=\"formData.username\"\n-            name=\"username\"\n             label=\"用户名\"\n             placeholder=\"请输入用户名\"\n+            left-icon=\"user-o\"\n             :rules=\"usernameRules\"\n-            left-icon=\"user-o\"\n             clearable\n           />\n \n           <!-- 密码输入 -->\n-          <van-field\n+          <BaseInput\n             v-model=\"formData.password\"\n             type=\"password\"\n-            name=\"password\"\n             label=\"密码\"\n             placeholder=\"请输入密码\"\n+            left-icon=\"lock\"\n             :rules=\"passwordRules\"\n-            left-icon=\"lock\"\n             clearable\n           />\n \n           <!-- 确认密码输入（仅注册时显示） -->\n-          <van-field\n+          <BaseInput\n             v-if=\"!isLogin\"\n             v-model=\"formData.confirmPassword\"\n             type=\"password\"\n-            name=\"confirmPassword\"\n             label=\"确认密码\"\n             placeholder=\"请再次输入密码\"\n+            left-icon=\"lock\"\n             :rules=\"confirmPasswordRules\"\n-            left-icon=\"lock\"\n             clearable\n           />\n \n           <!-- 提交按钮 -->\n@@ -64,13 +61,14 @@\n               block\n               round\n               :loading=\"loading\"\n               :disabled=\"loading\"\n+              class=\"auth-submit-btn\"\n             >\n               {{ loading ? (isLogin ? '登录中...' : '注册中...') : (isLogin ? '登录' : '注册') }}\n             </van-button>\n           </div>\n-        </van-form>\n+        </form>\n \n         <!-- 切换登录/注册 -->\n         <div class=\"auth-switch\">\n           <span class=\"switch-text\">\n"
                },
                {
                    "date": 1752290052698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,8 +91,9 @@\n <script>\n import { ref, reactive, computed, watch } from 'vue'\n import { Toast } from 'vant'\n import { authApi } from '../services/api.js'\n+import BaseInput from './BaseInput.vue'\n \n export default {\n   name: 'AuthModal',\n   props: {\n"
                },
                {
                    "date": 1752290073051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,8 +95,11 @@\n import BaseInput from './BaseInput.vue'\n \n export default {\n   name: 'AuthModal',\n+  components: {\n+    BaseInput\n+  },\n   props: {\n     show: {\n       type: Boolean,\n       default: false\n"
                },
                {
                    "date": 1752290107389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,8 +283,29 @@\n .auth-actions {\n   margin: 24px 0 16px 0;\n }\n \n+.auth-submit-btn {\n+  height: 48px;\n+  font-size: 16px;\n+  font-weight: 600;\n+  background: linear-gradient(135deg, #1989fa, #1976d2);\n+  border: none;\n+  box-shadow: 0 4px 12px rgba(25, 137, 250, 0.3);\n+  transition: all 0.3s ease;\n+}\n+\n+.auth-submit-btn:hover {\n+  background: linear-gradient(135deg, #1976d2, #1565c0);\n+  box-shadow: 0 6px 16px rgba(25, 137, 250, 0.4);\n+  transform: translateY(-1px);\n+}\n+\n+.auth-submit-btn:active {\n+  transform: translateY(0);\n+  box-shadow: 0 2px 8px rgba(25, 137, 250, 0.3);\n+}\n+\n .auth-switch {\n   display: flex;\n   justify-content: center;\n   align-items: center;\n"
                },
                {
                    "date": 1752342001827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,10 +198,15 @@\n         }\n \n         if (response.success) {\n           console.log('认证成功，响应数据:', response)\n-          Toast.success(response.message || (isLogin.value ? '登录成功' : '注册成功'))\n \n+          if (isLogin.value) {\n+            Toast.success('登录成功，正在加载用户数据...')\n+          } else {\n+            Toast.success(response.message || '注册成功')\n+          }\n+\n           const successData = {\n             type: isLogin.value ? 'login' : 'register',\n             user: response.data.user\n           }\n"
                }
            ],
            "date": 1752285564155,
            "name": "Commit-0",
            "content": "<template>\n  <van-popup\n    v-model:show=\"visible\"\n    position=\"center\"\n    :style=\"{ width: '90%', maxWidth: '400px', borderRadius: '16px' }\"\n    :close-on-click-overlay=\"false\"\n  >\n    <div class=\"auth-modal\">\n      <!-- 头部 -->\n      <div class=\"auth-header\">\n        <h2 class=\"auth-title\">{{ isLogin ? '登录' : '注册' }}</h2>\n        <van-icon\n          name=\"cross\"\n          size=\"20\"\n          class=\"close-btn\"\n          @click=\"closeModal\"\n        />\n      </div>\n\n      <!-- 表单 -->\n      <div class=\"auth-form\">\n        <van-form @submit=\"handleSubmit\">\n          <!-- 用户名输入 -->\n          <van-field\n            v-model=\"formData.username\"\n            name=\"username\"\n            label=\"用户名\"\n            placeholder=\"请输入用户名\"\n            :rules=\"usernameRules\"\n            left-icon=\"user-o\"\n            clearable\n          />\n\n          <!-- 密码输入 -->\n          <van-field\n            v-model=\"formData.password\"\n            type=\"password\"\n            name=\"password\"\n            label=\"密码\"\n            placeholder=\"请输入密码\"\n            :rules=\"passwordRules\"\n            left-icon=\"lock\"\n            clearable\n          />\n\n          <!-- 确认密码输入（仅注册时显示） -->\n          <van-field\n            v-if=\"!isLogin\"\n            v-model=\"formData.confirmPassword\"\n            type=\"password\"\n            name=\"confirmPassword\"\n            label=\"确认密码\"\n            placeholder=\"请再次输入密码\"\n            :rules=\"confirmPasswordRules\"\n            left-icon=\"lock\"\n            clearable\n          />\n\n          <!-- 提交按钮 -->\n          <div class=\"auth-actions\">\n            <van-button\n              type=\"primary\"\n              native-type=\"submit\"\n              block\n              round\n              :loading=\"loading\"\n              :disabled=\"loading\"\n            >\n              {{ loading ? (isLogin ? '登录中...' : '注册中...') : (isLogin ? '登录' : '注册') }}\n            </van-button>\n          </div>\n        </van-form>\n\n        <!-- 切换登录/注册 -->\n        <div class=\"auth-switch\">\n          <span class=\"switch-text\">\n            {{ isLogin ? '还没有账号？' : '已有账号？' }}\n          </span>\n          <van-button\n            type=\"primary\"\n            plain\n            size=\"small\"\n            @click=\"toggleMode\"\n          >\n            {{ isLogin ? '立即注册' : '立即登录' }}\n          </van-button>\n        </div>\n      </div>\n    </div>\n  </van-popup>\n</template>\n\n<script>\nimport { ref, reactive, computed, watch } from 'vue'\nimport { Toast } from 'vant'\nimport { authApi } from '../services/api.js'\n\nexport default {\n  name: 'AuthModal',\n  props: {\n    show: {\n      type: Boolean,\n      default: false\n    },\n    defaultMode: {\n      type: String,\n      default: 'login', // 'login' 或 'register'\n      validator: (value) => ['login', 'register'].includes(value)\n    }\n  },\n  emits: ['update:show', 'success'],\n  setup(props, { emit }) {\n    const visible = computed({\n      get: () => props.show,\n      set: (value) => emit('update:show', value)\n    })\n\n    const isLogin = ref(props.defaultMode === 'login')\n    const loading = ref(false)\n\n    // 表单数据\n    const formData = reactive({\n      username: '',\n      password: '',\n      confirmPassword: ''\n    })\n\n    // 表单验证规则\n    const usernameRules = [\n      { required: true, message: '请输入用户名' },\n      { pattern: /^[a-zA-Z0-9]{3,30}$/, message: '用户名只能包含字母和数字，长度3-30位' }\n    ]\n\n    const passwordRules = [\n      { required: true, message: '请输入密码' },\n      { min: 6, message: '密码至少6位' }\n    ]\n\n    const confirmPasswordRules = computed(() => [\n      { required: true, message: '请确认密码' },\n      {\n        validator: (value) => value === formData.password,\n        message: '两次输入的密码不一致'\n      }\n    ])\n\n    // 重置表单\n    const resetForm = () => {\n      formData.username = ''\n      formData.password = ''\n      formData.confirmPassword = ''\n    }\n\n    // 切换登录/注册模式\n    const toggleMode = () => {\n      isLogin.value = !isLogin.value\n      resetForm()\n    }\n\n    // 关闭弹窗\n    const closeModal = () => {\n      visible.value = false\n      resetForm()\n    }\n\n    // 处理表单提交\n    const handleSubmit = async () => {\n      if (loading.value) return\n\n      // 验证表单\n      if (!formData.username.trim()) {\n        Toast.fail('请输入用户名')\n        return\n      }\n\n      if (!formData.password.trim()) {\n        Toast.fail('请输入密码')\n        return\n      }\n\n      if (!isLogin.value && formData.password !== formData.confirmPassword) {\n        Toast.fail('两次输入的密码不一致')\n        return\n      }\n\n      loading.value = true\n\n      try {\n        let response\n        if (isLogin.value) {\n          // 登录\n          response = await authApi.login(formData.username, formData.password)\n        } else {\n          // 注册\n          response = await authApi.register(formData.username, formData.password)\n        }\n\n        if (response.success) {\n          console.log('认证成功，响应数据:', response)\n          Toast.success(response.message || (isLogin.value ? '登录成功' : '注册成功'))\n\n          const successData = {\n            type: isLogin.value ? 'login' : 'register',\n            user: response.data.user\n          }\n          console.log('触发success事件，数据:', successData)\n\n          emit('success', successData)\n          closeModal()\n        } else {\n          console.log('认证失败，响应数据:', response)\n          Toast.fail(response.message || (isLogin.value ? '登录失败' : '注册失败'))\n        }\n      } catch (error) {\n        console.error('认证失败:', error)\n        Toast.fail(error.message || (isLogin.value ? '登录失败' : '注册失败'))\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 监听弹窗显示状态，重置表单\n    watch(visible, (newValue) => {\n      if (newValue) {\n        isLogin.value = props.defaultMode === 'login'\n        resetForm()\n      }\n    })\n\n    return {\n      visible,\n      isLogin,\n      loading,\n      formData,\n      usernameRules,\n      passwordRules,\n      confirmPasswordRules,\n      toggleMode,\n      closeModal,\n      handleSubmit\n    }\n  }\n}\n</script>\n\n<style scoped>\n.auth-modal {\n  padding: 24px;\n  background: white;\n  border-radius: 16px;\n}\n\n.auth-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n.auth-title {\n  font-size: 20px;\n  font-weight: 600;\n  color: #323233;\n  margin: 0;\n}\n\n.close-btn {\n  color: #969799;\n  cursor: pointer;\n  transition: color 0.3s;\n}\n\n.close-btn:hover {\n  color: #323233;\n}\n\n.auth-form {\n  width: 100%;\n}\n\n.auth-actions {\n  margin: 24px 0 16px 0;\n}\n\n.auth-switch {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  padding-top: 16px;\n  border-top: 1px solid #ebedf0;\n}\n\n.switch-text {\n  font-size: 14px;\n  color: #969799;\n}\n\n/* 深色主题适配 */\n@media (prefers-color-scheme: dark) {\n  .auth-modal {\n    background: #1e1e1e;\n  }\n\n  .auth-title {\n    color: #ffffff;\n  }\n\n  .close-btn {\n    color: #969799;\n  }\n\n  .close-btn:hover {\n    color: #ffffff;\n  }\n\n  .auth-switch {\n    border-top-color: #2c2c2e;\n  }\n\n  .switch-text {\n    color: #8e8e93;\n  }\n}\n</style>\n"
        }
    ]
}
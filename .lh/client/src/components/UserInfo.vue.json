{
    "sourceFile": "client/src/components/UserInfo.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 22,
            "patches": [
                {
                    "date": 1752283852248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752283866545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,8 +66,9 @@\n </template>\n \n <script>\n import { ref, reactive, computed, onMounted } from 'vue'\n+import { useRouter } from 'vue-router'\n import { Toast } from 'vant'\n import { authApi } from '../services/api.js'\n import AuthModal from './AuthModal.vue'\n \n"
                },
                {
                    "date": 1752283879466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,9 @@\n     AuthModal\n   },\n   emits: ['login', 'logout'],\n   setup(props, { emit }) {\n+    const router = useRouter()\n     const showAuthModal = ref(false)\n     const showUserMenu = ref(false)\n     const authMode = ref('login')\n     const loading = ref(false)\n"
                },
                {
                    "date": 1752283892336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,8 +141,14 @@\n         loading.value = false\n       }\n     }\n \n+    // 跳转到个人中心\n+    const goToProfile = () => {\n+      showUserMenu.value = false\n+      router.push('/profile')\n+    }\n+\n     // 处理退出登录\n     const handleLogout = () => {\n       authApi.logout()\n       userInfo.value = null\n"
                },
                {
                    "date": 1752283905296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,8 +182,9 @@\n       showLoginModal,\n       showRegisterModal,\n       handleAuthSuccess,\n       refreshUserInfo,\n+      goToProfile,\n       handleLogout\n     }\n   }\n }\n"
                },
                {
                    "date": 1752285211490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,18 +13,22 @@\n     </div>\n \n     <!-- 已登录状态 -->\n     <div v-else class=\"user-section\">\n+      <div class=\"user-avatar\" @click=\"goToProfile\" title=\"点击进入个人中心\">\n+        <van-icon name=\"user-o\" size=\"20\" />\n+        <span class=\"username\">{{ userInfo?.username }}</span>\n+      </div>\n+\n+      <!-- 用户操作菜单按钮 -->\n       <van-popover\n         v-model:show=\"showUserMenu\"\n         placement=\"bottom-end\"\n         :offset=\"[0, 8]\"\n       >\n         <template #reference>\n-          <div class=\"user-avatar\" @click=\"showUserMenu = !showUserMenu\">\n-            <van-icon name=\"user-o\" size=\"20\" />\n-            <span class=\"username\">{{ userInfo?.username }}</span>\n-            <van-icon name=\"arrow-down\" size=\"12\" />\n+          <div class=\"menu-trigger\" @click=\"showUserMenu = !showUserMenu\" title=\"更多操作\">\n+            <van-icon name=\"ellipsis\" size=\"16\" />\n           </div>\n         </template>\n \n         <div class=\"user-menu\">\n"
                },
                {
                    "date": 1752285230215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,8 +206,11 @@\n }\n \n .user-section {\n   position: relative;\n+  display: flex;\n+  align-items: center;\n+  gap: 8px;\n }\n \n .user-avatar {\n   display: flex;\n@@ -224,8 +227,25 @@\n .user-avatar:hover {\n   background: rgba(255, 255, 255, 0.2);\n }\n \n+.menu-trigger {\n+  display: flex;\n+  align-items: center;\n+  justify-content: center;\n+  width: 32px;\n+  height: 32px;\n+  background: rgba(255, 255, 255, 0.1);\n+  border-radius: 50%;\n+  cursor: pointer;\n+  transition: all 0.3s;\n+  color: white;\n+}\n+\n+.menu-trigger:hover {\n+  background: rgba(255, 255, 255, 0.2);\n+}\n+\n .username {\n   font-size: 14px;\n   font-weight: 500;\n   max-width: 80px;\n"
                },
                {
                    "date": 1752285510078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,12 +106,18 @@\n     }\n \n     // 处理认证成功\n     const handleAuthSuccess = (data) => {\n+      console.log('认证成功，更新用户信息:', data)\n       userInfo.value = data.user\n       showUserMenu.value = false\n       emit('login', data)\n \n+      // 确保localStorage中的数据是最新的\n+      if (data.user) {\n+        localStorage.setItem('user_info', JSON.stringify(data.user))\n+      }\n+\n       // 可以在这里触发其他需要登录状态的操作\n       refreshUserInfo()\n     }\n \n"
                },
                {
                    "date": 1752285526019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,13 +168,23 @@\n     }\n \n     // 初始化用户信息\n     const initUserInfo = () => {\n-      if (authApi.isLoggedIn()) {\n-        // 从本地存储获取用户信息\n-        userInfo.value = authApi.getLocalUserInfo()\n+      console.log('初始化用户信息...')\n+      const token = authApi.getToken()\n+      const localUserInfo = authApi.getLocalUserInfo()\n+\n+      console.log('Token存在:', !!token)\n+      console.log('本地用户信息:', localUserInfo)\n+\n+      if (token && localUserInfo) {\n+        userInfo.value = localUserInfo\n+        console.log('设置用户信息:', userInfo.value)\n         // 异步刷新用户信息\n         refreshUserInfo()\n+      } else {\n+        console.log('未找到有效的登录信息')\n+        userInfo.value = null\n       }\n     }\n \n     // 组件挂载时初始化\n"
                },
                {
                    "date": 1752285540139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,14 @@\n     const loading = ref(false)\n \n     // 用户信息\n     const userInfo = ref(null)\n-    const isLoggedIn = computed(() => authApi.isLoggedIn() && userInfo.value)\n+    const isLoggedIn = computed(() => {\n+      const hasToken = authApi.isLoggedIn()\n+      const hasUserInfo = !!userInfo.value\n+      console.log('计算登录状态 - Token:', hasToken, 'UserInfo:', hasUserInfo, 'Result:', hasToken && hasUserInfo)\n+      return hasToken && hasUserInfo\n+    })\n \n     // 显示登录弹窗\n     const showLoginModal = () => {\n       authMode.value = 'login'\n"
                },
                {
                    "date": 1752285867047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,19 +112,29 @@\n \n     // 处理认证成功\n     const handleAuthSuccess = (data) => {\n       console.log('认证成功，更新用户信息:', data)\n+\n+      // 立即更新用户信息\n       userInfo.value = data.user\n       showUserMenu.value = false\n-      emit('login', data)\n \n       // 确保localStorage中的数据是最新的\n       if (data.user) {\n         localStorage.setItem('user_info', JSON.stringify(data.user))\n       }\n \n-      // 可以在这里触发其他需要登录状态的操作\n-      refreshUserInfo()\n+      // 触发父组件的登录事件\n+      emit('login', data)\n+\n+      // 强制触发响应式更新\n+      console.log('强制更新后的用户信息:', userInfo.value)\n+      console.log('当前登录状态:', isLoggedIn.value)\n+\n+      // 延迟刷新用户信息以确保状态同步\n+      setTimeout(() => {\n+        refreshUserInfo()\n+      }, 100)\n     }\n \n     // 刷新用户信息\n     const refreshUserInfo = async () => {\n"
                },
                {
                    "date": 1752285882864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,11 +201,37 @@\n         userInfo.value = null\n       }\n     }\n \n+    // 监听localStorage变化\n+    const handleStorageChange = (event) => {\n+      console.log('localStorage变化:', event)\n+      if (event.key === 'auth_token' || event.key === 'user_info') {\n+        console.log('认证相关数据变化，重新初始化')\n+        initUserInfo()\n+      }\n+    }\n+\n     // 组件挂载时初始化\n     onMounted(() => {\n       initUserInfo()\n+\n+      // 监听storage事件（跨标签页同步）\n+      window.addEventListener('storage', handleStorageChange)\n+\n+      // 定期检查登录状态（防止token过期等问题）\n+      const checkInterval = setInterval(() => {\n+        if (authApi.isLoggedIn() && !userInfo.value) {\n+          console.log('检测到登录状态不一致，重新初始化')\n+          initUserInfo()\n+        }\n+      }, 5000) // 每5秒检查一次\n+\n+      // 清理定时器\n+      onUnmounted(() => {\n+        window.removeEventListener('storage', handleStorageChange)\n+        clearInterval(checkInterval)\n+      })\n     })\n \n     return {\n       showAuthModal,\n"
                },
                {
                    "date": 1752285960111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n   </div>\n </template>\n \n <script>\n-import { ref, reactive, computed, onMounted } from 'vue'\n+import { ref, reactive, computed, onMounted, onUnmounted } from 'vue'\n import { useRouter } from 'vue-router'\n import { Toast } from 'vant'\n import { authApi } from '../services/api.js'\n import AuthModal from './AuthModal.vue'\n"
                },
                {
                    "date": 1752288787146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,50 +15,9 @@\n     <!-- 已登录状态 -->\n     <div v-else class=\"user-section\">\n       <div class=\"user-avatar\" @click=\"goToProfile\" title=\"点击进入个人中心\">\n         <van-icon name=\"user-o\" size=\"20\" />\n-        <span class=\"username\">{{ userInfo?.username }}</span>\n       </div>\n-\n-      <!-- 用户操作菜单按钮 -->\n-      <van-popover\n-        v-model:show=\"showUserMenu\"\n-        placement=\"bottom-end\"\n-        :offset=\"[0, 8]\"\n-      >\n-        <template #reference>\n-          <div class=\"menu-trigger\" @click=\"showUserMenu = !showUserMenu\" title=\"更多操作\">\n-            <van-icon name=\"ellipsis\" size=\"16\" />\n-          </div>\n-        </template>\n-\n-        <div class=\"user-menu\">\n-          <div class=\"user-menu-header\">\n-            <div class=\"user-avatar-large\">\n-              <van-icon name=\"user-o\" size=\"24\" />\n-            </div>\n-            <div class=\"user-details\">\n-              <div class=\"username-large\">{{ userInfo?.username }}</div>\n-              <div class=\"user-id\">ID: {{ userInfo?.id }}</div>\n-            </div>\n-          </div>\n-\n-          <div class=\"user-menu-actions\">\n-            <div class=\"menu-item\" @click=\"goToProfile\">\n-              <van-icon name=\"user-o\" size=\"16\" />\n-              <span>个人中心</span>\n-            </div>\n-            <div class=\"menu-item\" @click=\"refreshUserInfo\">\n-              <van-icon name=\"refresh\" size=\"16\" />\n-              <span>刷新信息</span>\n-            </div>\n-            <div class=\"menu-item logout\" @click=\"handleLogout\">\n-              <van-icon name=\"sign\" size=\"16\" />\n-              <span>退出登录</span>\n-            </div>\n-          </div>\n-        </div>\n-      </van-popover>\n     </div>\n \n     <!-- 登录注册弹窗 -->\n     <AuthModal\n"
                },
                {
                    "date": 1752288893746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,42 +224,28 @@\n .user-section {\n   position: relative;\n   display: flex;\n   align-items: center;\n-  gap: 8px;\n }\n \n .user-avatar {\n   display: flex;\n   align-items: center;\n-  gap: 6px;\n-  padding: 6px 12px;\n-  background: rgba(255, 255, 255, 0.1);\n-  border-radius: 20px;\n-  cursor: pointer;\n-  transition: all 0.3s;\n-  color: white;\n-}\n-\n-.user-avatar:hover {\n-  background: rgba(255, 255, 255, 0.2);\n-}\n-\n-.menu-trigger {\n-  display: flex;\n-  align-items: center;\n   justify-content: center;\n-  width: 32px;\n-  height: 32px;\n-  background: rgba(255, 255, 255, 0.1);\n+  width: 36px;\n+  height: 36px;\n+  background: rgba(255, 255, 255, 0.15);\n   border-radius: 50%;\n   cursor: pointer;\n-  transition: all 0.3s;\n+  transition: all 0.3s ease;\n   color: white;\n+  border: 2px solid rgba(255, 255, 255, 0.2);\n }\n \n-.menu-trigger:hover {\n-  background: rgba(255, 255, 255, 0.2);\n+.user-avatar:hover {\n+  background: rgba(255, 255, 255, 0.25);\n+  border-color: rgba(255, 255, 255, 0.4);\n+  transform: scale(1.05);\n }\n \n .username {\n   font-size: 14px;\n"
                },
                {
                    "date": 1752288941509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -246,88 +246,10 @@\n   border-color: rgba(255, 255, 255, 0.4);\n   transform: scale(1.05);\n }\n \n-.username {\n-  font-size: 14px;\n-  font-weight: 500;\n-  max-width: 80px;\n-  overflow: hidden;\n-  text-overflow: ellipsis;\n-  white-space: nowrap;\n-}\n+/* 用户头像样式已在上方定义，移除不需要的菜单样式 */\n \n-.user-menu {\n-  background: white;\n-  border-radius: 12px;\n-  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n-  overflow: hidden;\n-  min-width: 200px;\n-}\n-\n-.user-menu-header {\n-  display: flex;\n-  align-items: center;\n-  gap: 12px;\n-  padding: 16px;\n-  background: #f7f8fa;\n-  border-bottom: 1px solid #ebedf0;\n-}\n-\n-.user-avatar-large {\n-  width: 40px;\n-  height: 40px;\n-  background: #1989fa;\n-  border-radius: 50%;\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  color: white;\n-}\n-\n-.user-details {\n-  flex: 1;\n-}\n-\n-.username-large {\n-  font-size: 16px;\n-  font-weight: 600;\n-  color: #323233;\n-  margin-bottom: 2px;\n-}\n-\n-.user-id {\n-  font-size: 12px;\n-  color: #969799;\n-}\n-\n-.user-menu-actions {\n-  padding: 8px 0;\n-}\n-\n-.menu-item {\n-  display: flex;\n-  align-items: center;\n-  gap: 12px;\n-  padding: 12px 16px;\n-  cursor: pointer;\n-  transition: background-color 0.3s;\n-  font-size: 14px;\n-  color: #323233;\n-}\n-\n-.menu-item:hover {\n-  background: #f7f8fa;\n-}\n-\n-.menu-item.logout {\n-  color: #ee0a24;\n-}\n-\n-.menu-item.logout:hover {\n-  background: #fef2f2;\n-}\n-\n /* 深色主题适配 */\n @media (prefers-color-scheme: dark) {\n   .user-menu {\n     background: #1e1e1e;\n"
                },
                {
                    "date": 1752288983420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -250,35 +250,15 @@\n /* 用户头像样式已在上方定义，移除不需要的菜单样式 */\n \n /* 深色主题适配 */\n @media (prefers-color-scheme: dark) {\n-  .user-menu {\n-    background: #1e1e1e;\n-    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n+  .user-avatar {\n+    background: rgba(255, 255, 255, 0.2);\n+    border-color: rgba(255, 255, 255, 0.3);\n   }\n \n-  .user-menu-header {\n-    background: #2c2c2e;\n-    border-bottom-color: #3a3a3c;\n+  .user-avatar:hover {\n+    background: rgba(255, 255, 255, 0.3);\n+    border-color: rgba(255, 255, 255, 0.5);\n   }\n-\n-  .username-large {\n-    color: #ffffff;\n-  }\n-\n-  .user-id {\n-    color: #8e8e93;\n-  }\n-\n-  .menu-item {\n-    color: #ffffff;\n-  }\n-\n-  .menu-item:hover {\n-    background: #2c2c2e;\n-  }\n-\n-  .menu-item.logout:hover {\n-    background: #3a1a1a;\n-  }\n }\n </style>\n"
                },
                {
                    "date": 1752289038745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,8 @@\n       console.log('认证成功，更新用户信息:', data)\n \n       // 立即更新用户信息\n       userInfo.value = data.user\n-      showUserMenu.value = false\n \n       // 确保localStorage中的数据是最新的\n       if (data.user) {\n         localStorage.setItem('user_info', JSON.stringify(data.user))\n"
                },
                {
                    "date": 1752289076430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,8 @@\n     })\n \n     return {\n       showAuthModal,\n-      showUserMenu,\n       authMode,\n       loading,\n       userInfo,\n       isLoggedIn,\n"
                },
                {
                    "date": 1752289096646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,8 @@\n   emits: ['login', 'logout'],\n   setup(props, { emit }) {\n     const router = useRouter()\n     const showAuthModal = ref(false)\n-    const showUserMenu = ref(false)\n     const authMode = ref('login')\n     const loading = ref(false)\n \n     // 用户信息\n"
                },
                {
                    "date": 1752289111813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -198,9 +198,8 @@\n       isLoggedIn,\n       showLoginModal,\n       showRegisterModal,\n       handleAuthSuccess,\n-      refreshUserInfo,\n       goToProfile,\n       handleLogout\n     }\n   }\n"
                },
                {
                    "date": 1752289421721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,8 @@\n     }\n \n     // 跳转到个人中心\n     const goToProfile = () => {\n-      showUserMenu.value = false\n       router.push('/profile')\n     }\n \n     // 处理退出登录\n"
                },
                {
                    "date": 1752289440000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,8 @@\n     // 处理退出登录\n     const handleLogout = () => {\n       authApi.logout()\n       userInfo.value = null\n-      showUserMenu.value = false\n       emit('logout')\n       Toast.success('退出登录成功')\n     }\n \n"
                }
            ],
            "date": 1752283852248,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"user-info\">\n    <!-- 未登录状态 -->\n    <div v-if=\"!isLoggedIn\" class=\"login-section\">\n      <van-button\n        type=\"primary\"\n        size=\"small\"\n        round\n        @click=\"showLoginModal\"\n      >\n        登录\n      </van-button>\n    </div>\n\n    <!-- 已登录状态 -->\n    <div v-else class=\"user-section\">\n      <van-popover\n        v-model:show=\"showUserMenu\"\n        placement=\"bottom-end\"\n        :offset=\"[0, 8]\"\n      >\n        <template #reference>\n          <div class=\"user-avatar\" @click=\"showUserMenu = !showUserMenu\">\n            <van-icon name=\"user-o\" size=\"20\" />\n            <span class=\"username\">{{ userInfo?.username }}</span>\n            <van-icon name=\"arrow-down\" size=\"12\" />\n          </div>\n        </template>\n\n        <div class=\"user-menu\">\n          <div class=\"user-menu-header\">\n            <div class=\"user-avatar-large\">\n              <van-icon name=\"user-o\" size=\"24\" />\n            </div>\n            <div class=\"user-details\">\n              <div class=\"username-large\">{{ userInfo?.username }}</div>\n              <div class=\"user-id\">ID: {{ userInfo?.id }}</div>\n            </div>\n          </div>\n\n          <div class=\"user-menu-actions\">\n            <div class=\"menu-item\" @click=\"goToProfile\">\n              <van-icon name=\"user-o\" size=\"16\" />\n              <span>个人中心</span>\n            </div>\n            <div class=\"menu-item\" @click=\"refreshUserInfo\">\n              <van-icon name=\"refresh\" size=\"16\" />\n              <span>刷新信息</span>\n            </div>\n            <div class=\"menu-item logout\" @click=\"handleLogout\">\n              <van-icon name=\"sign\" size=\"16\" />\n              <span>退出登录</span>\n            </div>\n          </div>\n        </div>\n      </van-popover>\n    </div>\n\n    <!-- 登录注册弹窗 -->\n    <AuthModal\n      v-model:show=\"showAuthModal\"\n      :default-mode=\"authMode\"\n      @success=\"handleAuthSuccess\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { Toast } from 'vant'\nimport { authApi } from '../services/api.js'\nimport AuthModal from './AuthModal.vue'\n\nexport default {\n  name: 'UserInfo',\n  components: {\n    AuthModal\n  },\n  emits: ['login', 'logout'],\n  setup(props, { emit }) {\n    const showAuthModal = ref(false)\n    const showUserMenu = ref(false)\n    const authMode = ref('login')\n    const loading = ref(false)\n\n    // 用户信息\n    const userInfo = ref(null)\n    const isLoggedIn = computed(() => authApi.isLoggedIn() && userInfo.value)\n\n    // 显示登录弹窗\n    const showLoginModal = () => {\n      authMode.value = 'login'\n      showAuthModal.value = true\n    }\n\n    // 显示注册弹窗\n    const showRegisterModal = () => {\n      authMode.value = 'register'\n      showAuthModal.value = true\n    }\n\n    // 处理认证成功\n    const handleAuthSuccess = (data) => {\n      userInfo.value = data.user\n      showUserMenu.value = false\n      emit('login', data)\n\n      // 可以在这里触发其他需要登录状态的操作\n      refreshUserInfo()\n    }\n\n    // 刷新用户信息\n    const refreshUserInfo = async () => {\n      if (!authApi.isLoggedIn()) {\n        userInfo.value = null\n        return\n      }\n\n      try {\n        loading.value = true\n        const response = await authApi.getCurrentUser()\n\n        if (response.success) {\n          userInfo.value = response.data.user\n        } else {\n          // 如果获取用户信息失败，可能是token过期\n          console.warn('获取用户信息失败:', response.message)\n          handleLogout()\n        }\n      } catch (error) {\n        console.error('刷新用户信息失败:', error)\n        // 如果是认证错误，自动退出登录\n        if (error.message.includes('401') || error.message.includes('token')) {\n          handleLogout()\n        } else {\n          Toast.fail('获取用户信息失败')\n        }\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 处理退出登录\n    const handleLogout = () => {\n      authApi.logout()\n      userInfo.value = null\n      showUserMenu.value = false\n      emit('logout')\n      Toast.success('退出登录成功')\n    }\n\n    // 初始化用户信息\n    const initUserInfo = () => {\n      if (authApi.isLoggedIn()) {\n        // 从本地存储获取用户信息\n        userInfo.value = authApi.getLocalUserInfo()\n        // 异步刷新用户信息\n        refreshUserInfo()\n      }\n    }\n\n    // 组件挂载时初始化\n    onMounted(() => {\n      initUserInfo()\n    })\n\n    return {\n      showAuthModal,\n      showUserMenu,\n      authMode,\n      loading,\n      userInfo,\n      isLoggedIn,\n      showLoginModal,\n      showRegisterModal,\n      handleAuthSuccess,\n      refreshUserInfo,\n      handleLogout\n    }\n  }\n}\n</script>\n\n<style scoped>\n.user-info {\n  display: flex;\n  align-items: center;\n}\n\n.login-section {\n  display: flex;\n  align-items: center;\n}\n\n.user-section {\n  position: relative;\n}\n\n.user-avatar {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 6px 12px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  cursor: pointer;\n  transition: all 0.3s;\n  color: white;\n}\n\n.user-avatar:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.username {\n  font-size: 14px;\n  font-weight: 500;\n  max-width: 80px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.user-menu {\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  min-width: 200px;\n}\n\n.user-menu-header {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 16px;\n  background: #f7f8fa;\n  border-bottom: 1px solid #ebedf0;\n}\n\n.user-avatar-large {\n  width: 40px;\n  height: 40px;\n  background: #1989fa;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n}\n\n.user-details {\n  flex: 1;\n}\n\n.username-large {\n  font-size: 16px;\n  font-weight: 600;\n  color: #323233;\n  margin-bottom: 2px;\n}\n\n.user-id {\n  font-size: 12px;\n  color: #969799;\n}\n\n.user-menu-actions {\n  padding: 8px 0;\n}\n\n.menu-item {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  font-size: 14px;\n  color: #323233;\n}\n\n.menu-item:hover {\n  background: #f7f8fa;\n}\n\n.menu-item.logout {\n  color: #ee0a24;\n}\n\n.menu-item.logout:hover {\n  background: #fef2f2;\n}\n\n/* 深色主题适配 */\n@media (prefers-color-scheme: dark) {\n  .user-menu {\n    background: #1e1e1e;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n  }\n\n  .user-menu-header {\n    background: #2c2c2e;\n    border-bottom-color: #3a3a3c;\n  }\n\n  .username-large {\n    color: #ffffff;\n  }\n\n  .user-id {\n    color: #8e8e93;\n  }\n\n  .menu-item {\n    color: #ffffff;\n  }\n\n  .menu-item:hover {\n    background: #2c2c2e;\n  }\n\n  .menu-item.logout:hover {\n    background: #3a1a1a;\n  }\n}\n</style>\n"
        }
    ]
}
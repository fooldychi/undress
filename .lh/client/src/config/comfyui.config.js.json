{
    "sourceFile": "client/src/config/comfyui.config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1752326421095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752327511240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,11 @@\n class ComfyUIConfig {\r\n   constructor() {\r\n     // 默认配置（作为后备）\r\n     this.defaultConfig = {\r\n-      BASE_URL: import.meta.env.VITE_COMFYUI_SERVER_URL || 'https://hwf0p724ub-8188.cnb.run',\r\n-      CLIENT_ID: import.meta.env.VITE_COMFYUI_CLIENT_ID || 'abc1373d4ad648a3a81d0587fbe5534b',\r\n-      REQUEST_TIMEOUT: 30000,\r\n+      BASE_URL: import.meta.env.VITE_COMFYUI_SERVER_URL || 'https://your-comfyui-server.com',\r\n+      CLIENT_ID: import.meta.env.VITE_COMFYUI_CLIENT_ID || 'your-comfyui-client-id',\r\n+      REQUEST_TIMEOUT: parseInt(import.meta.env.VITE_COMFYUI_TIMEOUT) || 30000,\r\n       HEALTH_CHECK_TIMEOUT: 10000,\r\n       AUTO_SWITCH: true,\r\n       MAX_RETRIES: 3,\r\n       BACKUP_SERVERS: []\r\n"
                },
                {
                    "date": 1752327542066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n       if (result.success && result.data) {\r\n         const serverConfig = {\r\n           BASE_URL: result.data['comfyui.server_url'] || this.defaultConfig.BASE_URL,\r\n           CLIENT_ID: result.data['comfyui.client_id'] || this.defaultConfig.CLIENT_ID,\r\n-          REQUEST_TIMEOUT: parseInt(result.data['comfyui.request_timeout']) || this.defaultConfig.REQUEST_TIMEOUT,\r\n+          REQUEST_TIMEOUT: parseInt(result.data['comfyui.timeout']) || parseInt(result.data['comfyui.request_timeout']) || this.defaultConfig.REQUEST_TIMEOUT,\r\n           HEALTH_CHECK_TIMEOUT: parseInt(result.data['comfyui.health_check_timeout']) || this.defaultConfig.HEALTH_CHECK_TIMEOUT,\r\n           AUTO_SWITCH: result.data['comfyui.auto_switch'] === 'true' || result.data['comfyui.auto_switch'] === true,\r\n           MAX_RETRIES: parseInt(result.data['comfyui.max_retries']) || this.defaultConfig.MAX_RETRIES,\r\n           BACKUP_SERVERS: this.parseBackupServers(result.data['comfyui.backup_servers'])\r\n"
                },
                {
                    "date": 1752328795454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,11 +81,49 @@\n     // 在生产环境下，使用环境变量或默认值\r\n     return import.meta.env.VITE_API_BASE_URL || window.location.origin;\r\n   }\r\n \r\n+  // 清理旧的硬编码配置\r\n+  cleanupOldHardcodedConfig() {\r\n+    const savedConfig = localStorage.getItem('comfyui_config');\r\n+    if (savedConfig) {\r\n+      try {\r\n+        const parsed = JSON.parse(savedConfig);\r\n+        const hardcodedUrls = [\r\n+          'https://5gke5y9mzc-8188.cnb.run',\r\n+          'https://hwf0p724ub-8188.cnb.run',\r\n+          'https://dzqgp58z0s-8188.cnb.run'\r\n+        ];\r\n+        const hardcodedIds = [\r\n+          'abc1373d4ad648a3a81d0587fbe5534b'\r\n+        ];\r\n+\r\n+        // 检查是否包含硬编码配置\r\n+        const hasHardcodedUrl = hardcodedUrls.includes(parsed.COMFYUI_SERVER_URL || parsed.BASE_URL);\r\n+        const hasHardcodedId = hardcodedIds.includes(parsed.CLIENT_ID);\r\n+\r\n+        if (hasHardcodedUrl || hasHardcodedId) {\r\n+          console.warn('🧹 检测到旧的硬编码配置，正在清理...');\r\n+          console.warn('旧配置:', parsed);\r\n+          localStorage.removeItem('comfyui_config');\r\n+          console.log('✅ 已清理旧的硬编码配置');\r\n+          return true;\r\n+        }\r\n+      } catch (error) {\r\n+        console.warn('解析localStorage配置失败，清理配置:', error);\r\n+        localStorage.removeItem('comfyui_config');\r\n+        return true;\r\n+      }\r\n+    }\r\n+    return false;\r\n+  }\r\n+\r\n   // 获取配置（异步）\r\n   async getConfig() {\r\n-    if (this.configLoaded && this.currentConfig) {\r\n+    // 首先清理旧的硬编码配置\r\n+    const wasCleanedUp = this.cleanupOldHardcodedConfig();\r\n+\r\n+    if (this.configLoaded && this.currentConfig && !wasCleanedUp) {\r\n       return this.currentConfig;\r\n     }\r\n \r\n     // 如果正在加载配置，等待加载完成\r\n"
                },
                {
                    "date": 1752328900395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,192 +1,13 @@\n-// ComfyUI配置 - 动态配置模式\r\n-class ComfyUIConfig {\r\n-  constructor() {\r\n-    // 默认配置（作为后备）\r\n-    this.defaultConfig = {\r\n-      BASE_URL: import.meta.env.VITE_COMFYUI_SERVER_URL || 'https://your-comfyui-server.com',\r\n-      CLIENT_ID: import.meta.env.VITE_COMFYUI_CLIENT_ID || 'your-comfyui-client-id',\r\n-      REQUEST_TIMEOUT: parseInt(import.meta.env.VITE_COMFYUI_TIMEOUT) || 30000,\r\n-      HEALTH_CHECK_TIMEOUT: 10000,\r\n-      AUTO_SWITCH: true,\r\n-      MAX_RETRIES: 3,\r\n-      BACKUP_SERVERS: []\r\n-    };\r\n+// ComfyUI配置 - 直连模式\r\n+const config = {\r\n+  // ComfyUI服务器URL（支持环境变量配置）\r\n+  BASE_URL: import.meta.env.VITE_COMFYUI_SERVER_URL || 'https://hwf0p724ub-8188.cnb.run',\r\n+  CLIENT_ID: import.meta.env.VITE_COMFYUI_CLIENT_ID || 'abc1373d4ad648a3a81d0587fbe5534b',\r\n \r\n-    // 当前配置缓存\r\n-    this.currentConfig = null;\r\n-    this.configLoaded = false;\r\n-    this.configPromise = null;\r\n+  // 获取API URL（直连模式）\r\n+  getApiUrl() {\r\n+    return this.BASE_URL;\r\n   }\r\n+};\r\n \r\n-  // 从服务器获取配置\r\n-  async fetchConfigFromServer() {\r\n-    try {\r\n-      console.log('🔄 从服务器获取ComfyUI配置...');\r\n-\r\n-      // 获取后端API基础URL\r\n-      const apiBaseUrl = this.getBackendApiUrl();\r\n-      const response = await fetch(`${apiBaseUrl}/api/config`, {\r\n-        method: 'GET',\r\n-        headers: {\r\n-          'Content-Type': 'application/json'\r\n-        },\r\n-        timeout: 10000\r\n-      });\r\n-\r\n-      if (!response.ok) {\r\n-        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n-      }\r\n-\r\n-      const result = await response.json();\r\n-\r\n-      if (result.success && result.data) {\r\n-        const serverConfig = {\r\n-          BASE_URL: result.data['comfyui.server_url'] || this.defaultConfig.BASE_URL,\r\n-          CLIENT_ID: result.data['comfyui.client_id'] || this.defaultConfig.CLIENT_ID,\r\n-          REQUEST_TIMEOUT: parseInt(result.data['comfyui.timeout']) || parseInt(result.data['comfyui.request_timeout']) || this.defaultConfig.REQUEST_TIMEOUT,\r\n-          HEALTH_CHECK_TIMEOUT: parseInt(result.data['comfyui.health_check_timeout']) || this.defaultConfig.HEALTH_CHECK_TIMEOUT,\r\n-          AUTO_SWITCH: result.data['comfyui.auto_switch'] === 'true' || result.data['comfyui.auto_switch'] === true,\r\n-          MAX_RETRIES: parseInt(result.data['comfyui.max_retries']) || this.defaultConfig.MAX_RETRIES,\r\n-          BACKUP_SERVERS: this.parseBackupServers(result.data['comfyui.backup_servers'])\r\n-        };\r\n-\r\n-        console.log('✅ 成功获取服务器配置:', serverConfig);\r\n-        return serverConfig;\r\n-      } else {\r\n-        throw new Error('服务器返回的配置数据格式错误');\r\n-      }\r\n-    } catch (error) {\r\n-      console.warn('⚠️ 获取服务器配置失败，使用默认配置:', error.message);\r\n-      return this.defaultConfig;\r\n-    }\r\n-  }\r\n-\r\n-  // 解析备用服务器列表\r\n-  parseBackupServers(backupServersString) {\r\n-    if (!backupServersString) return [];\r\n-\r\n-    return backupServersString\r\n-      .split('\\n')\r\n-      .map(server => server.trim())\r\n-      .filter(server => server && server.startsWith('http'));\r\n-  }\r\n-\r\n-  // 获取后端API基础URL\r\n-  getBackendApiUrl() {\r\n-    // 在开发环境下，使用代理\r\n-    if (import.meta.env.DEV) {\r\n-      return '';  // 使用相对路径，由Vite代理处理\r\n-    }\r\n-\r\n-    // 在生产环境下，使用环境变量或默认值\r\n-    return import.meta.env.VITE_API_BASE_URL || window.location.origin;\r\n-  }\r\n-\r\n-  // 清理旧的硬编码配置\r\n-  cleanupOldHardcodedConfig() {\r\n-    const savedConfig = localStorage.getItem('comfyui_config');\r\n-    if (savedConfig) {\r\n-      try {\r\n-        const parsed = JSON.parse(savedConfig);\r\n-        const hardcodedUrls = [\r\n-          'https://5gke5y9mzc-8188.cnb.run',\r\n-          'https://hwf0p724ub-8188.cnb.run',\r\n-          'https://dzqgp58z0s-8188.cnb.run'\r\n-        ];\r\n-        const hardcodedIds = [\r\n-          'abc1373d4ad648a3a81d0587fbe5534b'\r\n-        ];\r\n-\r\n-        // 检查是否包含硬编码配置\r\n-        const hasHardcodedUrl = hardcodedUrls.includes(parsed.COMFYUI_SERVER_URL || parsed.BASE_URL);\r\n-        const hasHardcodedId = hardcodedIds.includes(parsed.CLIENT_ID);\r\n-\r\n-        if (hasHardcodedUrl || hasHardcodedId) {\r\n-          console.warn('🧹 检测到旧的硬编码配置，正在清理...');\r\n-          console.warn('旧配置:', parsed);\r\n-          localStorage.removeItem('comfyui_config');\r\n-          console.log('✅ 已清理旧的硬编码配置');\r\n-          return true;\r\n-        }\r\n-      } catch (error) {\r\n-        console.warn('解析localStorage配置失败，清理配置:', error);\r\n-        localStorage.removeItem('comfyui_config');\r\n-        return true;\r\n-      }\r\n-    }\r\n-    return false;\r\n-  }\r\n-\r\n-  // 获取配置（异步）\r\n-  async getConfig() {\r\n-    // 首先清理旧的硬编码配置\r\n-    const wasCleanedUp = this.cleanupOldHardcodedConfig();\r\n-\r\n-    if (this.configLoaded && this.currentConfig && !wasCleanedUp) {\r\n-      return this.currentConfig;\r\n-    }\r\n-\r\n-    // 如果正在加载配置，等待加载完成\r\n-    if (this.configPromise) {\r\n-      return await this.configPromise;\r\n-    }\r\n-\r\n-    // 开始加载配置\r\n-    this.configPromise = this.fetchConfigFromServer();\r\n-\r\n-    try {\r\n-      this.currentConfig = await this.configPromise;\r\n-      this.configLoaded = true;\r\n-      console.log('🎯 ComfyUI配置加载完成:', this.currentConfig);\r\n-      return this.currentConfig;\r\n-    } catch (error) {\r\n-      console.error('❌ 加载ComfyUI配置失败:', error);\r\n-      this.currentConfig = this.defaultConfig;\r\n-      this.configLoaded = true;\r\n-      return this.currentConfig;\r\n-    } finally {\r\n-      this.configPromise = null;\r\n-    }\r\n-  }\r\n-\r\n-  // 获取API URL（异步）\r\n-  async getApiUrl() {\r\n-    const config = await this.getConfig();\r\n-    return config.BASE_URL;\r\n-  }\r\n-\r\n-  // 获取客户端ID（异步）\r\n-  async getClientId() {\r\n-    const config = await this.getConfig();\r\n-    return config.CLIENT_ID;\r\n-  }\r\n-\r\n-  // 获取请求超时时间（异步）\r\n-  async getRequestTimeout() {\r\n-    const config = await this.getConfig();\r\n-    return config.REQUEST_TIMEOUT;\r\n-  }\r\n-\r\n-  // 获取备用服务器列表（异步）\r\n-  async getBackupServers() {\r\n-    const config = await this.getConfig();\r\n-    return config.BACKUP_SERVERS;\r\n-  }\r\n-\r\n-  // 刷新配置\r\n-  async refreshConfig() {\r\n-    this.configLoaded = false;\r\n-    this.currentConfig = null;\r\n-    return await this.getConfig();\r\n-  }\r\n-\r\n-  // 同步获取配置（如果已加载）\r\n\\ No newline at end of file\n-  getCurrentConfig() {\r\n-    return this.currentConfig || this.defaultConfig;\r\n-  }\r\n-}\r\n-\r\n-// 创建单例实例\r\n-const comfyUIConfig = new ComfyUIConfig();\r\n-\r\n-export default comfyUIConfig;\n+export default config;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1752326421095,
            "name": "Commit-0",
            "content": "// ComfyUI配置 - 动态配置模式\r\nclass ComfyUIConfig {\r\n  constructor() {\r\n    // 默认配置（作为后备）\r\n    this.defaultConfig = {\r\n      BASE_URL: import.meta.env.VITE_COMFYUI_SERVER_URL || 'https://hwf0p724ub-8188.cnb.run',\r\n      CLIENT_ID: import.meta.env.VITE_COMFYUI_CLIENT_ID || 'abc1373d4ad648a3a81d0587fbe5534b',\r\n      REQUEST_TIMEOUT: 30000,\r\n      HEALTH_CHECK_TIMEOUT: 10000,\r\n      AUTO_SWITCH: true,\r\n      MAX_RETRIES: 3,\r\n      BACKUP_SERVERS: []\r\n    };\r\n\r\n    // 当前配置缓存\r\n    this.currentConfig = null;\r\n    this.configLoaded = false;\r\n    this.configPromise = null;\r\n  }\r\n\r\n  // 从服务器获取配置\r\n  async fetchConfigFromServer() {\r\n    try {\r\n      console.log('🔄 从服务器获取ComfyUI配置...');\r\n\r\n      // 获取后端API基础URL\r\n      const apiBaseUrl = this.getBackendApiUrl();\r\n      const response = await fetch(`${apiBaseUrl}/api/config`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        timeout: 10000\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success && result.data) {\r\n        const serverConfig = {\r\n          BASE_URL: result.data['comfyui.server_url'] || this.defaultConfig.BASE_URL,\r\n          CLIENT_ID: result.data['comfyui.client_id'] || this.defaultConfig.CLIENT_ID,\r\n          REQUEST_TIMEOUT: parseInt(result.data['comfyui.request_timeout']) || this.defaultConfig.REQUEST_TIMEOUT,\r\n          HEALTH_CHECK_TIMEOUT: parseInt(result.data['comfyui.health_check_timeout']) || this.defaultConfig.HEALTH_CHECK_TIMEOUT,\r\n          AUTO_SWITCH: result.data['comfyui.auto_switch'] === 'true' || result.data['comfyui.auto_switch'] === true,\r\n          MAX_RETRIES: parseInt(result.data['comfyui.max_retries']) || this.defaultConfig.MAX_RETRIES,\r\n          BACKUP_SERVERS: this.parseBackupServers(result.data['comfyui.backup_servers'])\r\n        };\r\n\r\n        console.log('✅ 成功获取服务器配置:', serverConfig);\r\n        return serverConfig;\r\n      } else {\r\n        throw new Error('服务器返回的配置数据格式错误');\r\n      }\r\n    } catch (error) {\r\n      console.warn('⚠️ 获取服务器配置失败，使用默认配置:', error.message);\r\n      return this.defaultConfig;\r\n    }\r\n  }\r\n\r\n  // 解析备用服务器列表\r\n  parseBackupServers(backupServersString) {\r\n    if (!backupServersString) return [];\r\n\r\n    return backupServersString\r\n      .split('\\n')\r\n      .map(server => server.trim())\r\n      .filter(server => server && server.startsWith('http'));\r\n  }\r\n\r\n  // 获取后端API基础URL\r\n  getBackendApiUrl() {\r\n    // 在开发环境下，使用代理\r\n    if (import.meta.env.DEV) {\r\n      return '';  // 使用相对路径，由Vite代理处理\r\n    }\r\n\r\n    // 在生产环境下，使用环境变量或默认值\r\n    return import.meta.env.VITE_API_BASE_URL || window.location.origin;\r\n  }\r\n\r\n  // 获取配置（异步）\r\n  async getConfig() {\r\n    if (this.configLoaded && this.currentConfig) {\r\n      return this.currentConfig;\r\n    }\r\n\r\n    // 如果正在加载配置，等待加载完成\r\n    if (this.configPromise) {\r\n      return await this.configPromise;\r\n    }\r\n\r\n    // 开始加载配置\r\n    this.configPromise = this.fetchConfigFromServer();\r\n\r\n    try {\r\n      this.currentConfig = await this.configPromise;\r\n      this.configLoaded = true;\r\n      console.log('🎯 ComfyUI配置加载完成:', this.currentConfig);\r\n      return this.currentConfig;\r\n    } catch (error) {\r\n      console.error('❌ 加载ComfyUI配置失败:', error);\r\n      this.currentConfig = this.defaultConfig;\r\n      this.configLoaded = true;\r\n      return this.currentConfig;\r\n    } finally {\r\n      this.configPromise = null;\r\n    }\r\n  }\r\n\r\n  // 获取API URL（异步）\r\n  async getApiUrl() {\r\n    const config = await this.getConfig();\r\n    return config.BASE_URL;\r\n  }\r\n\r\n  // 获取客户端ID（异步）\r\n  async getClientId() {\r\n    const config = await this.getConfig();\r\n    return config.CLIENT_ID;\r\n  }\r\n\r\n  // 获取请求超时时间（异步）\r\n  async getRequestTimeout() {\r\n    const config = await this.getConfig();\r\n    return config.REQUEST_TIMEOUT;\r\n  }\r\n\r\n  // 获取备用服务器列表（异步）\r\n  async getBackupServers() {\r\n    const config = await this.getConfig();\r\n    return config.BACKUP_SERVERS;\r\n  }\r\n\r\n  // 刷新配置\r\n  async refreshConfig() {\r\n    this.configLoaded = false;\r\n    this.currentConfig = null;\r\n    return await this.getConfig();\r\n  }\r\n\r\n  // 同步获取配置（如果已加载）\r\n  getCurrentConfig() {\r\n    return this.currentConfig || this.defaultConfig;\r\n  }\r\n}\r\n\r\n// 创建单例实例\r\nconst comfyUIConfig = new ComfyUIConfig();\r\n\r\nexport default comfyUIConfig;"
        }
    ]
}
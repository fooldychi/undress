{
    "sourceFile": "client/src/config/imageSizeConfig.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1752421099707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752421128093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,10 +39,17 @@\n // 组件特定配置\n export const COMPONENT_CONFIGS = {\n   // 上传组件配置\n   UPLOAD: {\n-    // 固定3:4比例，居中显示\n-    containerStyle: IMAGE_SIZE_CONFIG.CONTAINER_STYLE,\n+    // 固定高度，等比例缩放\n+    containerStyle: {\n+      minHeight: `${IMAGE_SIZE_CONFIG.MIN_HEIGHT}px`,\n+      maxHeight: `${IMAGE_SIZE_CONFIG.MAX_HEIGHT}px`,\n+      width: 'auto',\n+      display: 'flex',\n+      alignItems: 'center',\n+      justifyContent: 'center'\n+    },\n \n     // 占位符样式\n     placeholderStyle: {\n       display: 'flex',\n@@ -55,32 +62,33 @@\n   },\n \n   // 上传后展示配置\n   PREVIEW: {\n-    // 同等高度，等比例展示，宽度不限制\n+    // 响应式高度，等比例展示，宽度自适应\n     containerStyle: {\n+      minHeight: `${IMAGE_SIZE_CONFIG.MIN_HEIGHT}px`,\n       maxHeight: `${IMAGE_SIZE_CONFIG.MAX_HEIGHT}px`,\n       width: 'auto',\n       display: 'flex',\n       alignItems: 'center',\n       justifyContent: 'center'\n     },\n \n     imageStyle: {\n+      minHeight: `${IMAGE_SIZE_CONFIG.MIN_HEIGHT}px`,\n       maxHeight: `${IMAGE_SIZE_CONFIG.MAX_HEIGHT}px`,\n       width: 'auto',\n       objectFit: 'contain'\n     }\n   },\n \n   // 对比组件配置\n   COMPARISON: {\n-    // 与上传展示相同大小\n+    // 响应式高度，等比例展示\n     containerStyle: {\n+      minHeight: `${IMAGE_SIZE_CONFIG.MIN_HEIGHT}px`,\n       maxHeight: `${IMAGE_SIZE_CONFIG.MAX_HEIGHT}px`,\n-      aspectRatio: IMAGE_SIZE_CONFIG.CSS_ASPECT_RATIO,\n       width: '100%',\n-      maxWidth: `${IMAGE_SIZE_CONFIG.MAX_WIDTH}px`,\n       margin: '0 auto'\n     }\n   }\n }\n"
                },
                {
                    "date": 1752421170970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,16 +109,13 @@\n     }\n \n     let style = { ...baseConfig.containerStyle }\n \n-    // 移动端调整\n+    // 移动端调整高度\n     if (isMobile) {\n-      if (type === 'upload' || type === 'comparison') {\n-        style.maxHeight = `${IMAGE_SIZE_CONFIG.MOBILE.MAX_HEIGHT}px`\n-        style.maxWidth = `${IMAGE_SIZE_CONFIG.MOBILE.MAX_WIDTH}px`\n-      } else if (type === 'preview') {\n-        style.maxHeight = `${IMAGE_SIZE_CONFIG.MOBILE.MAX_HEIGHT}px`\n-      }\n+      const heights = IMAGE_SIZE_CONFIG.getResponsiveHeight(true)\n+      style.minHeight = `${heights.minHeight}px`\n+      style.maxHeight = `${heights.maxHeight}px`\n     }\n \n     return style\n   },\n"
                },
                {
                    "date": 1752421189050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,20 +128,24 @@\n    */\n   getImageStyle(type, isMobile = false) {\n     const baseConfig = COMPONENT_CONFIGS[type.toUpperCase()]\n     if (!baseConfig?.imageStyle) {\n+      const heights = isMobile ? IMAGE_SIZE_CONFIG.getResponsiveHeight(true) : IMAGE_SIZE_CONFIG.getResponsiveHeight(false)\n       return {\n-        width: '100%',\n-        height: '100%',\n-        objectFit: type === 'upload' ? 'cover' : 'contain'\n+        minHeight: `${heights.minHeight}px`,\n+        maxHeight: `${heights.maxHeight}px`,\n+        width: 'auto',\n+        objectFit: 'contain'\n       }\n     }\n \n     let style = { ...baseConfig.imageStyle }\n \n     // 移动端调整\n-    if (isMobile && type === 'preview') {\n-      style.maxHeight = `${IMAGE_SIZE_CONFIG.MOBILE.MAX_HEIGHT}px`\n+    if (isMobile) {\n+      const heights = IMAGE_SIZE_CONFIG.getResponsiveHeight(true)\n+      style.minHeight = `${heights.minHeight}px`\n+      style.maxHeight = `${heights.maxHeight}px`\n     }\n \n     return style\n   },\n"
                }
            ],
            "date": 1752421099706,
            "name": "Commit-0",
            "content": "/**\n * 图片组件统一尺寸配置\n * 确保上传、展示、对比组件的视觉一致性\n */\n\n// 基准尺寸配置\nexport const IMAGE_SIZE_CONFIG = {\n  // 响应式高度配置\n  MIN_HEIGHT: 300,\n  MAX_HEIGHT: 500,\n\n  // 响应式断点\n  BREAKPOINTS: {\n    mobile: 768,\n    tablet: 1024\n  },\n\n  // 移动端配置\n  MOBILE: {\n    MIN_HEIGHT: 300,\n    MAX_HEIGHT: 400,\n  },\n\n  // 获取响应式高度\n  getResponsiveHeight(isMobile = false) {\n    if (isMobile) {\n      return {\n        minHeight: this.MOBILE.MIN_HEIGHT,\n        maxHeight: this.MOBILE.MAX_HEIGHT\n      }\n    }\n    return {\n      minHeight: this.MIN_HEIGHT,\n      maxHeight: this.MAX_HEIGHT\n    }\n  }\n}\n\n// 组件特定配置\nexport const COMPONENT_CONFIGS = {\n  // 上传组件配置\n  UPLOAD: {\n    // 固定3:4比例，居中显示\n    containerStyle: IMAGE_SIZE_CONFIG.CONTAINER_STYLE,\n\n    // 占位符样式\n    placeholderStyle: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      padding: '16px'\n    }\n  },\n\n  // 上传后展示配置\n  PREVIEW: {\n    // 同等高度，等比例展示，宽度不限制\n    containerStyle: {\n      maxHeight: `${IMAGE_SIZE_CONFIG.MAX_HEIGHT}px`,\n      width: 'auto',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n\n    imageStyle: {\n      maxHeight: `${IMAGE_SIZE_CONFIG.MAX_HEIGHT}px`,\n      width: 'auto',\n      objectFit: 'contain'\n    }\n  },\n\n  // 对比组件配置\n  COMPARISON: {\n    // 与上传展示相同大小\n    containerStyle: {\n      maxHeight: `${IMAGE_SIZE_CONFIG.MAX_HEIGHT}px`,\n      aspectRatio: IMAGE_SIZE_CONFIG.CSS_ASPECT_RATIO,\n      width: '100%',\n      maxWidth: `${IMAGE_SIZE_CONFIG.MAX_WIDTH}px`,\n      margin: '0 auto'\n    }\n  }\n}\n\n// 工具函数\nexport const ImageSizeUtils = {\n  /**\n   * 获取响应式容器样式\n   * @param {string} type - 组件类型: 'upload' | 'preview' | 'comparison'\n   * @param {boolean} isMobile - 是否为移动端\n   * @returns {object} 样式对象\n   */\n  getContainerStyle(type, isMobile = false) {\n    const baseConfig = COMPONENT_CONFIGS[type.toUpperCase()]\n    if (!baseConfig) {\n      console.warn(`Unknown component type: ${type}`)\n      return {}\n    }\n\n    let style = { ...baseConfig.containerStyle }\n\n    // 移动端调整\n    if (isMobile) {\n      if (type === 'upload' || type === 'comparison') {\n        style.maxHeight = `${IMAGE_SIZE_CONFIG.MOBILE.MAX_HEIGHT}px`\n        style.maxWidth = `${IMAGE_SIZE_CONFIG.MOBILE.MAX_WIDTH}px`\n      } else if (type === 'preview') {\n        style.maxHeight = `${IMAGE_SIZE_CONFIG.MOBILE.MAX_HEIGHT}px`\n      }\n    }\n\n    return style\n  },\n\n  /**\n   * 获取图片样式\n   * @param {string} type - 组件类型\n   * @param {boolean} isMobile - 是否为移动端\n   * @returns {object} 样式对象\n   */\n  getImageStyle(type, isMobile = false) {\n    const baseConfig = COMPONENT_CONFIGS[type.toUpperCase()]\n    if (!baseConfig?.imageStyle) {\n      return {\n        width: '100%',\n        height: '100%',\n        objectFit: type === 'upload' ? 'cover' : 'contain'\n      }\n    }\n\n    let style = { ...baseConfig.imageStyle }\n\n    // 移动端调整\n    if (isMobile && type === 'preview') {\n      style.maxHeight = `${IMAGE_SIZE_CONFIG.MOBILE.MAX_HEIGHT}px`\n    }\n\n    return style\n  },\n\n  /**\n   * 检测是否为移动端\n   * @returns {boolean}\n   */\n  isMobile() {\n    return window.innerWidth <= IMAGE_SIZE_CONFIG.BREAKPOINTS.mobile\n  },\n\n  /**\n   * 计算图片在容器中的实际显示尺寸\n   * @param {number} imageWidth - 图片原始宽度\n   * @param {number} imageHeight - 图片原始高度\n   * @param {string} type - 组件类型\n   * @returns {object} { width, height }\n   */\n  calculateDisplaySize(imageWidth, imageHeight, type = 'preview') {\n    const maxHeight = this.isMobile()\n      ? IMAGE_SIZE_CONFIG.MOBILE.MAX_HEIGHT\n      : IMAGE_SIZE_CONFIG.MAX_HEIGHT\n\n    const aspectRatio = imageWidth / imageHeight\n\n    if (type === 'upload' || type === 'comparison') {\n      // 固定3:4比例\n      return {\n        width: maxHeight * IMAGE_SIZE_CONFIG.ASPECT_RATIO,\n        height: maxHeight\n      }\n    } else {\n      // 等比例缩放\n      if (imageHeight > maxHeight) {\n        return {\n          width: maxHeight * aspectRatio,\n          height: maxHeight\n        }\n      }\n      return {\n        width: imageWidth,\n        height: imageHeight\n      }\n    }\n  }\n}\n\nexport default IMAGE_SIZE_CONFIG\n"
        }
    ]
}
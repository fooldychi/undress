{
    "sourceFile": "client/src/config/imageProcessingConfigs.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1752392983852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752395153949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,22 +49,10 @@\n         })\n       }\n     ],\n \n-    // 状态提示配置\n-    statusConfig: {\n-      showUploadStatus: true,\n-      statusItems: [\n-        {\n-          key: 'main-image',\n-          icon: 'photograph',\n-          text: '人物照片',\n-          successText: '人物照片已上传',\n-          emptyText: '请上传人物照片'\n-        }\n-      ]\n-    },\n \n+\n     // 结果配置\n     resultConfig: {\n       showComparison: true,\n       comparisonType: 'slider', // 'slider' | 'side-by-side'\n"
                },
                {
                    "date": 1752395183634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,29 +109,10 @@\n         })\n       }\n     ],\n \n-    statusConfig: {\n-      showUploadStatus: true,\n-      statusItems: [\n-        {\n-          key: 'face-photos',\n-          icon: 'friends',\n-          text: '人脸照片',\n-          countText: '已上传 {count}/4 张人脸照片',\n-          successText: '人脸照片已上传',\n-          emptyText: '请上传人脸照片'\n-        },\n-        {\n-          key: 'target-image',\n-          icon: 'photo',\n-          text: '目标图片',\n-          successText: '目标图片已上传',\n-          emptyText: '请上传目标图片'\n-        }\n-      ]\n-    },\n \n+\n     resultConfig: {\n       showComparison: true,\n       comparisonType: 'slider',\n       downloadEnabled: true,\n"
                },
                {
                    "date": 1752395214676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,21 +148,10 @@\n         ]\n       }\n     ],\n \n-    statusConfig: {\n-      showUploadStatus: true,\n-      statusItems: [\n-        {\n-          key: 'text-prompt',\n-          icon: 'edit',\n-          text: '文字描述',\n-          successText: '描述已输入',\n-          emptyText: '请输入图像描述'\n-        }\n-      ]\n-    },\n \n+\n     resultConfig: {\n       showComparison: false,\n       comparisonType: 'none',\n       downloadEnabled: true,\n"
                },
                {
                    "date": 1752396181189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,12 +252,8 @@\n     processButtonText: '开始处理',\n     processingTitle: '正在处理...',\n     processingDescription: '请耐心等待',\n     uploadPanels: [],\n-    statusConfig: {\n-      showUploadStatus: true,\n-      statusItems: []\n-    },\n     resultConfig: {\n       showComparison: true,\n       comparisonType: 'slider',\n       downloadEnabled: true,\n"
                },
                {
                    "date": 1752436658658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,46 +119,9 @@\n       resetEnabled: true\n     }\n   },\n \n-  // 文生图配置\n-  'text-to-image': {\n-    id: 'text-to-image',\n-    title: '文生图',\n-    description: '输入文字描述，AI为您生成精美图像',\n-    processButtonText: '生成图像',\n-    processingTitle: '正在生成图像...',\n-    processingDescription: '请耐心等待，AI正在为您创作',\n \n-    // 文生图使用文本输入而不是图片上传\n-    inputPanels: [\n-      {\n-        id: 'text-prompt',\n-        type: 'text',\n-        title: '描述您想要的图像',\n-        icon: 'edit',\n-        iconColor: 'var(--van-success-color)',\n-        placeholder: '请详细描述您想要生成的图像，例如：一只橙色的猫坐在窗台上，窗外是蓝天白云，阳光透过窗户洒在猫咪身上，画面温馨美好，高清摄影风格',\n-        rows: 6,\n-        maxLength: 500,\n-        required: true,\n-        tips: [\n-          '描述越详细，生成效果越好',\n-          '可以包含风格、色彩、构图等要素',\n-          '支持中英文描述'\n-        ]\n-      }\n-    ],\n-\n-\n-\n-    resultConfig: {\n-      showComparison: false,\n-      comparisonType: 'none',\n-      downloadEnabled: true,\n-      resetEnabled: true\n-    }\n-  }\n }\n \n /**\n  * 获取指定功能的配置\n"
                },
                {
                    "date": 1753531656460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,248 +1,248 @@\n-/**\n- * 图片处理功能配置文件\n- * 用于管理各种图片处理功能的界面配置和描述信息\n- * 实现组件描述与模板的分离，便于后续自定义化\n- */\n-\n-// 基础上传配置模板\n-const createUploadConfig = (overrides = {}) => ({\n-  maxSize: 10 * 1024 * 1024, // 10MB\n-  accept: 'image/*',\n-  tips: [\n-    '支持 JPG、PNG 格式',\n-    '建议尺寸 512x512 以上',\n-    '图片清晰度影响处理效果'\n-  ],\n-  ...overrides\n-})\n-\n-// 图片处理功能配置\n-export const IMAGE_PROCESSING_CONFIGS = {\n-  // 一键褪衣配置\n-  'clothes-swap': {\n-    id: 'clothes-swap',\n-    title: '一键褪衣',\n-    description: '上传人物照片，AI智能移除服装',\n-    processButtonText: '开始处理',\n-    processingTitle: '正在处理图片...',\n-    processingDescription: '请耐心等待，处理时间可能需要几分钟',\n-\n-    // 上传面板配置\n-    uploadPanels: [\n-      {\n-        id: 'main-image',\n-        title: '人物照片',\n-        icon: 'photograph',\n-        iconColor: 'var(--van-primary-color)',\n-        uploadType: 'single',\n-        minCount: 1,\n-        maxCount: 1,\n-        uploadText: '选择人物照片',\n-        showCount: false,\n-        ...createUploadConfig({\n-          tips: [\n-            '支持 JPG、PNG 格式',\n-            '建议尺寸 512x512 以上',\n-            '人脸清晰、正面效果更佳',\n-            '单张照片处理'\n-          ]\n-        })\n-      }\n-    ],\n-\n-\n-\n-    // 结果配置\n-    resultConfig: {\n-      showComparison: true,\n-      comparisonType: 'slider', // 'slider' | 'side-by-side'\n-      downloadEnabled: true,\n-      resetEnabled: true\n-    }\n-  },\n-\n-  // 极速换脸配置\n-  'face-swap': {\n-    id: 'face-swap',\n-    title: '极速换脸',\n-    description: '上传人脸照片和目标图片，AI智能换脸',\n-    processButtonText: '开始换脸',\n-    processingTitle: '正在处理换脸...',\n-    processingDescription: '请耐心等待，处理时间可能需要几分钟',\n-\n-    uploadPanels: [\n-      {\n-        id: 'face-photos',\n-        title: '人脸照片',\n-        icon: 'friends-o',\n-        iconColor: 'var(--van-warning-color)',\n-        uploadType: 'multi',\n-        minCount: 1,\n-        maxCount: 4,\n-        uploadText: '添加人脸',\n-        showCount: true,\n-        ...createUploadConfig({\n-          tips: [\n-            '支持 JPG、PNG 格式',\n-            '建议尺寸 512x512 以上',\n-            '人脸清晰、正面效果更佳',\n-            '可一次选择多张照片'\n-          ]\n-        })\n-      },\n-      {\n-        id: 'target-image',\n-        title: '目标图片',\n-        icon: 'photo-o',\n-        iconColor: 'var(--van-success-color)',\n-        uploadType: 'single',\n-        minCount: 1,\n-        maxCount: 1,\n-        uploadText: '选择目标图片',\n-        showCount: false,\n-        ...createUploadConfig({\n-          tips: [\n-            '支持 JPG、PNG 格式',\n-            '建议尺寸 512x512 以上',\n-            '图片清晰度影响换脸效果'\n-          ]\n-        })\n-      }\n-    ],\n-\n-\n-\n-    resultConfig: {\n-      showComparison: true,\n-      comparisonType: 'slider',\n-      downloadEnabled: true,\n-      resetEnabled: true\n-    }\n-  },\n-\n-\n-}\n-\n-/**\n- * 获取指定功能的配置\n- * @param {string} functionId 功能ID\n- * @returns {Object|null} 功能配置对象\n- */\n-export function getImageProcessingConfig(functionId) {\n-  return IMAGE_PROCESSING_CONFIGS[functionId] || null\n-}\n-\n-/**\n- * 获取所有图片处理功能配置\n- * @returns {Object} 所有功能配置\n- */\n-export function getAllImageProcessingConfigs() {\n-  return IMAGE_PROCESSING_CONFIGS\n-}\n-\n-/**\n- * 更新功能配置\n- * @param {string} functionId 功能ID\n- * @param {Object} updates 更新的配置\n- * @returns {boolean} 更新是否成功\n- */\n-export function updateImageProcessingConfig(functionId, updates) {\n-  if (!IMAGE_PROCESSING_CONFIGS[functionId]) {\n-    console.warn(`功能配置不存在: ${functionId}`)\n-    return false\n-  }\n-\n-  // 深度合并配置\n-  IMAGE_PROCESSING_CONFIGS[functionId] = {\n-    ...IMAGE_PROCESSING_CONFIGS[functionId],\n-    ...updates\n-  }\n-\n-  return true\n-}\n-\n-/**\n- * 验证上传配置\n- * @param {Object} config 上传配置\n- * @returns {boolean} 配置是否有效\n- */\n-export function validateUploadConfig(config) {\n-  const requiredFields = ['id', 'title', 'uploadType', 'minCount', 'maxCount']\n-\n-  for (const field of requiredFields) {\n-    if (!(field in config)) {\n-      console.error(`上传配置缺少必需字段: ${field}`)\n-      return false\n-    }\n-  }\n-\n-  if (config.uploadType !== 'single' && config.uploadType !== 'multi') {\n-    console.error(`无效的上传类型: ${config.uploadType}`)\n-    return false\n-  }\n-\n-  if (config.minCount > config.maxCount) {\n-    console.error('最小数量不能大于最大数量')\n-    return false\n-  }\n-\n-  return true\n-}\n-\n-/**\n- * 模拟从后台API获取功能配置\n- * @param {string} functionId 功能ID\n- * @returns {Promise<Object>} 功能配置\n- */\n-export async function fetchImageProcessingConfigFromAPI(functionId) {\n-  // 模拟API延迟\n-  await new Promise(resolve => setTimeout(resolve, 100))\n-\n-  // 这里后续可以替换为真实的API调用\n-  // const response = await fetch(`/api/admin/image-processing-configs/${functionId}`)\n-  // return response.json()\n-\n-  return getImageProcessingConfig(functionId)\n-}\n-\n-/**\n- * 创建自定义功能配置\n- * @param {Object} baseConfig 基础配置\n- * @returns {Object} 完整的功能配置\n- */\n-export function createCustomImageProcessingConfig(baseConfig) {\n-  const defaultConfig = {\n-    processButtonText: '开始处理',\n-    processingTitle: '正在处理...',\n-    processingDescription: '请耐心等待',\n-    uploadPanels: [],\n-    resultConfig: {\n-      showComparison: true,\n-      comparisonType: 'slider',\n-      downloadEnabled: true,\n-      resetEnabled: true\n-    }\n-  }\n-\n-  return {\n-    ...defaultConfig,\n-    ...baseConfig\n-  }\n-}\n-\n-// 导出配置类型定义（用于TypeScript支持）\n-export const CONFIG_TYPES = {\n-  UPLOAD_TYPE: {\n-    SINGLE: 'single',\n-    MULTI: 'multi'\n-  },\n-  COMPARISON_TYPE: {\n-    SLIDER: 'slider',\n-    SIDE_BY_SIDE: 'side-by-side',\n-    NONE: 'none'\n-  },\n-  INPUT_TYPE: {\n-    IMAGE: 'image',\n-    TEXT: 'text'\n-  }\n-}\n+/**\r\n+ * 图片处理功能配置文件\r\n+ * 用于管理各种图片处理功能的界面配置和描述信息\r\n+ * 实现组件描述与模板的分离，便于后续自定义化\r\n+ */\r\n+\r\n+// 基础上传配置模板\r\n+const createUploadConfig = (overrides = {}) => ({\r\n+  maxSize: 10 * 1024 * 1024, // 10MB\r\n+  accept: 'image/*',\r\n+  tips: [\r\n+    '支持 JPG、PNG 格式',\r\n+    '建议尺寸 512x512 以上',\r\n+    '图片清晰度影响处理效果'\r\n+  ],\r\n+  ...overrides\r\n+})\r\n+\r\n+// 图片处理功能配置\r\n+export const IMAGE_PROCESSING_CONFIGS = {\r\n+  // 一键褪衣配置\r\n+  'clothes-swap': {\r\n+    id: 'clothes-swap',\r\n+    title: '一键褪衣',\r\n+    description: '上传人物照片，AI智能移除服装',\r\n+    processButtonText: '开始处理',\r\n+    processingTitle: '正在处理图片...',\r\n+    processingDescription: '',\r\n+\r\n+    // 上传面板配置\r\n+    uploadPanels: [\r\n+      {\r\n+        id: 'main-image',\r\n+        title: '人物照片',\r\n+        icon: 'photograph',\r\n+        iconColor: 'var(--van-primary-color)',\r\n+        uploadType: 'single',\r\n+        minCount: 1,\r\n+        maxCount: 1,\r\n+        uploadText: '选择人物照片',\r\n+        showCount: false,\r\n+        ...createUploadConfig({\r\n+          tips: [\r\n+            '支持 JPG、PNG 格式',\r\n+            '建议尺寸 512x512 以上',\r\n+            '人脸清晰、正面效果更佳',\r\n+            '单张照片处理'\r\n+          ]\r\n+        })\r\n+      }\r\n+    ],\r\n+\r\n+\r\n+\r\n+    // 结果配置\r\n+    resultConfig: {\r\n+      showComparison: true,\r\n+      comparisonType: 'slider', // 'slider' | 'side-by-side'\r\n+      downloadEnabled: true,\r\n+      resetEnabled: true\r\n+    }\r\n+  },\r\n+\r\n+  // 极速换脸配置\r\n+  'face-swap': {\r\n+    id: 'face-swap',\r\n+    title: '极速换脸',\r\n+    description: '上传人脸照片和目标图片，AI智能换脸',\r\n+    processButtonText: '开始换脸',\r\n+    processingTitle: '正在处理换脸...',\r\n+    processingDescription: '请耐心等待，处理时间可能需要几分钟',\r\n+\r\n+    uploadPanels: [\r\n+      {\r\n+        id: 'face-photos',\r\n+        title: '人脸照片',\r\n+        icon: 'friends-o',\r\n+        iconColor: 'var(--van-warning-color)',\r\n+        uploadType: 'multi',\r\n+        minCount: 1,\r\n+        maxCount: 4,\r\n+        uploadText: '添加人脸',\r\n+        showCount: true,\r\n+        ...createUploadConfig({\r\n+          tips: [\r\n+            '支持 JPG、PNG 格式',\r\n+            '建议尺寸 512x512 以上',\r\n+            '人脸清晰、正面效果更佳',\r\n+            '可一次选择多张照片'\r\n+          ]\r\n+        })\r\n+      },\r\n+      {\r\n+        id: 'target-image',\r\n+        title: '目标图片',\r\n+        icon: 'photo-o',\r\n+        iconColor: 'var(--van-success-color)',\r\n+        uploadType: 'single',\r\n+        minCount: 1,\r\n+        maxCount: 1,\r\n+        uploadText: '选择目标图片',\r\n+        showCount: false,\r\n+        ...createUploadConfig({\r\n+          tips: [\r\n+            '支持 JPG、PNG 格式',\r\n+            '建议尺寸 512x512 以上',\r\n+            '图片清晰度影响换脸效果'\r\n+          ]\r\n+        })\r\n+      }\r\n+    ],\r\n+\r\n+\r\n+\r\n+    resultConfig: {\r\n+      showComparison: true,\r\n+      comparisonType: 'slider',\r\n+      downloadEnabled: true,\r\n+      resetEnabled: true\r\n+    }\r\n+  },\r\n+\r\n+\r\n+}\r\n+\r\n+/**\r\n+ * 获取指定功能的配置\r\n+ * @param {string} functionId 功能ID\r\n+ * @returns {Object|null} 功能配置对象\r\n+ */\r\n+export function getImageProcessingConfig(functionId) {\r\n+  return IMAGE_PROCESSING_CONFIGS[functionId] || null\r\n+}\r\n+\r\n+/**\r\n+ * 获取所有图片处理功能配置\r\n+ * @returns {Object} 所有功能配置\r\n+ */\r\n+export function getAllImageProcessingConfigs() {\r\n+  return IMAGE_PROCESSING_CONFIGS\r\n+}\r\n+\r\n+/**\r\n+ * 更新功能配置\r\n+ * @param {string} functionId 功能ID\r\n+ * @param {Object} updates 更新的配置\r\n+ * @returns {boolean} 更新是否成功\r\n+ */\r\n+export function updateImageProcessingConfig(functionId, updates) {\r\n+  if (!IMAGE_PROCESSING_CONFIGS[functionId]) {\r\n+    console.warn(`功能配置不存在: ${functionId}`)\r\n+    return false\r\n+  }\r\n+\r\n+  // 深度合并配置\r\n+  IMAGE_PROCESSING_CONFIGS[functionId] = {\r\n+    ...IMAGE_PROCESSING_CONFIGS[functionId],\r\n+    ...updates\r\n+  }\r\n+\r\n+  return true\r\n+}\r\n+\r\n+/**\r\n+ * 验证上传配置\r\n+ * @param {Object} config 上传配置\r\n+ * @returns {boolean} 配置是否有效\r\n+ */\r\n+export function validateUploadConfig(config) {\r\n+  const requiredFields = ['id', 'title', 'uploadType', 'minCount', 'maxCount']\r\n+\r\n+  for (const field of requiredFields) {\r\n+    if (!(field in config)) {\r\n+      console.error(`上传配置缺少必需字段: ${field}`)\r\n+      return false\r\n+    }\r\n+  }\r\n+\r\n+  if (config.uploadType !== 'single' && config.uploadType !== 'multi') {\r\n+    console.error(`无效的上传类型: ${config.uploadType}`)\r\n+    return false\r\n+  }\r\n+\r\n+  if (config.minCount > config.maxCount) {\r\n+    console.error('最小数量不能大于最大数量')\r\n+    return false\r\n+  }\r\n+\r\n+  return true\r\n+}\r\n+\r\n+/**\r\n+ * 模拟从后台API获取功能配置\r\n+ * @param {string} functionId 功能ID\r\n+ * @returns {Promise<Object>} 功能配置\r\n+ */\r\n+export async function fetchImageProcessingConfigFromAPI(functionId) {\r\n+  // 模拟API延迟\r\n+  await new Promise(resolve => setTimeout(resolve, 100))\r\n+\r\n+  // 这里后续可以替换为真实的API调用\r\n+  // const response = await fetch(`/api/admin/image-processing-configs/${functionId}`)\r\n+  // return response.json()\r\n+\r\n+  return getImageProcessingConfig(functionId)\r\n+}\r\n+\r\n+/**\r\n+ * 创建自定义功能配置\r\n+ * @param {Object} baseConfig 基础配置\r\n+ * @returns {Object} 完整的功能配置\r\n+ */\r\n+export function createCustomImageProcessingConfig(baseConfig) {\r\n+  const defaultConfig = {\r\n+    processButtonText: '开始处理',\r\n+    processingTitle: '正在处理...',\r\n+    processingDescription: '请耐心等待',\r\n+    uploadPanels: [],\r\n+    resultConfig: {\r\n+      showComparison: true,\r\n+      comparisonType: 'slider',\r\n+      downloadEnabled: true,\r\n+      resetEnabled: true\r\n+    }\r\n+  }\r\n+\r\n+  return {\r\n+    ...defaultConfig,\r\n+    ...baseConfig\r\n+  }\r\n+}\r\n+\r\n+// 导出配置类型定义（用于TypeScript支持）\r\n+export const CONFIG_TYPES = {\r\n+  UPLOAD_TYPE: {\r\n+    SINGLE: 'single',\r\n+    MULTI: 'multi'\r\n+  },\r\n+  COMPARISON_TYPE: {\r\n+    SLIDER: 'slider',\r\n+    SIDE_BY_SIDE: 'side-by-side',\r\n+    NONE: 'none'\r\n+  },\r\n+  INPUT_TYPE: {\r\n+    IMAGE: 'image',\r\n+    TEXT: 'text'\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1753531672560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n     title: '极速换脸',\r\n     description: '上传人脸照片和目标图片，AI智能换脸',\r\n     processButtonText: '开始换脸',\r\n     processingTitle: '正在处理换脸...',\r\n-    processingDescription: '请耐心等待，处理时间可能需要几分钟',\r\n+    processingDescription: '',\r\n \r\n     uploadPanels: [\r\n       {\r\n         id: 'face-photos',\r\n"
                },
                {
                    "date": 1753539686357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,11 +22,12 @@\n   'clothes-swap': {\r\n     id: 'clothes-swap',\r\n     title: '一键褪衣',\r\n     description: '上传人物照片，AI智能移除服装',\r\n-    processButtonText: '开始处理',\r\n+    processButtonText: '开始处理（消耗20积分）',\r\n     processingTitle: '正在处理图片...',\r\n     processingDescription: '',\r\n+    pointsCost: 20,\r\n \r\n     // 上传面板配置\r\n     uploadPanels: [\r\n       {\r\n"
                },
                {
                    "date": 1753539697739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,11 +66,12 @@\n   'face-swap': {\r\n     id: 'face-swap',\r\n     title: '极速换脸',\r\n     description: '上传人脸照片和目标图片，AI智能换脸',\r\n-    processButtonText: '开始换脸',\r\n+    processButtonText: '开始换脸（消耗20积分）',\r\n     processingTitle: '正在处理换脸...',\r\n     processingDescription: '',\r\n+    pointsCost: 20,\r\n \r\n     uploadPanels: [\r\n       {\r\n         id: 'face-photos',\r\n"
                }
            ],
            "date": 1752392983852,
            "name": "Commit-0",
            "content": "/**\n * 图片处理功能配置文件\n * 用于管理各种图片处理功能的界面配置和描述信息\n * 实现组件描述与模板的分离，便于后续自定义化\n */\n\n// 基础上传配置模板\nconst createUploadConfig = (overrides = {}) => ({\n  maxSize: 10 * 1024 * 1024, // 10MB\n  accept: 'image/*',\n  tips: [\n    '支持 JPG、PNG 格式',\n    '建议尺寸 512x512 以上',\n    '图片清晰度影响处理效果'\n  ],\n  ...overrides\n})\n\n// 图片处理功能配置\nexport const IMAGE_PROCESSING_CONFIGS = {\n  // 一键褪衣配置\n  'clothes-swap': {\n    id: 'clothes-swap',\n    title: '一键褪衣',\n    description: '上传人物照片，AI智能移除服装',\n    processButtonText: '开始处理',\n    processingTitle: '正在处理图片...',\n    processingDescription: '请耐心等待，处理时间可能需要几分钟',\n\n    // 上传面板配置\n    uploadPanels: [\n      {\n        id: 'main-image',\n        title: '人物照片',\n        icon: 'photograph',\n        iconColor: 'var(--van-primary-color)',\n        uploadType: 'single',\n        minCount: 1,\n        maxCount: 1,\n        uploadText: '选择人物照片',\n        showCount: false,\n        ...createUploadConfig({\n          tips: [\n            '支持 JPG、PNG 格式',\n            '建议尺寸 512x512 以上',\n            '人脸清晰、正面效果更佳',\n            '单张照片处理'\n          ]\n        })\n      }\n    ],\n\n    // 状态提示配置\n    statusConfig: {\n      showUploadStatus: true,\n      statusItems: [\n        {\n          key: 'main-image',\n          icon: 'photograph',\n          text: '人物照片',\n          successText: '人物照片已上传',\n          emptyText: '请上传人物照片'\n        }\n      ]\n    },\n\n    // 结果配置\n    resultConfig: {\n      showComparison: true,\n      comparisonType: 'slider', // 'slider' | 'side-by-side'\n      downloadEnabled: true,\n      resetEnabled: true\n    }\n  },\n\n  // 极速换脸配置\n  'face-swap': {\n    id: 'face-swap',\n    title: '极速换脸',\n    description: '上传人脸照片和目标图片，AI智能换脸',\n    processButtonText: '开始换脸',\n    processingTitle: '正在处理换脸...',\n    processingDescription: '请耐心等待，处理时间可能需要几分钟',\n\n    uploadPanels: [\n      {\n        id: 'face-photos',\n        title: '人脸照片',\n        icon: 'friends-o',\n        iconColor: 'var(--van-warning-color)',\n        uploadType: 'multi',\n        minCount: 1,\n        maxCount: 4,\n        uploadText: '添加人脸',\n        showCount: true,\n        ...createUploadConfig({\n          tips: [\n            '支持 JPG、PNG 格式',\n            '建议尺寸 512x512 以上',\n            '人脸清晰、正面效果更佳',\n            '可一次选择多张照片'\n          ]\n        })\n      },\n      {\n        id: 'target-image',\n        title: '目标图片',\n        icon: 'photo-o',\n        iconColor: 'var(--van-success-color)',\n        uploadType: 'single',\n        minCount: 1,\n        maxCount: 1,\n        uploadText: '选择目标图片',\n        showCount: false,\n        ...createUploadConfig({\n          tips: [\n            '支持 JPG、PNG 格式',\n            '建议尺寸 512x512 以上',\n            '图片清晰度影响换脸效果'\n          ]\n        })\n      }\n    ],\n\n    statusConfig: {\n      showUploadStatus: true,\n      statusItems: [\n        {\n          key: 'face-photos',\n          icon: 'friends',\n          text: '人脸照片',\n          countText: '已上传 {count}/4 张人脸照片',\n          successText: '人脸照片已上传',\n          emptyText: '请上传人脸照片'\n        },\n        {\n          key: 'target-image',\n          icon: 'photo',\n          text: '目标图片',\n          successText: '目标图片已上传',\n          emptyText: '请上传目标图片'\n        }\n      ]\n    },\n\n    resultConfig: {\n      showComparison: true,\n      comparisonType: 'slider',\n      downloadEnabled: true,\n      resetEnabled: true\n    }\n  },\n\n  // 文生图配置\n  'text-to-image': {\n    id: 'text-to-image',\n    title: '文生图',\n    description: '输入文字描述，AI为您生成精美图像',\n    processButtonText: '生成图像',\n    processingTitle: '正在生成图像...',\n    processingDescription: '请耐心等待，AI正在为您创作',\n\n    // 文生图使用文本输入而不是图片上传\n    inputPanels: [\n      {\n        id: 'text-prompt',\n        type: 'text',\n        title: '描述您想要的图像',\n        icon: 'edit',\n        iconColor: 'var(--van-success-color)',\n        placeholder: '请详细描述您想要生成的图像，例如：一只橙色的猫坐在窗台上，窗外是蓝天白云，阳光透过窗户洒在猫咪身上，画面温馨美好，高清摄影风格',\n        rows: 6,\n        maxLength: 500,\n        required: true,\n        tips: [\n          '描述越详细，生成效果越好',\n          '可以包含风格、色彩、构图等要素',\n          '支持中英文描述'\n        ]\n      }\n    ],\n\n    statusConfig: {\n      showUploadStatus: true,\n      statusItems: [\n        {\n          key: 'text-prompt',\n          icon: 'edit',\n          text: '文字描述',\n          successText: '描述已输入',\n          emptyText: '请输入图像描述'\n        }\n      ]\n    },\n\n    resultConfig: {\n      showComparison: false,\n      comparisonType: 'none',\n      downloadEnabled: true,\n      resetEnabled: true\n    }\n  }\n}\n\n/**\n * 获取指定功能的配置\n * @param {string} functionId 功能ID\n * @returns {Object|null} 功能配置对象\n */\nexport function getImageProcessingConfig(functionId) {\n  return IMAGE_PROCESSING_CONFIGS[functionId] || null\n}\n\n/**\n * 获取所有图片处理功能配置\n * @returns {Object} 所有功能配置\n */\nexport function getAllImageProcessingConfigs() {\n  return IMAGE_PROCESSING_CONFIGS\n}\n\n/**\n * 更新功能配置\n * @param {string} functionId 功能ID\n * @param {Object} updates 更新的配置\n * @returns {boolean} 更新是否成功\n */\nexport function updateImageProcessingConfig(functionId, updates) {\n  if (!IMAGE_PROCESSING_CONFIGS[functionId]) {\n    console.warn(`功能配置不存在: ${functionId}`)\n    return false\n  }\n\n  // 深度合并配置\n  IMAGE_PROCESSING_CONFIGS[functionId] = {\n    ...IMAGE_PROCESSING_CONFIGS[functionId],\n    ...updates\n  }\n\n  return true\n}\n\n/**\n * 验证上传配置\n * @param {Object} config 上传配置\n * @returns {boolean} 配置是否有效\n */\nexport function validateUploadConfig(config) {\n  const requiredFields = ['id', 'title', 'uploadType', 'minCount', 'maxCount']\n\n  for (const field of requiredFields) {\n    if (!(field in config)) {\n      console.error(`上传配置缺少必需字段: ${field}`)\n      return false\n    }\n  }\n\n  if (config.uploadType !== 'single' && config.uploadType !== 'multi') {\n    console.error(`无效的上传类型: ${config.uploadType}`)\n    return false\n  }\n\n  if (config.minCount > config.maxCount) {\n    console.error('最小数量不能大于最大数量')\n    return false\n  }\n\n  return true\n}\n\n/**\n * 模拟从后台API获取功能配置\n * @param {string} functionId 功能ID\n * @returns {Promise<Object>} 功能配置\n */\nexport async function fetchImageProcessingConfigFromAPI(functionId) {\n  // 模拟API延迟\n  await new Promise(resolve => setTimeout(resolve, 100))\n\n  // 这里后续可以替换为真实的API调用\n  // const response = await fetch(`/api/admin/image-processing-configs/${functionId}`)\n  // return response.json()\n\n  return getImageProcessingConfig(functionId)\n}\n\n/**\n * 创建自定义功能配置\n * @param {Object} baseConfig 基础配置\n * @returns {Object} 完整的功能配置\n */\nexport function createCustomImageProcessingConfig(baseConfig) {\n  const defaultConfig = {\n    processButtonText: '开始处理',\n    processingTitle: '正在处理...',\n    processingDescription: '请耐心等待',\n    uploadPanels: [],\n    statusConfig: {\n      showUploadStatus: true,\n      statusItems: []\n    },\n    resultConfig: {\n      showComparison: true,\n      comparisonType: 'slider',\n      downloadEnabled: true,\n      resetEnabled: true\n    }\n  }\n\n  return {\n    ...defaultConfig,\n    ...baseConfig\n  }\n}\n\n// 导出配置类型定义（用于TypeScript支持）\nexport const CONFIG_TYPES = {\n  UPLOAD_TYPE: {\n    SINGLE: 'single',\n    MULTI: 'multi'\n  },\n  COMPARISON_TYPE: {\n    SLIDER: 'slider',\n    SIDE_BY_SIDE: 'side-by-side',\n    NONE: 'none'\n  },\n  INPUT_TYPE: {\n    IMAGE: 'image',\n    TEXT: 'text'\n  }\n}\n"
        }
    ]
}
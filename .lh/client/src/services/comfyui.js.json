{
    "sourceFile": "client/src/services/comfyui.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 41,
            "patches": [
                {
                    "date": 1752326450066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752326477059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,27 +31,48 @@\n \r\n // 配置缓存\r\n let configCache = null\r\n \r\n-// 从localStorage获取配置，如果没有则使用默认配置\r\n-function getComfyUIConfig(forceRefresh = false) {\r\n+// 从服务器和localStorage获取配置\r\n+async function getComfyUIConfig(forceRefresh = false) {\r\n   // 如果强制刷新或缓存为空，重新读取配置\r\n   if (forceRefresh || !configCache) {\r\n-    const savedConfig = localStorage.getItem('comfyui_config')\r\n-    if (savedConfig) {\r\n-      try {\r\n-        const parsed = JSON.parse(savedConfig)\r\n-        configCache = { ...DEFAULT_CONFIG, ...parsed }\r\n-        console.log('🔄 配置已刷新:', configCache)\r\n-      } catch (error) {\r\n-        console.warn('解析保存的配置失败，使用默认配置:', error)\r\n-        configCache = { ...DEFAULT_CONFIG }\r\n+    try {\r\n+      // 首先获取服务器配置作为基础\r\n+      const serverConfig = await getDefaultConfig();\r\n+\r\n+      // 然后检查localStorage中的用户自定义配置\r\n+      const savedConfig = localStorage.getItem('comfyui_config');\r\n+      if (savedConfig) {\r\n+        try {\r\n+          const parsed = JSON.parse(savedConfig);\r\n+          // 合并服务器配置和用户配置，用户配置优先\r\n+          configCache = { ...serverConfig, ...parsed };\r\n+          console.log('🔄 配置已刷新（服务器+用户）:', configCache);\r\n+        } catch (error) {\r\n+          console.warn('解析保存的配置失败，使用服务器配置:', error);\r\n+          configCache = { ...serverConfig };\r\n+        }\r\n+      } else {\r\n+        configCache = { ...serverConfig };\r\n+        console.log('🔄 使用服务器配置:', configCache);\r\n       }\r\n-    } else {\r\n-      configCache = { ...DEFAULT_CONFIG }\r\n+    } catch (error) {\r\n+      console.error('❌ 获取配置失败，使用缓存或默认配置:', error);\r\n+      if (!configCache) {\r\n+        // 如果连缓存都没有，使用硬编码的默认配置\r\n+        configCache = {\r\n+          COMFYUI_SERVER_URL: 'https://hwf0p724ub-8188.cnb.run',\r\n+          CLIENT_ID: 'abc1373d4ad648a3a81d0587fbe5534b',\r\n+          TIMEOUT: 300000,\r\n+          BACKUP_SERVERS: [],\r\n+          AUTO_SWITCH: true,\r\n+          MAX_RETRIES: 3\r\n+        };\r\n+      }\r\n     }\r\n   }\r\n-  return { ...configCache }\r\n+  return { ...configCache };\r\n }\r\n \r\n // 保存配置到localStorage\r\n function saveComfyUIConfig(config) {\r\n"
                },
                {
                    "date": 1752326498699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,21 +182,21 @@\n function getCurrentConfig(forceRefresh = false) {\r\n   return getComfyUIConfig(forceRefresh)\r\n }\r\n \r\n-// 获取API基础URL - 直连模式\r\n-function getApiBaseUrl() {\r\n-  const config = getComfyUIConfig(true)\r\n-  console.log('🎯 直连ComfyUI服务器:', config.COMFYUI_SERVER_URL)\r\n+// 获取API基础URL - 动态配置模式\r\n+async function getApiBaseUrl() {\r\n+  const config = await getComfyUIConfig(true);\r\n+  console.log('🎯 使用ComfyUI服务器:', config.COMFYUI_SERVER_URL);\r\n \r\n-  let baseUrl = config.COMFYUI_SERVER_URL\r\n+  let baseUrl = config.COMFYUI_SERVER_URL;\r\n \r\n   // 确保URL格式正确，移除末尾的斜杠\r\n   if (baseUrl && baseUrl.endsWith('/')) {\r\n-    baseUrl = baseUrl.slice(0, -1)\r\n+    baseUrl = baseUrl.slice(0, -1);\r\n   }\r\n \r\n-  return baseUrl\r\n+  return baseUrl;\r\n }\r\n \r\n // 重置为默认配置\r\n function resetToDefaultConfig() {\r\n"
                },
                {
                    "date": 1752326513006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,11 +177,11 @@\n     proxyUpdate: proxyUpdateResult\r\n   }\r\n }\r\n \r\n-// 获取当前配置\r\n-function getCurrentConfig(forceRefresh = false) {\r\n-  return getComfyUIConfig(forceRefresh)\r\n+// 获取当前配置（异步）\r\n+async function getCurrentConfig(forceRefresh = false) {\r\n+  return await getComfyUIConfig(forceRefresh);\r\n }\r\n \r\n // 获取API基础URL - 动态配置模式\r\n async function getApiBaseUrl() {\r\n"
                },
                {
                    "date": 1752326535389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,31 +152,31 @@\n }\r\n \r\n // 更新配置\r\n async function updateComfyUIConfig(newConfig) {\r\n-  const currentConfig = getComfyUIConfig(true) // 强制刷新当前配置\r\n-  const updatedConfig = { ...currentConfig, ...newConfig }\r\n+  const currentConfig = await getComfyUIConfig(true); // 强制刷新当前配置\r\n+  const updatedConfig = { ...currentConfig, ...newConfig };\r\n \r\n-  console.log('🔄 更新配置:', updatedConfig)\r\n+  console.log('🔄 更新配置:', updatedConfig);\r\n \r\n   // 保存到localStorage（这会清除缓存）\r\n-  saveComfyUIConfig(updatedConfig)\r\n+  saveComfyUIConfig(updatedConfig);\r\n \r\n   // 强制刷新配置缓存\r\n-  configCache = null\r\n+  configCache = null;\r\n \r\n   // 通知配置变更\r\n-  notifyConfigChange(updatedConfig)\r\n+  notifyConfigChange(updatedConfig);\r\n \r\n   // 同时更新代理服务器配置\r\n-  const proxyUpdateResult = await updateProxyServerConfig(updatedConfig)\r\n+  const proxyUpdateResult = await updateProxyServerConfig(updatedConfig);\r\n \r\n-  console.log('✅ 配置更新完成，新配置已生效')\r\n+  console.log('✅ 配置更新完成，新配置已生效');\r\n \r\n   return {\r\n     config: updatedConfig,\r\n     proxyUpdate: proxyUpdateResult\r\n-  }\r\n+  };\r\n }\r\n \r\n // 获取当前配置（异步）\r\n async function getCurrentConfig(forceRefresh = false) {\r\n"
                },
                {
                    "date": 1752326556632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,13 +314,13 @@\n \r\n // 第二步：提交工作流到ComfyUI\r\n async function submitWorkflow(workflowPrompt) {\r\n   try {\r\n-    const config = getComfyUIConfig()\r\n-    const apiBaseUrl = getApiBaseUrl()\r\n-    console.log('🔄 第二步：提交工作流到ComfyUI')\r\n-    console.log('📡 API地址:', `${apiBaseUrl}/prompt`)\r\n-    console.log('🔧 使用代理:', config.USE_PROXY ? '是' : '否')\r\n+    const config = await getComfyUIConfig();\r\n+    const apiBaseUrl = await getApiBaseUrl();\r\n+    console.log('🔄 第二步：提交工作流到ComfyUI');\r\n+    console.log('📡 API地址:', `${apiBaseUrl}/prompt`);\r\n+    console.log('🔧 使用代理:', config.USE_PROXY ? '是' : '否');\r\n \r\n     // 构建请求体，按照ComfyUI API文档格式\r\n     const requestBody = {\r\n       client_id: config.CLIENT_ID,\r\n"
                },
                {
                    "date": 1752326596152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,12 +211,12 @@\n \r\n // 第一步：上传Base64图片到ComfyUI服务器并获取文件名\r\n async function uploadImageToComfyUI(base64Image) {\r\n   try {\r\n-    const config = getComfyUIConfig()\r\n-    const apiBaseUrl = getApiBaseUrl()\r\n-    console.log('🔄 第一步：上传图片到ComfyUI服务器')\r\n-    console.log('📡 API地址:', `${apiBaseUrl}/upload/image`)\r\n+    const config = await getComfyUIConfig();\r\n+    const apiBaseUrl = await getApiBaseUrl();\r\n+    console.log('🔄 第一步：上传图片到ComfyUI服务器');\r\n+    console.log('📡 API地址:', `${apiBaseUrl}/upload/image`);\r\n \r\n     // 验证base64格式\r\n     if (!base64Image || !base64Image.startsWith('data:image/')) {\r\n       throw new Error('无效的base64图片格式')\r\n"
                },
                {
                    "date": 1752326636874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -374,12 +374,12 @@\n \r\n // 检查任务状态\r\n async function checkTaskStatus(promptId) {\r\n   try {\r\n-    const config = getComfyUIConfig()\r\n-    const apiBaseUrl = getApiBaseUrl()\r\n-    console.log('🔍 查询任务状态:', `${apiBaseUrl}/history/${promptId}`)\r\n-    const response = await fetch(`${apiBaseUrl}/history/${promptId}`)\r\n+    const config = await getComfyUIConfig();\r\n+    const apiBaseUrl = await getApiBaseUrl();\r\n+    console.log('🔍 查询任务状态:', `${apiBaseUrl}/history/${promptId}`);\r\n+    const response = await fetch(`${apiBaseUrl}/history/${promptId}`);\r\n \r\n     if (!response.ok) {\r\n       throw new Error(`状态查询失败: ${response.status} ${response.statusText}`)\r\n     }\r\n"
                },
                {
                    "date": 1752326655020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -395,10 +395,10 @@\n \r\n // 获取生成的图片\r\n async function getGeneratedImage(taskResult) {\r\n   try {\r\n-    const config = getComfyUIConfig()\r\n-    const apiBaseUrl = getApiBaseUrl()\r\n+    const config = await getComfyUIConfig();\r\n+    const apiBaseUrl = await getApiBaseUrl();\r\n \r\n     // 从任务结果中找到输出图片\r\n     const outputs = taskResult.outputs\r\n     let imageInfo = null\r\n"
                },
                {
                    "date": 1752327478336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,13 +16,13 @@\n       AUTO_SWITCH: config.AUTO_SWITCH,\r\n       MAX_RETRIES: config.MAX_RETRIES\r\n     };\r\n   } catch (error) {\r\n-    console.warn('⚠️ 获取服务器配置失败，使用硬编码默认值:', error);\r\n+    console.warn('⚠️ 获取服务器配置失败，使用环境变量或默认值:', error);\r\n     return {\r\n-      COMFYUI_SERVER_URL: 'https://hwf0p724ub-8188.cnb.run',\r\n-      CLIENT_ID: 'abc1373d4ad648a3a81d0587fbe5534b',\r\n-      TIMEOUT: 300000,\r\n+      COMFYUI_SERVER_URL: import.meta.env.VITE_COMFYUI_SERVER_URL || 'https://your-comfyui-server.com',\r\n+      CLIENT_ID: import.meta.env.VITE_COMFYUI_CLIENT_ID || 'your-comfyui-client-id',\r\n+      TIMEOUT: parseInt(import.meta.env.VITE_COMFYUI_TIMEOUT) || 300000,\r\n       BACKUP_SERVERS: [],\r\n       AUTO_SWITCH: true,\r\n       MAX_RETRIES: 3\r\n     };\r\n"
                },
                {
                    "date": 1752327494435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,13 +58,13 @@\n       }\r\n     } catch (error) {\r\n       console.error('❌ 获取配置失败，使用缓存或默认配置:', error);\r\n       if (!configCache) {\r\n-        // 如果连缓存都没有，使用硬编码的默认配置\r\n+        // 如果连缓存都没有，使用环境变量或默认配置\r\n         configCache = {\r\n-          COMFYUI_SERVER_URL: 'https://hwf0p724ub-8188.cnb.run',\r\n-          CLIENT_ID: 'abc1373d4ad648a3a81d0587fbe5534b',\r\n-          TIMEOUT: 300000,\r\n+          COMFYUI_SERVER_URL: import.meta.env.VITE_COMFYUI_SERVER_URL || 'https://your-comfyui-server.com',\r\n+          CLIENT_ID: import.meta.env.VITE_COMFYUI_CLIENT_ID || 'your-comfyui-client-id',\r\n+          TIMEOUT: parseInt(import.meta.env.VITE_COMFYUI_TIMEOUT) || 300000,\r\n           BACKUP_SERVERS: [],\r\n           AUTO_SWITCH: true,\r\n           MAX_RETRIES: 3\r\n         };\r\n"
                },
                {
                    "date": 1752328761857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,34 +31,73 @@\n \r\n // 配置缓存\r\n let configCache = null\r\n \r\n+// 检查并清理旧的硬编码配置\r\n+function cleanupOldHardcodedConfig() {\r\n+  const savedConfig = localStorage.getItem('comfyui_config');\r\n+  if (savedConfig) {\r\n+    try {\r\n+      const parsed = JSON.parse(savedConfig);\r\n+      const hardcodedUrls = [\r\n+        'https://5gke5y9mzc-8188.cnb.run',\r\n+        'https://hwf0p724ub-8188.cnb.run',\r\n+        'https://dzqgp58z0s-8188.cnb.run'\r\n+      ];\r\n+      const hardcodedIds = [\r\n+        'abc1373d4ad648a3a81d0587fbe5534b'\r\n+      ];\r\n+\r\n+      // 检查是否包含硬编码配置\r\n+      const hasHardcodedUrl = hardcodedUrls.includes(parsed.COMFYUI_SERVER_URL);\r\n+      const hasHardcodedId = hardcodedIds.includes(parsed.CLIENT_ID);\r\n+\r\n+      if (hasHardcodedUrl || hasHardcodedId) {\r\n+        console.warn('🧹 检测到旧的硬编码配置，正在清理...');\r\n+        console.warn('旧配置:', parsed);\r\n+        localStorage.removeItem('comfyui_config');\r\n+        console.log('✅ 已清理旧的硬编码配置');\r\n+        return true;\r\n+      }\r\n+    } catch (error) {\r\n+      console.warn('解析localStorage配置失败，清理配置:', error);\r\n+      localStorage.removeItem('comfyui_config');\r\n+      return true;\r\n+    }\r\n+  }\r\n+  return false;\r\n+}\r\n+\r\n // 从服务器和localStorage获取配置\r\n async function getComfyUIConfig(forceRefresh = false) {\r\n-  // 如果强制刷新或缓存为空，重新读取配置\r\n-  if (forceRefresh || !configCache) {\r\n+  // 首先清理旧的硬编码配置\r\n+  const wasCleanedUp = cleanupOldHardcodedConfig();\r\n+\r\n+  // 如果强制刷新、缓存为空或刚清理了配置，重新读取配置\r\n+  if (forceRefresh || !configCache || wasCleanedUp) {\r\n     try {\r\n       // 首先获取服务器配置作为基础\r\n       const serverConfig = await getDefaultConfig();\r\n+      console.log('🌐 从服务器获取的配置:', serverConfig);\r\n \r\n-      // 然后检查localStorage中的用户自定义配置\r\n+      // 然后检查localStorage中的用户自定义配置（已清理硬编码）\r\n       const savedConfig = localStorage.getItem('comfyui_config');\r\n       if (savedConfig) {\r\n         try {\r\n           const parsed = JSON.parse(savedConfig);\r\n-          // 合并服务器配置和用户配置，用户配置优先\r\n-          configCache = { ...serverConfig, ...parsed };\r\n-          console.log('🔄 配置已刷新（服务器+用户）:', configCache);\r\n+          // 服务器配置优先，用户配置作为补充\r\n+          configCache = { ...parsed, ...serverConfig };\r\n+          console.log('🔄 配置已刷新（服务器优先+用户补充）:', configCache);\r\n         } catch (error) {\r\n           console.warn('解析保存的配置失败，使用服务器配置:', error);\r\n           configCache = { ...serverConfig };\r\n         }\r\n       } else {\r\n         configCache = { ...serverConfig };\r\n-        console.log('🔄 使用服务器配置:', configCache);\r\n+        console.log('🔄 使用纯服务器配置:', configCache);\r\n       }\r\n     } catch (error) {\r\n-      console.error('❌ 获取配置失败，使用缓存或默认配置:', error);\r\n+      console.error('❌ 获取配置失败，使用环境变量或默认配置:', error);\r\n       if (!configCache) {\r\n         // 如果连缓存都没有，使用环境变量或默认配置\r\n         configCache = {\r\n           COMFYUI_SERVER_URL: import.meta.env.VITE_COMFYUI_SERVER_URL || 'https://your-comfyui-server.com',\r\n"
                },
                {
                    "date": 1752328900466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,119 +1,42 @@\n-// ComfyUI工作流服务 - 动态配置模式\r\n+// ComfyUI工作流服务 - 直连模式\r\n import undressWorkflow from '../workflows/undress.json'\r\n import faceSwapWorkflow from '../workflows/faceswap2.0.json'\r\n import comfyUIConfig from '../config/comfyui.config.js'\r\n import pointsManager from '../utils/pointsManager.js'\r\n \r\n-// 获取动态配置的默认值\r\n-async function getDefaultConfig() {\r\n-  try {\r\n-    const config = await comfyUIConfig.getConfig();\r\n-    return {\r\n-      COMFYUI_SERVER_URL: config.BASE_URL,\r\n-      CLIENT_ID: config.CLIENT_ID,\r\n-      TIMEOUT: config.REQUEST_TIMEOUT,\r\n-      BACKUP_SERVERS: config.BACKUP_SERVERS,\r\n-      AUTO_SWITCH: config.AUTO_SWITCH,\r\n-      MAX_RETRIES: config.MAX_RETRIES\r\n-    };\r\n-  } catch (error) {\r\n-    console.warn('⚠️ 获取服务器配置失败，使用环境变量或默认值:', error);\r\n-    return {\r\n-      COMFYUI_SERVER_URL: import.meta.env.VITE_COMFYUI_SERVER_URL || 'https://your-comfyui-server.com',\r\n-      CLIENT_ID: import.meta.env.VITE_COMFYUI_CLIENT_ID || 'your-comfyui-client-id',\r\n-      TIMEOUT: parseInt(import.meta.env.VITE_COMFYUI_TIMEOUT) || 300000,\r\n-      BACKUP_SERVERS: [],\r\n-      AUTO_SWITCH: true,\r\n-      MAX_RETRIES: 3\r\n-    };\r\n-  }\r\n+// API配置 - 直连模式\r\n+const DEFAULT_CONFIG = {\r\n+  // ComfyUI服务器URL（用户可配置）\r\n+  COMFYUI_SERVER_URL: comfyUIConfig.BASE_URL,\r\n+  CLIENT_ID: comfyUIConfig.CLIENT_ID,\r\n+  TIMEOUT: 300000 // 5分钟\r\n }\r\n \r\n // 配置缓存\r\n let configCache = null\r\n \r\n-// 检查并清理旧的硬编码配置\r\n-function cleanupOldHardcodedConfig() {\r\n-  const savedConfig = localStorage.getItem('comfyui_config');\r\n-  if (savedConfig) {\r\n-    try {\r\n-      const parsed = JSON.parse(savedConfig);\r\n-      const hardcodedUrls = [\r\n-        'https://5gke5y9mzc-8188.cnb.run',\r\n-        'https://hwf0p724ub-8188.cnb.run',\r\n-        'https://dzqgp58z0s-8188.cnb.run'\r\n-      ];\r\n-      const hardcodedIds = [\r\n-        'abc1373d4ad648a3a81d0587fbe5534b'\r\n-      ];\r\n-\r\n-      // 检查是否包含硬编码配置\r\n-      const hasHardcodedUrl = hardcodedUrls.includes(parsed.COMFYUI_SERVER_URL);\r\n-      const hasHardcodedId = hardcodedIds.includes(parsed.CLIENT_ID);\r\n-\r\n-      if (hasHardcodedUrl || hasHardcodedId) {\r\n-        console.warn('🧹 检测到旧的硬编码配置，正在清理...');\r\n-        console.warn('旧配置:', parsed);\r\n-        localStorage.removeItem('comfyui_config');\r\n-        console.log('✅ 已清理旧的硬编码配置');\r\n-        return true;\r\n+// 从localStorage获取配置，如果没有则使用默认配置\r\n+function getComfyUIConfig(forceRefresh = false) {\r\n+  // 如果强制刷新或缓存为空，重新读取配置\r\n+  if (forceRefresh || !configCache) {\r\n+    const savedConfig = localStorage.getItem('comfyui_config')\r\n+    if (savedConfig) {\r\n+      try {\r\n+        const parsed = JSON.parse(savedConfig)\r\n+        configCache = { ...DEFAULT_CONFIG, ...parsed }\r\n+        console.log('🔄 配置已刷新:', configCache)\r\n+      } catch (error) {\r\n+        console.warn('解析保存的配置失败，使用默认配置:', error)\r\n+        configCache = { ...DEFAULT_CONFIG }\r\n       }\r\n-    } catch (error) {\r\n-      console.warn('解析localStorage配置失败，清理配置:', error);\r\n-      localStorage.removeItem('comfyui_config');\r\n-      return true;\r\n+    } else {\r\n+      configCache = { ...DEFAULT_CONFIG }\r\n     }\r\n   }\r\n-  return false;\r\n+  return { ...configCache }\r\n }\r\n \r\n-// 从服务器和localStorage获取配置\r\n-async function getComfyUIConfig(forceRefresh = false) {\r\n-  // 首先清理旧的硬编码配置\r\n-  const wasCleanedUp = cleanupOldHardcodedConfig();\r\n-\r\n-  // 如果强制刷新、缓存为空或刚清理了配置，重新读取配置\r\n-  if (forceRefresh || !configCache || wasCleanedUp) {\r\n-    try {\r\n-      // 首先获取服务器配置作为基础\r\n-      const serverConfig = await getDefaultConfig();\r\n-      console.log('🌐 从服务器获取的配置:', serverConfig);\r\n-\r\n-      // 然后检查localStorage中的用户自定义配置（已清理硬编码）\r\n-      const savedConfig = localStorage.getItem('comfyui_config');\r\n-      if (savedConfig) {\r\n-        try {\r\n-          const parsed = JSON.parse(savedConfig);\r\n-          // 服务器配置优先，用户配置作为补充\r\n-          configCache = { ...parsed, ...serverConfig };\r\n-          console.log('🔄 配置已刷新（服务器优先+用户补充）:', configCache);\r\n-        } catch (error) {\r\n-          console.warn('解析保存的配置失败，使用服务器配置:', error);\r\n-          configCache = { ...serverConfig };\r\n-        }\r\n-      } else {\r\n-        configCache = { ...serverConfig };\r\n-        console.log('🔄 使用纯服务器配置:', configCache);\r\n-      }\r\n-    } catch (error) {\r\n-      console.error('❌ 获取配置失败，使用环境变量或默认配置:', error);\r\n-      if (!configCache) {\r\n-        // 如果连缓存都没有，使用环境变量或默认配置\r\n-        configCache = {\r\n-          COMFYUI_SERVER_URL: import.meta.env.VITE_COMFYUI_SERVER_URL || 'https://your-comfyui-server.com',\r\n-          CLIENT_ID: import.meta.env.VITE_COMFYUI_CLIENT_ID || 'your-comfyui-client-id',\r\n-          TIMEOUT: parseInt(import.meta.env.VITE_COMFYUI_TIMEOUT) || 300000,\r\n-          BACKUP_SERVERS: [],\r\n-          AUTO_SWITCH: true,\r\n-          MAX_RETRIES: 3\r\n-        };\r\n-      }\r\n-    }\r\n-  }\r\n-  return { ...configCache };\r\n-}\r\n-\r\n // 保存配置到localStorage\r\n function saveComfyUIConfig(config) {\r\n   try {\r\n     localStorage.setItem('comfyui_config', JSON.stringify(config))\r\n@@ -191,51 +114,51 @@\n }\r\n \r\n // 更新配置\r\n async function updateComfyUIConfig(newConfig) {\r\n-  const currentConfig = await getComfyUIConfig(true); // 强制刷新当前配置\r\n-  const updatedConfig = { ...currentConfig, ...newConfig };\r\n+  const currentConfig = getComfyUIConfig(true) // 强制刷新当前配置\r\n+  const updatedConfig = { ...currentConfig, ...newConfig }\r\n \r\n-  console.log('🔄 更新配置:', updatedConfig);\r\n+  console.log('🔄 更新配置:', updatedConfig)\r\n \r\n   // 保存到localStorage（这会清除缓存）\r\n-  saveComfyUIConfig(updatedConfig);\r\n+  saveComfyUIConfig(updatedConfig)\r\n \r\n   // 强制刷新配置缓存\r\n-  configCache = null;\r\n+  configCache = null\r\n \r\n   // 通知配置变更\r\n-  notifyConfigChange(updatedConfig);\r\n+  notifyConfigChange(updatedConfig)\r\n \r\n   // 同时更新代理服务器配置\r\n-  const proxyUpdateResult = await updateProxyServerConfig(updatedConfig);\r\n+  const proxyUpdateResult = await updateProxyServerConfig(updatedConfig)\r\n \r\n-  console.log('✅ 配置更新完成，新配置已生效');\r\n+  console.log('✅ 配置更新完成，新配置已生效')\r\n \r\n   return {\r\n     config: updatedConfig,\r\n     proxyUpdate: proxyUpdateResult\r\n-  };\r\n+  }\r\n }\r\n \r\n-// 获取当前配置（异步）\r\n-async function getCurrentConfig(forceRefresh = false) {\r\n-  return await getComfyUIConfig(forceRefresh);\r\n+// 获取当前配置\r\n+function getCurrentConfig(forceRefresh = false) {\r\n+  return getComfyUIConfig(forceRefresh)\r\n }\r\n \r\n-// 获取API基础URL - 动态配置模式\r\n-async function getApiBaseUrl() {\r\n-  const config = await getComfyUIConfig(true);\r\n-  console.log('🎯 使用ComfyUI服务器:', config.COMFYUI_SERVER_URL);\r\n+// 获取API基础URL - 直连模式\r\n+function getApiBaseUrl() {\r\n+  const config = getComfyUIConfig(true)\r\n+  console.log('🎯 直连ComfyUI服务器:', config.COMFYUI_SERVER_URL)\r\n \r\n-  let baseUrl = config.COMFYUI_SERVER_URL;\r\n+  let baseUrl = config.COMFYUI_SERVER_URL\r\n \r\n   // 确保URL格式正确，移除末尾的斜杠\r\n   if (baseUrl && baseUrl.endsWith('/')) {\r\n-    baseUrl = baseUrl.slice(0, -1);\r\n+    baseUrl = baseUrl.slice(0, -1)\r\n   }\r\n \r\n-  return baseUrl;\r\n+  return baseUrl\r\n }\r\n \r\n // 重置为默认配置\r\n function resetToDefaultConfig() {\r\n@@ -250,12 +173,12 @@\n \r\n // 第一步：上传Base64图片到ComfyUI服务器并获取文件名\r\n async function uploadImageToComfyUI(base64Image) {\r\n   try {\r\n-    const config = await getComfyUIConfig();\r\n-    const apiBaseUrl = await getApiBaseUrl();\r\n-    console.log('🔄 第一步：上传图片到ComfyUI服务器');\r\n-    console.log('📡 API地址:', `${apiBaseUrl}/upload/image`);\r\n+    const config = getComfyUIConfig()\r\n+    const apiBaseUrl = getApiBaseUrl()\r\n+    console.log('🔄 第一步：上传图片到ComfyUI服务器')\r\n+    console.log('📡 API地址:', `${apiBaseUrl}/upload/image`)\r\n \r\n     // 验证base64格式\r\n     if (!base64Image || !base64Image.startsWith('data:image/')) {\r\n       throw new Error('无效的base64图片格式')\r\n@@ -353,13 +276,13 @@\n \r\n // 第二步：提交工作流到ComfyUI\r\n async function submitWorkflow(workflowPrompt) {\r\n   try {\r\n-    const config = await getComfyUIConfig();\r\n-    const apiBaseUrl = await getApiBaseUrl();\r\n-    console.log('🔄 第二步：提交工作流到ComfyUI');\r\n-    console.log('📡 API地址:', `${apiBaseUrl}/prompt`);\r\n-    console.log('🔧 使用代理:', config.USE_PROXY ? '是' : '否');\r\n+    const config = getComfyUIConfig()\r\n+    const apiBaseUrl = getApiBaseUrl()\r\n+    console.log('🔄 第二步：提交工作流到ComfyUI')\r\n+    console.log('📡 API地址:', `${apiBaseUrl}/prompt`)\r\n+    console.log('🔧 使用代理:', config.USE_PROXY ? '是' : '否')\r\n \r\n     // 构建请求体，按照ComfyUI API文档格式\r\n     const requestBody = {\r\n       client_id: config.CLIENT_ID,\r\n@@ -413,12 +336,12 @@\n \r\n // 检查任务状态\r\n async function checkTaskStatus(promptId) {\r\n   try {\r\n-    const config = await getComfyUIConfig();\r\n-    const apiBaseUrl = await getApiBaseUrl();\r\n-    console.log('🔍 查询任务状态:', `${apiBaseUrl}/history/${promptId}`);\r\n-    const response = await fetch(`${apiBaseUrl}/history/${promptId}`);\r\n+    const config = getComfyUIConfig()\r\n+    const apiBaseUrl = getApiBaseUrl()\r\n+    console.log('🔍 查询任务状态:', `${apiBaseUrl}/history/${promptId}`)\r\n+    const response = await fetch(`${apiBaseUrl}/history/${promptId}`)\r\n \r\n     if (!response.ok) {\r\n       throw new Error(`状态查询失败: ${response.status} ${response.statusText}`)\r\n     }\r\n@@ -434,10 +357,10 @@\n \r\n // 获取生成的图片\r\n async function getGeneratedImage(taskResult) {\r\n   try {\r\n-    const config = await getComfyUIConfig();\r\n-    const apiBaseUrl = await getApiBaseUrl();\r\n+    const config = getComfyUIConfig()\r\n+    const apiBaseUrl = getApiBaseUrl()\r\n \r\n     // 从任务结果中找到输出图片\r\n     const outputs = taskResult.outputs\r\n     let imageInfo = null\r\n"
                },
                {
                    "date": 1752330205149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import undressWorkflow from '../workflows/undress.json'\r\n import faceSwapWorkflow from '../workflows/faceswap2.0.json'\r\n import comfyUIConfig from '../config/comfyui.config.js'\r\n import pointsManager from '../utils/pointsManager.js'\r\n+import { updateAPIConfig } from './api.js'\r\n \r\n // API配置 - 直连模式\r\n const DEFAULT_CONFIG = {\r\n   // ComfyUI服务器URL（用户可配置）\r\n"
                },
                {
                    "date": 1752330218715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,8 +104,15 @@\n }\r\n \r\n // 通知配置变更\r\n function notifyConfigChange(config) {\r\n+  // 同步更新API配置\r\n+  try {\r\n+    updateAPIConfig(config)\r\n+  } catch (error) {\r\n+    console.error('更新API配置失败:', error)\r\n+  }\r\n+\r\n   configChangeListeners.forEach(listener => {\r\n     try {\r\n       listener(config)\r\n     } catch (error) {\r\n"
                },
                {
                    "date": 1752332190423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,10 +183,10 @@\n async function uploadImageToComfyUI(base64Image) {\r\n   try {\r\n     const config = getComfyUIConfig()\r\n     const apiBaseUrl = getApiBaseUrl()\r\n-    console.log('🔄 第一步：上传图片到ComfyUI服务器')\r\n-    console.log('📡 API地址:', `${apiBaseUrl}/upload/image`)\r\n+    console.log('🔄 第一步：通过后端负载均衡上传图片到ComfyUI服务器')\r\n+    console.log('📡 后端API地址:', '/api/comfyui/upload')\r\n \r\n     // 验证base64格式\r\n     if (!base64Image || !base64Image.startsWith('data:image/')) {\r\n       throw new Error('无效的base64图片格式')\r\n"
                },
                {
                    "date": 1752332206742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,18 +214,18 @@\n       type: mimeType,\r\n       size: `${(blob.size / 1024).toFixed(2)} KB`\r\n     })\r\n \r\n-    // 直连上传图片\r\n+    // 通过后端负载均衡上传图片\r\n     const formData = new FormData()\r\n     formData.append('image', blob, filename)\r\n     formData.append('type', 'input')\r\n     formData.append('subfolder', '')\r\n     formData.append('overwrite', 'false')\r\n \r\n-    console.log('🔄 开始上传图片...')\r\n+    console.log('🔄 开始通过后端负载均衡上传图片...')\r\n \r\n-    const response = await fetch(`${apiBaseUrl}/upload/image`, {\r\n+    const response = await fetch('/api/comfyui/upload', {\r\n       method: 'POST',\r\n       body: formData\r\n     })\r\n \r\n"
                },
                {
                    "date": 1752332222579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -239,13 +239,13 @@\n     const result = await response.json()\r\n     console.log('✅ 图片上传成功:', result)\r\n \r\n     // 验证返回结果\r\n-    if (!result.name) {\r\n+    if (!result.success || !result.data?.name) {\r\n       throw new Error('上传响应中缺少文件名')\r\n     }\r\n \r\n-    return result.name\r\n+    return result.data.name\r\n \r\n   } catch (error) {\r\n     console.error('❌ 图片上传失败:', error)\r\n     throw new Error(`图片上传失败: ${error.message}`)\r\n"
                },
                {
                    "date": 1752332246255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,11 +286,10 @@\n async function submitWorkflow(workflowPrompt) {\r\n   try {\r\n     const config = getComfyUIConfig()\r\n     const apiBaseUrl = getApiBaseUrl()\r\n-    console.log('🔄 第二步：提交工作流到ComfyUI')\r\n-    console.log('📡 API地址:', `${apiBaseUrl}/prompt`)\r\n-    console.log('🔧 使用代理:', config.USE_PROXY ? '是' : '否')\r\n+    console.log('🔄 第二步：通过后端负载均衡提交工作流到ComfyUI')\r\n+    console.log('📡 后端API地址:', '/api/comfyui/prompt')\r\n \r\n     // 构建请求体，按照ComfyUI API文档格式\r\n     const requestBody = {\r\n       client_id: config.CLIENT_ID,\r\n"
                },
                {
                    "date": 1752332262277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,20 +302,17 @@\n       node_49_exists: !!requestBody.prompt['49'],\r\n       node_49_image: requestBody.prompt['49']?.inputs?.image\r\n     })\r\n \r\n-    // 第二步API调用：提交工作流到ComfyUI\r\n-    const promptUrl = `${apiBaseUrl}/prompt`\r\n-    console.log('🌐 调用工作流API:', promptUrl)\r\n+    // 第二步API调用：通过后端负载均衡提交工作流到ComfyUI\r\n+    console.log('🌐 调用后端负载均衡工作流API: /api/comfyui/prompt')\r\n \r\n-    const response = await fetch(promptUrl, {\r\n+    const response = await fetch('/api/comfyui/prompt', {\r\n       method: 'POST',\r\n       headers: {\r\n         'Content-Type': 'application/json'\r\n       },\r\n-      body: JSON.stringify(requestBody),\r\n-      mode: 'cors',\r\n-      credentials: 'omit'\r\n+      body: JSON.stringify(requestBody)\r\n     })\r\n \r\n     console.log('📥 工作流响应状态:', response.status, response.statusText)\r\n \r\n"
                },
                {
                    "date": 1752332278398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,13 +325,13 @@\n     const result = await response.json()\r\n     console.log('✅ 工作流提交成功:', result)\r\n \r\n     // 验证返回结果\r\n-    if (!result.prompt_id) {\r\n+    if (!result.success || !result.data?.prompt_id) {\r\n       throw new Error('工作流响应中缺少prompt_id')\r\n     }\r\n \r\n-    return result.prompt_id // 返回任务ID\r\n+    return result.data.prompt_id // 返回任务ID\r\n \r\n   } catch (error) {\r\n     console.error('❌ 工作流提交失败:', error)\r\n     throw new Error(`工作流提交失败: ${error.message}`)\r\n"
                },
                {
                    "date": 1752332302531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -342,10 +342,10 @@\n async function checkTaskStatus(promptId) {\r\n   try {\r\n     const config = getComfyUIConfig()\r\n     const apiBaseUrl = getApiBaseUrl()\r\n-    console.log('🔍 查询任务状态:', `${apiBaseUrl}/history/${promptId}`)\r\n-    const response = await fetch(`${apiBaseUrl}/history/${promptId}`)\r\n+    console.log('🔍 通过后端负载均衡查询任务状态:', `/api/comfyui/history/${promptId}`)\r\n+    const response = await fetch(`/api/comfyui/history/${promptId}`)\r\n \r\n     if (!response.ok) {\r\n       throw new Error(`状态查询失败: ${response.status} ${response.statusText}`)\r\n     }\r\n"
                },
                {
                    "date": 1752332316415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -350,10 +350,16 @@\n       throw new Error(`状态查询失败: ${response.status} ${response.statusText}`)\r\n     }\r\n \r\n     const result = await response.json()\r\n-    return result[promptId] || null\r\n \r\n+    // 处理后端API响应格式\r\n+    if (result.success && result.data) {\r\n+      return result.data[promptId] || null\r\n+    } else {\r\n+      return result[promptId] || null\r\n+    }\r\n+\r\n   } catch (error) {\r\n     console.error('状态查询失败:', error)\r\n     throw new Error(`状态查询失败: ${error.message}`)\r\n   }\r\n"
                },
                {
                    "date": 1752332340881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -414,17 +414,17 @@\n     }\r\n \r\n     console.log('📷 最终选择的图片:', imageInfo)\r\n \r\n-    // 构建图片URL - 按照ComfyUI API文档格式\r\n+    // 构建图片URL - 通过后端负载均衡\r\n     const params = new URLSearchParams({\r\n       filename: imageInfo.filename,\r\n       type: imageInfo.type,\r\n       subfolder: imageInfo.subfolder || ''\r\n     })\r\n-    const imageUrl = `${apiBaseUrl}/view?${params.toString()}`\r\n+    const imageUrl = `/api/comfyui/view?${params.toString()}`\r\n \r\n-    console.log('🌐 获取图片URL:', imageUrl)\r\n+    console.log('🌐 通过后端负载均衡获取图片URL:', imageUrl)\r\n \r\n     // 获取图片数据并转换为base64\r\n     const imageResponse = await fetch(imageUrl)\r\n     if (!imageResponse.ok) {\r\n"
                },
                {
                    "date": 1752332665069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,10 +183,10 @@\n async function uploadImageToComfyUI(base64Image) {\r\n   try {\r\n     const config = getComfyUIConfig()\r\n     const apiBaseUrl = getApiBaseUrl()\r\n-    console.log('🔄 第一步：通过后端负载均衡上传图片到ComfyUI服务器')\r\n-    console.log('📡 后端API地址:', '/api/comfyui/upload')\r\n+    console.log('🔄 第一步：上传图片到ComfyUI服务器')\r\n+    console.log('📡 API地址:', `${apiBaseUrl}/upload/image`)\r\n \r\n     // 验证base64格式\r\n     if (!base64Image || !base64Image.startsWith('data:image/')) {\r\n       throw new Error('无效的base64图片格式')\r\n@@ -214,18 +214,18 @@\n       type: mimeType,\r\n       size: `${(blob.size / 1024).toFixed(2)} KB`\r\n     })\r\n \r\n-    // 通过后端负载均衡上传图片\r\n+    // 直连上传图片\r\n     const formData = new FormData()\r\n     formData.append('image', blob, filename)\r\n     formData.append('type', 'input')\r\n     formData.append('subfolder', '')\r\n     formData.append('overwrite', 'false')\r\n \r\n-    console.log('🔄 开始通过后端负载均衡上传图片...')\r\n+    console.log('🔄 开始上传图片...')\r\n \r\n-    const response = await fetch('/api/comfyui/upload', {\r\n+    const response = await fetch(`${apiBaseUrl}/upload/image`, {\r\n       method: 'POST',\r\n       body: formData\r\n     })\r\n \r\n@@ -239,13 +239,13 @@\n     const result = await response.json()\r\n     console.log('✅ 图片上传成功:', result)\r\n \r\n     // 验证返回结果\r\n-    if (!result.success || !result.data?.name) {\r\n+    if (!result.name) {\r\n       throw new Error('上传响应中缺少文件名')\r\n     }\r\n \r\n-    return result.data.name\r\n+    return result.name\r\n \r\n   } catch (error) {\r\n     console.error('❌ 图片上传失败:', error)\r\n     throw new Error(`图片上传失败: ${error.message}`)\r\n@@ -286,10 +286,11 @@\n async function submitWorkflow(workflowPrompt) {\r\n   try {\r\n     const config = getComfyUIConfig()\r\n     const apiBaseUrl = getApiBaseUrl()\r\n-    console.log('🔄 第二步：通过后端负载均衡提交工作流到ComfyUI')\r\n-    console.log('📡 后端API地址:', '/api/comfyui/prompt')\r\n+    console.log('🔄 第二步：提交工作流到ComfyUI')\r\n+    console.log('📡 API地址:', `${apiBaseUrl}/prompt`)\r\n+    console.log('🔧 使用代理:', config.USE_PROXY ? '是' : '否')\r\n \r\n     // 构建请求体，按照ComfyUI API文档格式\r\n     const requestBody = {\r\n       client_id: config.CLIENT_ID,\r\n@@ -302,17 +303,20 @@\n       node_49_exists: !!requestBody.prompt['49'],\r\n       node_49_image: requestBody.prompt['49']?.inputs?.image\r\n     })\r\n \r\n-    // 第二步API调用：通过后端负载均衡提交工作流到ComfyUI\r\n-    console.log('🌐 调用后端负载均衡工作流API: /api/comfyui/prompt')\r\n+    // 第二步API调用：提交工作流到ComfyUI\r\n+    const promptUrl = `${apiBaseUrl}/prompt`\r\n+    console.log('🌐 调用工作流API:', promptUrl)\r\n \r\n-    const response = await fetch('/api/comfyui/prompt', {\r\n+    const response = await fetch(promptUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n         'Content-Type': 'application/json'\r\n       },\r\n-      body: JSON.stringify(requestBody)\r\n+      body: JSON.stringify(requestBody),\r\n+      mode: 'cors',\r\n+      credentials: 'omit'\r\n     })\r\n \r\n     console.log('📥 工作流响应状态:', response.status, response.statusText)\r\n \r\n@@ -325,13 +329,13 @@\n     const result = await response.json()\r\n     console.log('✅ 工作流提交成功:', result)\r\n \r\n     // 验证返回结果\r\n-    if (!result.success || !result.data?.prompt_id) {\r\n+    if (!result.prompt_id) {\r\n       throw new Error('工作流响应中缺少prompt_id')\r\n     }\r\n \r\n-    return result.data.prompt_id // 返回任务ID\r\n+    return result.prompt_id // 返回任务ID\r\n \r\n   } catch (error) {\r\n     console.error('❌ 工作流提交失败:', error)\r\n     throw new Error(`工作流提交失败: ${error.message}`)\r\n@@ -342,24 +346,18 @@\n async function checkTaskStatus(promptId) {\r\n   try {\r\n     const config = getComfyUIConfig()\r\n     const apiBaseUrl = getApiBaseUrl()\r\n-    console.log('🔍 通过后端负载均衡查询任务状态:', `/api/comfyui/history/${promptId}`)\r\n-    const response = await fetch(`/api/comfyui/history/${promptId}`)\r\n+    console.log('🔍 查询任务状态:', `${apiBaseUrl}/history/${promptId}`)\r\n+    const response = await fetch(`${apiBaseUrl}/history/${promptId}`)\r\n \r\n     if (!response.ok) {\r\n       throw new Error(`状态查询失败: ${response.status} ${response.statusText}`)\r\n     }\r\n \r\n     const result = await response.json()\r\n+    return result[promptId] || null\r\n \r\n-    // 处理后端API响应格式\r\n-    if (result.success && result.data) {\r\n-      return result.data[promptId] || null\r\n-    } else {\r\n-      return result[promptId] || null\r\n-    }\r\n-\r\n   } catch (error) {\r\n     console.error('状态查询失败:', error)\r\n     throw new Error(`状态查询失败: ${error.message}`)\r\n   }\r\n@@ -414,17 +412,17 @@\n     }\r\n \r\n     console.log('📷 最终选择的图片:', imageInfo)\r\n \r\n-    // 构建图片URL - 通过后端负载均衡\r\n+    // 构建图片URL - 按照ComfyUI API文档格式\r\n     const params = new URLSearchParams({\r\n       filename: imageInfo.filename,\r\n       type: imageInfo.type,\r\n       subfolder: imageInfo.subfolder || ''\r\n     })\r\n-    const imageUrl = `/api/comfyui/view?${params.toString()}`\r\n+    const imageUrl = `${apiBaseUrl}/view?${params.toString()}`\r\n \r\n-    console.log('🌐 通过后端负载均衡获取图片URL:', imageUrl)\r\n+    console.log('🌐 获取图片URL:', imageUrl)\r\n \r\n     // 获取图片数据并转换为base64\r\n     const imageResponse = await fetch(imageUrl)\r\n     if (!imageResponse.ok) {\r\n"
                },
                {
                    "date": 1752332884368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import faceSwapWorkflow from '../workflows/faceswap2.0.json'\r\n import comfyUIConfig from '../config/comfyui.config.js'\r\n import pointsManager from '../utils/pointsManager.js'\r\n import { updateAPIConfig } from './api.js'\r\n+import loadBalancer from './loadBalancer.js'\r\n \r\n // API配置 - 直连模式\r\n const DEFAULT_CONFIG = {\r\n   // ComfyUI服务器URL（用户可配置）\r\n"
                },
                {
                    "date": 1752332902461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,21 +153,35 @@\n function getCurrentConfig(forceRefresh = false) {\r\n   return getComfyUIConfig(forceRefresh)\r\n }\r\n \r\n-// 获取API基础URL - 直连模式\r\n-function getApiBaseUrl() {\r\n-  const config = getComfyUIConfig(true)\r\n-  console.log('🎯 直连ComfyUI服务器:', config.COMFYUI_SERVER_URL)\r\n+// 获取API基础URL - 使用负载均衡\r\n+async function getApiBaseUrl() {\r\n+  try {\r\n+    // 使用负载均衡器选择最优服务器\r\n+    const optimalServer = await loadBalancer.getOptimalServer()\r\n+    console.log('🎯 负载均衡选择的服务器:', optimalServer)\r\n \r\n-  let baseUrl = config.COMFYUI_SERVER_URL\r\n+    // 确保URL格式正确，移除末尾的斜杠\r\n+    let baseUrl = optimalServer\r\n+    if (baseUrl && baseUrl.endsWith('/')) {\r\n+      baseUrl = baseUrl.slice(0, -1)\r\n+    }\r\n \r\n-  // 确保URL格式正确，移除末尾的斜杠\r\n-  if (baseUrl && baseUrl.endsWith('/')) {\r\n-    baseUrl = baseUrl.slice(0, -1)\r\n+    return baseUrl\r\n+  } catch (error) {\r\n+    console.warn('⚠️ 负载均衡器失败，使用配置的服务器:', error)\r\n+\r\n+    // 降级到配置的服务器\r\n+    const config = getComfyUIConfig(true)\r\n+    let baseUrl = config.COMFYUI_SERVER_URL\r\n+\r\n+    if (baseUrl && baseUrl.endsWith('/')) {\r\n+      baseUrl = baseUrl.slice(0, -1)\r\n+    }\r\n+\r\n+    return baseUrl\r\n   }\r\n-\r\n-  return baseUrl\r\n }\r\n \r\n // 重置为默认配置\r\n function resetToDefaultConfig() {\r\n"
                },
                {
                    "date": 1752332920823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,14 +298,16 @@\n }\r\n \r\n // 第二步：提交工作流到ComfyUI\r\n async function submitWorkflow(workflowPrompt) {\r\n+  let selectedServer = null\r\n   try {\r\n     const config = getComfyUIConfig()\r\n-    const apiBaseUrl = getApiBaseUrl()\r\n+    const apiBaseUrl = await getApiBaseUrl() // 现在是异步的\r\n+    selectedServer = apiBaseUrl // 记录选择的服务器\r\n     console.log('🔄 第二步：提交工作流到ComfyUI')\r\n     console.log('📡 API地址:', `${apiBaseUrl}/prompt`)\r\n-    console.log('🔧 使用代理:', config.USE_PROXY ? '是' : '否')\r\n+    console.log('🔧 使用负载均衡:', '是')\r\n \r\n     // 构建请求体，按照ComfyUI API文档格式\r\n     const requestBody = {\r\n       client_id: config.CLIENT_ID,\r\n"
                },
                {
                    "date": 1752332934682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -354,8 +354,15 @@\n     return result.prompt_id // 返回任务ID\r\n \r\n   } catch (error) {\r\n     console.error('❌ 工作流提交失败:', error)\r\n+\r\n+    // 记录服务器失败\r\n+    if (selectedServer) {\r\n+      console.log('📝 记录服务器失败:', selectedServer)\r\n+      await loadBalancer.recordFailure(selectedServer)\r\n+    }\r\n+\r\n     throw new Error(`工作流提交失败: ${error.message}`)\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1752332949434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -369,9 +369,9 @@\n // 检查任务状态\r\n async function checkTaskStatus(promptId) {\r\n   try {\r\n     const config = getComfyUIConfig()\r\n-    const apiBaseUrl = getApiBaseUrl()\r\n+    const apiBaseUrl = await getApiBaseUrl() // 现在是异步的\r\n     console.log('🔍 查询任务状态:', `${apiBaseUrl}/history/${promptId}`)\r\n     const response = await fetch(`${apiBaseUrl}/history/${promptId}`)\r\n \r\n     if (!response.ok) {\r\n"
                },
                {
                    "date": 1752332964179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -579,9 +579,9 @@\n \r\n // 检查ComfyUI服务器状态\r\n async function checkComfyUIServerStatus() {\r\n   try {\r\n-    const apiBaseUrl = getApiBaseUrl()\r\n+    const apiBaseUrl = await getApiBaseUrl() // 现在是异步的\r\n     console.log('🔍 检查ComfyUI服务器状态:', apiBaseUrl)\r\n \r\n     const response = await fetch(`${apiBaseUrl}/system_stats`, {\r\n       method: 'GET',\r\n"
                },
                {
                    "date": 1752333462422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,9 +197,9 @@\n // 第一步：上传Base64图片到ComfyUI服务器并获取文件名\r\n async function uploadImageToComfyUI(base64Image) {\r\n   try {\r\n     const config = getComfyUIConfig()\r\n-    const apiBaseUrl = getApiBaseUrl()\r\n+    const apiBaseUrl = await getApiBaseUrl() // 现在是异步的\r\n     console.log('🔄 第一步：上传图片到ComfyUI服务器')\r\n     console.log('📡 API地址:', `${apiBaseUrl}/upload/image`)\r\n \r\n     // 验证base64格式\r\n"
                },
                {
                    "date": 1752333492844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -390,9 +390,9 @@\n // 获取生成的图片\r\n async function getGeneratedImage(taskResult) {\r\n   try {\r\n     const config = getComfyUIConfig()\r\n-    const apiBaseUrl = getApiBaseUrl()\r\n+    const apiBaseUrl = await getApiBaseUrl() // 现在是异步的\r\n \r\n     // 从任务结果中找到输出图片\r\n     const outputs = taskResult.outputs\r\n     let imageInfo = null\r\n"
                },
                {
                    "date": 1752333507074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -548,9 +548,9 @@\n         type: 'input',\r\n         subfolder: ''\r\n       })\r\n       const config = getComfyUIConfig()\r\n-      const apiBaseUrl = getApiBaseUrl()\r\n+      const apiBaseUrl = await getApiBaseUrl() // 现在是异步的\r\n       originalImage = `${apiBaseUrl}/view?${params.toString()}`\r\n       console.log('📷 获取节点49原图URL:', originalImage)\r\n     } catch (error) {\r\n       console.warn('⚠️ 获取节点49原图失败，使用用户上传的图片:', error)\r\n"
                },
                {
                    "date": 1752334226908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import undressWorkflow from '../workflows/undress.json'\r\n import faceSwapWorkflow from '../workflows/faceswap2.0.json'\r\n import comfyUIConfig from '../config/comfyui.config.js'\r\n import pointsManager from '../utils/pointsManager.js'\r\n+import levelCardPointsManager from '../utils/levelCardPointsManager.js'\r\n import { updateAPIConfig } from './api.js'\r\n import loadBalancer from './loadBalancer.js'\r\n \r\n // API配置 - 直连模式\r\n"
                },
                {
                    "date": 1752334245348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -495,13 +495,13 @@\n async function processUndressImage(base64Image) {\r\n   try {\r\n     console.log('🚀 开始处理换衣请求...')\r\n \r\n-    // 检查体验点\r\n-    console.log('💎 检查体验点...')\r\n-    if (!pointsManager.hasEnoughPoints()) {\r\n-      const status = pointsManager.getPointsStatus()\r\n-      throw new Error(`体验点不足！当前点数: ${status.current}，需要: ${status.generationCost}`)\r\n+    // 检查积分（优先使用等级卡系统）\r\n+    console.log('💎 检查积分...')\r\n+    const pointsStatus = await levelCardPointsManager.getPointsStatus()\r\n+    if (!pointsStatus.canGenerate) {\r\n+      throw new Error(`积分不足！当前积分: ${pointsStatus.current}，需要: ${pointsStatus.generationCost}`)\r\n     }\r\n \r\n     console.log('📋 流程：第一步上传图片 → 第二步提交工作流')\r\n \r\n"
                },
                {
                    "date": 1752334262188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -534,12 +534,12 @@\n     console.log('📥 获取生成的图片...')\r\n     const resultImage = await getGeneratedImage(taskResult)\r\n     console.log('🎉 换衣处理完全成功！')\r\n \r\n-    // 消耗体验点\r\n-    console.log('💎 消耗体验点...')\r\n-    const pointsResult = pointsManager.consumePoints()\r\n-    console.log(`✅ 已消耗 ${pointsResult.consumed} 体验点，剩余: ${pointsResult.remaining}`)\r\n+    // 消耗积分（从等级卡扣除）\r\n+    console.log('💎 消耗积分...')\r\n+    const pointsResult = await levelCardPointsManager.consumePoints(20, '一键换衣', resultImage)\r\n+    console.log(`✅ 已消耗 ${pointsResult.consumed} 积分，剩余: ${pointsResult.remaining}`)\r\n \r\n     // 获取节点49的原图用于对比\r\n     let originalImage = null\r\n     try {\r\n"
                },
                {
                    "date": 1752334280632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -715,12 +715,12 @@\n \r\n     const imageUrl = await getGeneratedImage(taskResult)\r\n     console.log('🖼️ 成功获取换脸结果图片URL')\r\n \r\n-    // 消耗体验点\r\n-    console.log('💎 消耗体验点...')\r\n-    const pointsResult = pointsManager.consumePoints()\r\n-    console.log(`✅ 已消耗 ${pointsResult.consumed} 体验点，剩余: ${pointsResult.remaining}`)\r\n+    // 消耗积分（从等级卡扣除）\r\n+    console.log('💎 消耗积分...')\r\n+    const pointsResult = await levelCardPointsManager.consumePoints(20, '极速换脸', imageUrl)\r\n+    console.log(`✅ 已消耗 ${pointsResult.consumed} 积分，剩余: ${pointsResult.remaining}`)\r\n \r\n     if (onProgress) onProgress('换脸完成！', 100)\r\n \r\n     console.log('✅ 换脸处理完成')\r\n"
                },
                {
                    "date": 1752334511810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -607,13 +607,13 @@\n async function processFaceSwapImage({ facePhotos, targetImage, onProgress }) {\r\n   try {\r\n     console.log('🚀 开始换脸处理')\r\n \r\n-    // 检查体验点\r\n-    console.log('💎 检查体验点...')\r\n-    if (!pointsManager.hasEnoughPoints()) {\r\n-      const status = pointsManager.getPointsStatus()\r\n-      throw new Error(`体验点不足！当前点数: ${status.current}，需要: ${status.generationCost}`)\r\n+    // 检查积分（优先使用等级卡系统）\r\n+    console.log('💎 检查积分...')\r\n+    const pointsStatus = await levelCardPointsManager.getPointsStatus()\r\n+    if (!pointsStatus.canGenerate) {\r\n+      throw new Error(`积分不足！当前积分: ${pointsStatus.current}，需要: ${pointsStatus.generationCost}`)\r\n     }\r\n \r\n     if (onProgress) onProgress('正在检查服务器状态...', 5)\r\n \r\n"
                },
                {
                    "date": 1752335446876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -536,9 +536,11 @@\n     console.log('🎉 换衣处理完全成功！')\r\n \r\n     // 消耗积分（从等级卡扣除）\r\n     console.log('💎 消耗积分...')\r\n-    const pointsResult = await levelCardPointsManager.consumePoints(20, '一键换衣', resultImage)\r\n+    // 获取 ComfyUI 图片访问URL而不是 base64 数据\r\n+    const imageViewUrl = getComfyUIImageUrl(resultImage)\r\n+    const pointsResult = await levelCardPointsManager.consumePoints(20, '一键换衣', imageViewUrl)\r\n     console.log(`✅ 已消耗 ${pointsResult.consumed} 积分，剩余: ${pointsResult.remaining}`)\r\n \r\n     // 获取节点49的原图用于对比\r\n     let originalImage = null\r\n"
                },
                {
                    "date": 1752335464632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -719,9 +719,11 @@\n     console.log('🖼️ 成功获取换脸结果图片URL')\r\n \r\n     // 消耗积分（从等级卡扣除）\r\n     console.log('💎 消耗积分...')\r\n-    const pointsResult = await levelCardPointsManager.consumePoints(20, '极速换脸', imageUrl)\r\n+    // 获取 ComfyUI 图片访问URL而不是 base64 数据\r\n+    const imageViewUrl = getComfyUIImageUrl(imageUrl)\r\n+    const pointsResult = await levelCardPointsManager.consumePoints(20, '极速换脸', imageViewUrl)\r\n     console.log(`✅ 已消耗 ${pointsResult.consumed} 积分，剩余: ${pointsResult.remaining}`)\r\n \r\n     if (onProgress) onProgress('换脸完成！', 100)\r\n \r\n"
                },
                {
                    "date": 1752335491803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,8 +122,47 @@\n     }\r\n   })\r\n }\r\n \r\n+// 获取 ComfyUI 图片访问URL\r\n+function getComfyUIImageUrl(imageData) {\r\n+  try {\r\n+    // 如果已经是 ComfyUI 的 URL 格式，直接返回\r\n+    if (typeof imageData === 'string' && imageData.includes('/view?')) {\r\n+      console.log('🔗 已是 ComfyUI URL 格式:', imageData)\r\n+      return imageData\r\n+    }\r\n+\r\n+    // 如果是 base64 数据，尝试从全局变量或缓存中获取对应的 ComfyUI URL\r\n+    if (typeof imageData === 'string' && imageData.startsWith('data:image/')) {\r\n+      console.log('📸 检测到 base64 图片数据，尝试获取 ComfyUI URL...')\r\n+\r\n+      // 检查是否有存储的 ComfyUI URL（在生成过程中可能已经保存）\r\n+      if (window.lastComfyUIImageUrl) {\r\n+        console.log('🔗 使用缓存的 ComfyUI URL:', window.lastComfyUIImageUrl)\r\n+        return window.lastComfyUIImageUrl\r\n+      }\r\n+\r\n+      // 如果没有缓存的URL，返回一个占位符或者 null\r\n+      console.warn('⚠️ 无法获取 ComfyUI URL，使用占位符')\r\n+      return null\r\n+    }\r\n+\r\n+    // 其他情况，尝试转换为字符串\r\n+    const urlString = String(imageData)\r\n+    if (urlString.includes('/view?')) {\r\n+      return urlString\r\n+    }\r\n+\r\n+    console.warn('⚠️ 无法识别的图片数据格式:', typeof imageData)\r\n+    return null\r\n+\r\n+  } catch (error) {\r\n+    console.error('❌ 获取 ComfyUI 图片URL失败:', error)\r\n+    return null\r\n+  }\r\n+}\r\n+\r\n // 更新配置\r\n async function updateComfyUIConfig(newConfig) {\r\n   const currentConfig = getComfyUIConfig(true) // 强制刷新当前配置\r\n   const updatedConfig = { ...currentConfig, ...newConfig }\r\n"
                }
            ],
            "date": 1752326450066,
            "name": "Commit-0",
            "content": "// ComfyUI工作流服务 - 动态配置模式\r\nimport undressWorkflow from '../workflows/undress.json'\r\nimport faceSwapWorkflow from '../workflows/faceswap2.0.json'\r\nimport comfyUIConfig from '../config/comfyui.config.js'\r\nimport pointsManager from '../utils/pointsManager.js'\r\n\r\n// 获取动态配置的默认值\r\nasync function getDefaultConfig() {\r\n  try {\r\n    const config = await comfyUIConfig.getConfig();\r\n    return {\r\n      COMFYUI_SERVER_URL: config.BASE_URL,\r\n      CLIENT_ID: config.CLIENT_ID,\r\n      TIMEOUT: config.REQUEST_TIMEOUT,\r\n      BACKUP_SERVERS: config.BACKUP_SERVERS,\r\n      AUTO_SWITCH: config.AUTO_SWITCH,\r\n      MAX_RETRIES: config.MAX_RETRIES\r\n    };\r\n  } catch (error) {\r\n    console.warn('⚠️ 获取服务器配置失败，使用硬编码默认值:', error);\r\n    return {\r\n      COMFYUI_SERVER_URL: 'https://hwf0p724ub-8188.cnb.run',\r\n      CLIENT_ID: 'abc1373d4ad648a3a81d0587fbe5534b',\r\n      TIMEOUT: 300000,\r\n      BACKUP_SERVERS: [],\r\n      AUTO_SWITCH: true,\r\n      MAX_RETRIES: 3\r\n    };\r\n  }\r\n}\r\n\r\n// 配置缓存\r\nlet configCache = null\r\n\r\n// 从localStorage获取配置，如果没有则使用默认配置\r\nfunction getComfyUIConfig(forceRefresh = false) {\r\n  // 如果强制刷新或缓存为空，重新读取配置\r\n  if (forceRefresh || !configCache) {\r\n    const savedConfig = localStorage.getItem('comfyui_config')\r\n    if (savedConfig) {\r\n      try {\r\n        const parsed = JSON.parse(savedConfig)\r\n        configCache = { ...DEFAULT_CONFIG, ...parsed }\r\n        console.log('🔄 配置已刷新:', configCache)\r\n      } catch (error) {\r\n        console.warn('解析保存的配置失败，使用默认配置:', error)\r\n        configCache = { ...DEFAULT_CONFIG }\r\n      }\r\n    } else {\r\n      configCache = { ...DEFAULT_CONFIG }\r\n    }\r\n  }\r\n  return { ...configCache }\r\n}\r\n\r\n// 保存配置到localStorage\r\nfunction saveComfyUIConfig(config) {\r\n  try {\r\n    localStorage.setItem('comfyui_config', JSON.stringify(config))\r\n    // 清除缓存，强制下次读取时重新加载\r\n    configCache = null\r\n    console.log('ComfyUI配置已保存:', config)\r\n  } catch (error) {\r\n    console.error('保存配置失败:', error)\r\n  }\r\n}\r\n\r\n// 更新代理服务器配置\r\nasync function updateProxyServerConfig(config) {\r\n  try {\r\n    // 只有在使用代理时才更新代理服务器配置\r\n    if (!config.USE_PROXY) {\r\n      console.log('🔧 不使用代理，跳过代理服务器配置更新')\r\n      return { success: true, message: '不使用代理模式' }\r\n    }\r\n\r\n    const proxyConfigUrl = config.PROXY_SERVER_URL.replace('/api', '/api/config')\r\n    console.log('🔧 更新代理服务器配置:', proxyConfigUrl)\r\n\r\n    const response = await fetch(proxyConfigUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        COMFYUI_SERVER_URL: config.COMFYUI_SERVER_URL,\r\n        CLIENT_ID: config.CLIENT_ID\r\n      }),\r\n      timeout: 10000\r\n    })\r\n\r\n    if (response.ok) {\r\n      const result = await response.json()\r\n      console.log('✅ 代理服务器配置更新成功:', result)\r\n      return { success: true, message: '代理服务器配置更新成功' }\r\n    } else {\r\n      console.warn('⚠️ 代理服务器配置更新失败:', response.status)\r\n      return { success: false, message: `代理服务器响应错误: ${response.status}` }\r\n    }\r\n  } catch (error) {\r\n    console.warn('⚠️ 无法连接到代理服务器，可能代理服务器未启动:', error.message)\r\n    return { success: false, message: '无法连接到代理服务器' }\r\n  }\r\n}\r\n\r\n// 配置变更监听器\r\nconst configChangeListeners = []\r\n\r\n// 添加配置变更监听器\r\nfunction addConfigChangeListener(listener) {\r\n  configChangeListeners.push(listener)\r\n}\r\n\r\n// 移除配置变更监听器\r\nfunction removeConfigChangeListener(listener) {\r\n  const index = configChangeListeners.indexOf(listener)\r\n  if (index > -1) {\r\n    configChangeListeners.splice(index, 1)\r\n  }\r\n}\r\n\r\n// 通知配置变更\r\nfunction notifyConfigChange(config) {\r\n  configChangeListeners.forEach(listener => {\r\n    try {\r\n      listener(config)\r\n    } catch (error) {\r\n      console.error('配置变更监听器执行失败:', error)\r\n    }\r\n  })\r\n}\r\n\r\n// 更新配置\r\nasync function updateComfyUIConfig(newConfig) {\r\n  const currentConfig = getComfyUIConfig(true) // 强制刷新当前配置\r\n  const updatedConfig = { ...currentConfig, ...newConfig }\r\n\r\n  console.log('🔄 更新配置:', updatedConfig)\r\n\r\n  // 保存到localStorage（这会清除缓存）\r\n  saveComfyUIConfig(updatedConfig)\r\n\r\n  // 强制刷新配置缓存\r\n  configCache = null\r\n\r\n  // 通知配置变更\r\n  notifyConfigChange(updatedConfig)\r\n\r\n  // 同时更新代理服务器配置\r\n  const proxyUpdateResult = await updateProxyServerConfig(updatedConfig)\r\n\r\n  console.log('✅ 配置更新完成，新配置已生效')\r\n\r\n  return {\r\n    config: updatedConfig,\r\n    proxyUpdate: proxyUpdateResult\r\n  }\r\n}\r\n\r\n// 获取当前配置\r\nfunction getCurrentConfig(forceRefresh = false) {\r\n  return getComfyUIConfig(forceRefresh)\r\n}\r\n\r\n// 获取API基础URL - 直连模式\r\nfunction getApiBaseUrl() {\r\n  const config = getComfyUIConfig(true)\r\n  console.log('🎯 直连ComfyUI服务器:', config.COMFYUI_SERVER_URL)\r\n\r\n  let baseUrl = config.COMFYUI_SERVER_URL\r\n\r\n  // 确保URL格式正确，移除末尾的斜杠\r\n  if (baseUrl && baseUrl.endsWith('/')) {\r\n    baseUrl = baseUrl.slice(0, -1)\r\n  }\r\n\r\n  return baseUrl\r\n}\r\n\r\n// 重置为默认配置\r\nfunction resetToDefaultConfig() {\r\n  localStorage.removeItem('comfyui_config')\r\n  return { ...DEFAULT_CONFIG }\r\n}\r\n\r\n// 生成随机客户端ID（备用函数）\r\nfunction generateClientId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n}\r\n\r\n// 第一步：上传Base64图片到ComfyUI服务器并获取文件名\r\nasync function uploadImageToComfyUI(base64Image) {\r\n  try {\r\n    const config = getComfyUIConfig()\r\n    const apiBaseUrl = getApiBaseUrl()\r\n    console.log('🔄 第一步：上传图片到ComfyUI服务器')\r\n    console.log('📡 API地址:', `${apiBaseUrl}/upload/image`)\r\n\r\n    // 验证base64格式\r\n    if (!base64Image || !base64Image.startsWith('data:image/')) {\r\n      throw new Error('无效的base64图片格式')\r\n    }\r\n\r\n    // 从base64数据中提取图片信息\r\n    const base64Data = base64Image.split(',')[1]\r\n    const mimeType = base64Image.split(',')[0].split(':')[1].split(';')[0]\r\n    const extension = mimeType.split('/')[1] || 'jpg'\r\n\r\n    // 生成唯一文件名\r\n    const filename = `upload_${Date.now()}_${Math.random().toString(36).substring(7)}.${extension}`\r\n\r\n    // 将base64转换为Blob\r\n    const byteCharacters = atob(base64Data)\r\n    const byteNumbers = new Array(byteCharacters.length)\r\n    for (let i = 0; i < byteCharacters.length; i++) {\r\n      byteNumbers[i] = byteCharacters.charCodeAt(i)\r\n    }\r\n    const byteArray = new Uint8Array(byteNumbers)\r\n    const blob = new Blob([byteArray], { type: mimeType })\r\n\r\n    console.log('📤 上传文件信息:', {\r\n      filename,\r\n      type: mimeType,\r\n      size: `${(blob.size / 1024).toFixed(2)} KB`\r\n    })\r\n\r\n    // 直连上传图片\r\n    const formData = new FormData()\r\n    formData.append('image', blob, filename)\r\n    formData.append('type', 'input')\r\n    formData.append('subfolder', '')\r\n    formData.append('overwrite', 'false')\r\n\r\n    console.log('🔄 开始上传图片...')\r\n\r\n    const response = await fetch(`${apiBaseUrl}/upload/image`, {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n\r\n    console.log('📥 上传响应状态:', response.status, response.statusText)\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text().catch(() => response.statusText)\r\n      throw new Error(`上传失败: ${response.status} ${response.statusText} - ${errorText}`)\r\n    }\r\n\r\n    const result = await response.json()\r\n    console.log('✅ 图片上传成功:', result)\r\n\r\n    // 验证返回结果\r\n    if (!result.name) {\r\n      throw new Error('上传响应中缺少文件名')\r\n    }\r\n\r\n    return result.name\r\n\r\n  } catch (error) {\r\n    console.error('❌ 图片上传失败:', error)\r\n    throw new Error(`图片上传失败: ${error.message}`)\r\n  }\r\n}\r\n\r\n// 创建工作流提示词，将用户图片关联到节点49\r\nfunction createUndressWorkflowPrompt(uploadedImageName) {\r\n  try {\r\n    // 深拷贝工作流\r\n    const workflow = JSON.parse(JSON.stringify(undressWorkflow))\r\n\r\n    // 将上传的图片文件名设置到节点49\r\n    if (workflow['49'] && workflow['49'].class_type === 'LoadImage') {\r\n      workflow['49'].inputs.image = uploadedImageName\r\n      console.log('节点49图片设置为:', uploadedImageName)\r\n    } else {\r\n      throw new Error('工作流中未找到节点49或节点类型不正确')\r\n    }\r\n\r\n    // 随机化种子以获得不同的结果\r\n    if (workflow['174'] && workflow['174'].inputs) {\r\n      const newSeed = Math.floor(Math.random() * 1000000000000000)\r\n      workflow['174'].inputs.noise_seed = newSeed\r\n      console.log('随机种子设置为:', newSeed)\r\n    }\r\n\r\n    console.log('工作流配置完成')\r\n    return workflow\r\n\r\n  } catch (error) {\r\n    console.error('工作流创建失败:', error)\r\n    throw new Error(`工作流创建失败: ${error.message}`)\r\n  }\r\n}\r\n\r\n// 第二步：提交工作流到ComfyUI\r\nasync function submitWorkflow(workflowPrompt) {\r\n  try {\r\n    const config = getComfyUIConfig()\r\n    const apiBaseUrl = getApiBaseUrl()\r\n    console.log('🔄 第二步：提交工作流到ComfyUI')\r\n    console.log('📡 API地址:', `${apiBaseUrl}/prompt`)\r\n    console.log('🔧 使用代理:', config.USE_PROXY ? '是' : '否')\r\n\r\n    // 构建请求体，按照ComfyUI API文档格式\r\n    const requestBody = {\r\n      client_id: config.CLIENT_ID,\r\n      prompt: workflowPrompt\r\n    }\r\n\r\n    console.log('📋 请求体结构:', {\r\n      client_id: requestBody.client_id,\r\n      prompt_keys: Object.keys(requestBody.prompt),\r\n      node_49_exists: !!requestBody.prompt['49'],\r\n      node_49_image: requestBody.prompt['49']?.inputs?.image\r\n    })\r\n\r\n    // 第二步API调用：提交工作流到ComfyUI\r\n    const promptUrl = `${apiBaseUrl}/prompt`\r\n    console.log('🌐 调用工作流API:', promptUrl)\r\n\r\n    const response = await fetch(promptUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(requestBody),\r\n      mode: 'cors',\r\n      credentials: 'omit'\r\n    })\r\n\r\n    console.log('📥 工作流响应状态:', response.status, response.statusText)\r\n\r\n    if (!response.ok) {\r\n      const errorText = await response.text()\r\n      console.error('❌ 工作流提交失败响应:', errorText)\r\n      throw new Error(`工作流提交失败: ${response.status} ${response.statusText} - ${errorText}`)\r\n    }\r\n\r\n    const result = await response.json()\r\n    console.log('✅ 工作流提交成功:', result)\r\n\r\n    // 验证返回结果\r\n    if (!result.prompt_id) {\r\n      throw new Error('工作流响应中缺少prompt_id')\r\n    }\r\n\r\n    return result.prompt_id // 返回任务ID\r\n\r\n  } catch (error) {\r\n    console.error('❌ 工作流提交失败:', error)\r\n    throw new Error(`工作流提交失败: ${error.message}`)\r\n  }\r\n}\r\n\r\n// 检查任务状态\r\nasync function checkTaskStatus(promptId) {\r\n  try {\r\n    const config = getComfyUIConfig()\r\n    const apiBaseUrl = getApiBaseUrl()\r\n    console.log('🔍 查询任务状态:', `${apiBaseUrl}/history/${promptId}`)\r\n    const response = await fetch(`${apiBaseUrl}/history/${promptId}`)\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`状态查询失败: ${response.status} ${response.statusText}`)\r\n    }\r\n\r\n    const result = await response.json()\r\n    return result[promptId] || null\r\n\r\n  } catch (error) {\r\n    console.error('状态查询失败:', error)\r\n    throw new Error(`状态查询失败: ${error.message}`)\r\n  }\r\n}\r\n\r\n// 获取生成的图片\r\nasync function getGeneratedImage(taskResult) {\r\n  try {\r\n    const config = getComfyUIConfig()\r\n    const apiBaseUrl = getApiBaseUrl()\r\n\r\n    // 从任务结果中找到输出图片\r\n    const outputs = taskResult.outputs\r\n    let imageInfo = null\r\n\r\n    // 优先查找节点730的输出图片（一键换衣处理结果）\r\n    if (outputs['730'] && outputs['730'].images && outputs['730'].images.length > 0) {\r\n      imageInfo = outputs['730'].images[0]\r\n      console.log('📷 找到节点730的一键换衣处理结果图片:', imageInfo)\r\n    } else if (outputs['812'] && outputs['812'].images && outputs['812'].images.length > 0) {\r\n      // 备用：查找节点812的输出图片（换脸处理结果）\r\n      imageInfo = outputs['812'].images[0]\r\n      console.log('📷 找到节点812的换脸处理结果图片:', imageInfo)\r\n    } else if (outputs['813'] && outputs['813'].images && outputs['813'].images.length > 0) {\r\n      // 备用：查找节点813的输出图片（旧版换脸结果）\r\n      imageInfo = outputs['813'].images[0]\r\n      console.log('📷 找到节点813的换脸处理结果图片:', imageInfo)\r\n    } else if (outputs['746'] && outputs['746'].images && outputs['746'].images.length > 0) {\r\n      // 备用：查找节点746的输出图片（更旧版换脸结果）\r\n      imageInfo = outputs['746'].images[0]\r\n      console.log('📷 找到节点746的换脸处理结果图片:', imageInfo)\r\n    } else if (outputs['710'] && outputs['710'].images && outputs['710'].images.length > 0) {\r\n      // 备用：查找节点710的输出图片（换衣处理结果）\r\n      imageInfo = outputs['710'].images[0]\r\n      console.log('📷 找到节点710的处理结果图片:', imageInfo)\r\n    } else {\r\n      // 如果主要节点都没有输出，则查找其他节点的输出图片\r\n      console.log('⚠️ 节点812、813、746和710都无输出，查找其他节点...')\r\n      for (const nodeId in outputs) {\r\n        const nodeOutput = outputs[nodeId]\r\n        if (nodeOutput.images && nodeOutput.images.length > 0) {\r\n          imageInfo = nodeOutput.images[0]\r\n          console.log(`📷 找到节点${nodeId}的图片:`, imageInfo)\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!imageInfo) {\r\n      console.error('❌ 所有节点输出:', JSON.stringify(outputs, null, 2))\r\n      throw new Error('未找到生成的图片')\r\n    }\r\n\r\n    console.log('📷 最终选择的图片:', imageInfo)\r\n\r\n    // 构建图片URL - 按照ComfyUI API文档格式\r\n    const params = new URLSearchParams({\r\n      filename: imageInfo.filename,\r\n      type: imageInfo.type,\r\n      subfolder: imageInfo.subfolder || ''\r\n    })\r\n    const imageUrl = `${apiBaseUrl}/view?${params.toString()}`\r\n\r\n    console.log('🌐 获取图片URL:', imageUrl)\r\n\r\n    // 获取图片数据并转换为base64\r\n    const imageResponse = await fetch(imageUrl)\r\n    if (!imageResponse.ok) {\r\n      throw new Error(`图片获取失败: ${imageResponse.status}`)\r\n    }\r\n\r\n    const imageBlob = await imageResponse.blob()\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader()\r\n      reader.onload = () => resolve(reader.result)\r\n      reader.onerror = reject\r\n      reader.readAsDataURL(imageBlob)\r\n    })\r\n\r\n  } catch (error) {\r\n    console.error('图片获取失败:', error)\r\n    throw new Error(`图片获取失败: ${error.message}`)\r\n  }\r\n}\r\n\r\n// 等待任务完成\r\nasync function waitForTaskCompletion(promptId, maxWaitTime = 300000) {\r\n  const startTime = Date.now()\r\n  const pollInterval = 2000 // 2秒轮询一次\r\n\r\n  while (Date.now() - startTime < maxWaitTime) {\r\n    const taskResult = await checkTaskStatus(promptId)\r\n\r\n    if (taskResult) {\r\n      if (taskResult.status && taskResult.status.completed) {\r\n        return taskResult\r\n      } else if (taskResult.status && taskResult.status.status_str === 'error') {\r\n        throw new Error(`任务执行失败: ${JSON.stringify(taskResult.status)}`)\r\n      }\r\n    }\r\n\r\n    // 等待下次轮询\r\n    await new Promise(resolve => setTimeout(resolve, pollInterval))\r\n  }\r\n\r\n  throw new Error('任务执行超时')\r\n}\r\n\r\n// 主要的换衣API函数 - 两步流程\r\nasync function processUndressImage(base64Image) {\r\n  try {\r\n    console.log('🚀 开始处理换衣请求...')\r\n\r\n    // 检查体验点\r\n    console.log('💎 检查体验点...')\r\n    if (!pointsManager.hasEnoughPoints()) {\r\n      const status = pointsManager.getPointsStatus()\r\n      throw new Error(`体验点不足！当前点数: ${status.current}，需要: ${status.generationCost}`)\r\n    }\r\n\r\n    console.log('📋 流程：第一步上传图片 → 第二步提交工作流')\r\n\r\n    // 验证图片数据格式\r\n    console.log('🔍 验证图片数据格式...')\r\n    if (!base64Image || !base64Image.startsWith('data:image/')) {\r\n      throw new Error('无效的图片数据格式')\r\n    }\r\n\r\n    // 第一步：上传图片到ComfyUI服务器\r\n    console.log('📤 第一步：上传图片到 /api/upload/image')\r\n    const uploadedImageName = await uploadImageToComfyUI(base64Image)\r\n    console.log('✅ 第一步完成，获得文件名:', uploadedImageName)\r\n\r\n    // 创建工作流提示词，将上传的图片关联到节点49\r\n    console.log('🔧 配置工作流，关联图片到节点49...')\r\n    const workflowPrompt = createUndressWorkflowPrompt(uploadedImageName)\r\n\r\n    // 第二步：提交工作流\r\n    console.log('🚀 第二步：提交工作流到 /api/prompt')\r\n    const promptId = await submitWorkflow(workflowPrompt)\r\n    console.log('✅ 第二步完成，获得任务ID:', promptId)\r\n\r\n    // 等待任务完成\r\n    console.log('⏳ 等待ComfyUI处理任务...')\r\n    const taskResult = await waitForTaskCompletion(promptId)\r\n    console.log('✅ 任务处理完成')\r\n\r\n    // 获取生成的图片\r\n    console.log('📥 获取生成的图片...')\r\n    const resultImage = await getGeneratedImage(taskResult)\r\n    console.log('🎉 换衣处理完全成功！')\r\n\r\n    // 消耗体验点\r\n    console.log('💎 消耗体验点...')\r\n    const pointsResult = pointsManager.consumePoints()\r\n    console.log(`✅ 已消耗 ${pointsResult.consumed} 体验点，剩余: ${pointsResult.remaining}`)\r\n\r\n    // 获取节点49的原图用于对比\r\n    let originalImage = null\r\n    try {\r\n      // 构建节点49原图的URL\r\n      const params = new URLSearchParams({\r\n        filename: uploadedImageName,\r\n        type: 'input',\r\n        subfolder: ''\r\n      })\r\n      const config = getComfyUIConfig()\r\n      const apiBaseUrl = getApiBaseUrl()\r\n      originalImage = `${apiBaseUrl}/view?${params.toString()}`\r\n      console.log('📷 获取节点49原图URL:', originalImage)\r\n    } catch (error) {\r\n      console.warn('⚠️ 获取节点49原图失败，使用用户上传的图片:', error)\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      resultImage: resultImage,\r\n      originalImage: originalImage, // 新增：节点49的原图\r\n      promptId: promptId,\r\n      uploadedImageName: uploadedImageName,\r\n      pointsConsumed: pointsResult.consumed,\r\n      pointsRemaining: pointsResult.remaining,\r\n      message: '换衣处理完成'\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('❌ 换衣处理失败:', error)\r\n    return {\r\n      success: false,\r\n      error: error.message,\r\n      message: '换衣处理失败'\r\n    }\r\n  }\r\n}\r\n\r\n// 检查ComfyUI服务器状态\r\nasync function checkComfyUIServerStatus() {\r\n  try {\r\n    const apiBaseUrl = getApiBaseUrl()\r\n    console.log('🔍 检查ComfyUI服务器状态:', apiBaseUrl)\r\n\r\n    const response = await fetch(`${apiBaseUrl}/system_stats`, {\r\n      method: 'GET',\r\n      signal: AbortSignal.timeout(10000) // 10秒超时\r\n    })\r\n\r\n    if (response.ok) {\r\n      const stats = await response.json()\r\n      console.log('✅ ComfyUI服务器状态正常:', stats)\r\n      return { status: 'ok', stats }\r\n    } else {\r\n      console.warn('⚠️ ComfyUI服务器响应异常:', response.status)\r\n      return { status: 'error', code: response.status }\r\n    }\r\n  } catch (error) {\r\n    console.error('❌ ComfyUI服务器连接失败:', error)\r\n    return { status: 'error', error: error.message }\r\n  }\r\n}\r\n\r\n// 换脸处理函数\r\nasync function processFaceSwapImage({ facePhotos, targetImage, onProgress }) {\r\n  try {\r\n    console.log('🚀 开始换脸处理')\r\n\r\n    // 检查体验点\r\n    console.log('💎 检查体验点...')\r\n    if (!pointsManager.hasEnoughPoints()) {\r\n      const status = pointsManager.getPointsStatus()\r\n      throw new Error(`体验点不足！当前点数: ${status.current}，需要: ${status.generationCost}`)\r\n    }\r\n\r\n    if (onProgress) onProgress('正在检查服务器状态...', 5)\r\n\r\n    // 检查ComfyUI服务器状态\r\n    const serverStatus = await checkComfyUIServerStatus()\r\n    if (serverStatus.status === 'error') {\r\n      throw new Error(`ComfyUI服务器不可用: ${serverStatus.error || serverStatus.code}`)\r\n    }\r\n\r\n    if (onProgress) onProgress('正在准备工作流...', 10)\r\n\r\n    // 验证输入\r\n    if (!facePhotos || facePhotos.length !== 4) {\r\n      throw new Error('需要提供4张人脸照片')\r\n    }\r\n\r\n    if (!targetImage) {\r\n      throw new Error('需要提供目标图片')\r\n    }\r\n\r\n    // 检查是否所有人脸照片都已上传\r\n    const validFacePhotos = facePhotos.filter(photo => photo !== null)\r\n    if (validFacePhotos.length !== 4) {\r\n      throw new Error('请上传4张人脸照片')\r\n    }\r\n\r\n    if (onProgress) onProgress('正在上传人脸照片...', 20)\r\n\r\n    // 上传4张人脸照片\r\n    const uploadedFacePhotos = []\r\n    for (let i = 0; i < facePhotos.length; i++) {\r\n      const photo = facePhotos[i]\r\n      if (onProgress) onProgress(`正在上传人脸照片 ${i + 1}/4...`, 20 + (i * 10))\r\n\r\n      const uploadedFilename = await uploadImageToComfyUI(photo)\r\n      uploadedFacePhotos.push(uploadedFilename)\r\n    }\r\n\r\n    if (onProgress) onProgress('正在上传目标图片...', 60)\r\n\r\n    // 上传目标图片\r\n    const targetUploadedFilename = await uploadImageToComfyUI(targetImage)\r\n\r\n    if (onProgress) onProgress('正在准备换脸工作流...', 70)\r\n\r\n    // 准备工作流\r\n    const workflow = JSON.parse(JSON.stringify(faceSwapWorkflow))\r\n\r\n    // 更新工作流中的图片节点\r\n    // 根据最新工作流，正确的节点映射：\r\n    // 节点670: 第一张人脸照片\r\n    // 节点662: 第二张人脸照片\r\n    // 节点658: 第三张人脸照片\r\n    // 节点655: 第四张人脸照片\r\n    // 节点737: 目标图片\r\n    // 节点812: 处理结果输出（最新）\r\n\r\n    if (workflow['670']) {\r\n      workflow['670'].inputs.image = uploadedFacePhotos[0]\r\n      console.log('✅ 节点670设置第一张人脸照片:', uploadedFacePhotos[0])\r\n    }\r\n    if (workflow['662']) {\r\n      workflow['662'].inputs.image = uploadedFacePhotos[1]\r\n      console.log('✅ 节点662设置第二张人脸照片:', uploadedFacePhotos[1])\r\n    }\r\n    if (workflow['658']) {\r\n      workflow['658'].inputs.image = uploadedFacePhotos[2]\r\n      console.log('✅ 节点658设置第三张人脸照片:', uploadedFacePhotos[2])\r\n    }\r\n    if (workflow['655']) {\r\n      workflow['655'].inputs.image = uploadedFacePhotos[3]\r\n      console.log('✅ 节点655设置第四张人脸照片:', uploadedFacePhotos[3])\r\n    }\r\n    if (workflow['737']) {\r\n      workflow['737'].inputs.image = targetUploadedFilename\r\n      console.log('✅ 节点737设置目标图片:', targetUploadedFilename)\r\n    }\r\n\r\n    if (onProgress) onProgress('正在提交换脸任务...', 80)\r\n\r\n    // 提交工作流\r\n    const promptId = await submitWorkflow(workflow)\r\n\r\n    if (onProgress) onProgress('正在处理换脸...', 85)\r\n\r\n    // 等待任务完成 - 换脸需要更长时间，设置10分钟超时\r\n    const maxWaitTime = 600000 // 10分钟\r\n    console.log(`⏳ 开始等待换脸任务完成，任务ID: ${promptId}，最大等待时间: ${maxWaitTime/1000}秒`)\r\n\r\n    const taskResult = await waitForTaskCompletion(promptId, maxWaitTime)\r\n    console.log('✅ 换脸任务处理完成，结果:', taskResult)\r\n\r\n    if (onProgress) onProgress('正在获取处理结果...', 95)\r\n\r\n    // 获取结果图片\r\n    // 根据最新工作流，最终结果应该在节点812的输出\r\n    console.log('📥 开始获取换脸结果图片，查找节点812的输出...')\r\n    console.log('🔍 任务结果结构:', JSON.stringify(taskResult, null, 2))\r\n\r\n    const imageUrl = await getGeneratedImage(taskResult)\r\n    console.log('🖼️ 成功获取换脸结果图片URL')\r\n\r\n    // 消耗体验点\r\n    console.log('💎 消耗体验点...')\r\n    const pointsResult = pointsManager.consumePoints()\r\n    console.log(`✅ 已消耗 ${pointsResult.consumed} 体验点，剩余: ${pointsResult.remaining}`)\r\n\r\n    if (onProgress) onProgress('换脸完成！', 100)\r\n\r\n    console.log('✅ 换脸处理完成')\r\n    return {\r\n      success: true,\r\n      imageUrl: imageUrl,\r\n      targetImageUrl: targetImage, // 返回目标图像用于对比\r\n      promptId: promptId,\r\n      pointsConsumed: pointsResult.consumed,\r\n      pointsRemaining: pointsResult.remaining,\r\n      message: '换脸处理完成'\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('❌ 换脸处理失败:', error)\r\n    return {\r\n      success: false,\r\n      error: error.message,\r\n      message: '换脸处理失败'\r\n    }\r\n  }\r\n}\r\n\r\n// 导出所有公共函数\r\nexport {\r\n  getCurrentConfig,\r\n  updateComfyUIConfig,\r\n  resetToDefaultConfig,\r\n  generateClientId,\r\n  getApiBaseUrl,\r\n  addConfigChangeListener,\r\n  removeConfigChangeListener,\r\n  processUndressImage,\r\n  processFaceSwapImage\r\n}\r\n"
        }
    ]
}
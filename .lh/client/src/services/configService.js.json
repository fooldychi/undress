{
    "sourceFile": "client/src/services/configService.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1752330171943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752330187186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,15 @@\n       )\n \n       if (Object.keys(filteredConfig).length > 0) {\n         console.log('🔄 同步ComfyUI配置到本地:', filteredConfig)\n+\n+        // 更新本地ComfyUI配置\n         await updateComfyUIConfig(filteredConfig)\n+\n+        // 同时更新API配置\n+        updateAPIConfig(filteredConfig)\n+\n         console.log('✅ ComfyUI配置同步完成')\n         return filteredConfig\n       } else {\n         console.warn('⚠️ 服务端未提供有效的ComfyUI配置')\n"
                },
                {
                    "date": 1752330425122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n   async fetchServerConfig() {\n     try {\n       console.log('🔄 从服务端获取配置...')\n \n-      const response = await fetch('/api/public-config', {\n+      const response = await fetch('/api/config', {\n         method: 'GET',\n         headers: {\n           'Content-Type': 'application/json'\n         }\n"
                },
                {
                    "date": 1752436710637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,17 +115,15 @@\n   async getAIPointsConfig() {\n     try {\n       const config = await this.getConfig()\n       return {\n-        textToImage: config['ai.text_to_image_points'] || 20,\n         faceSwap: config['ai.face_swap_points'] || 20,\n         undress: config['ai.undress_points'] || 20\n       }\n     } catch (error) {\n       console.error('❌ 获取AI积分配置失败:', error)\n       // 返回默认值\n       return {\n-        textToImage: 20,\n         faceSwap: 20,\n         undress: 20\n       }\n     }\n"
                },
                {
                    "date": 1752514961584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,27 @@\n     }\n   }\n \n   /**\n+   * 获取默认配置（当服务端不可用时使用）\n+   */\n+  getDefaultConfig() {\n+    return {\n+      'comfyui.server_url': 'https://l9s75ay3rp-8188.cnb.run',\n+      'comfyui.backup_servers': 'https://0rv00xh2vg-8188.cnb.run',\n+      'comfyui.client_id': 'abc1373d4ad648a3a81d0587fbe5534b',\n+      'comfyui.timeout': 300000,\n+      'comfyui.health_check_timeout': 10000,\n+      'comfyui.auto_switch': true,\n+      'comfyui.retry_attempts': 3,\n+      'comfyui.switch_threshold': 2,\n+      'ai.text_to_image_points': 20,\n+      'ai.face_swap_points': 20,\n+      'ai.undress_points': 20\n+    }\n+  }\n+\n+  /**\n    * 获取配置（带缓存）\n    */\n   async getConfig(forceRefresh = false) {\n     const now = Date.now()\n@@ -59,14 +78,22 @@\n     try {\n       // 从服务端获取最新配置\n       return await this.fetchServerConfig()\n     } catch (error) {\n+      console.warn('⚠️ 无法从服务端获取配置:', error.message)\n+\n       // 如果获取失败，返回缓存的配置（如果有）\n       if (this.configCache) {\n         console.warn('⚠️ 使用缓存配置作为备用')\n         return this.configCache\n       }\n-      throw error\n+\n+      // 最后的备用方案：使用默认配置\n+      console.warn('⚠️ 使用默认配置作为备用')\n+      const defaultConfig = this.getDefaultConfig()\n+      this.configCache = defaultConfig\n+      this.lastFetchTime = now\n+      return defaultConfig\n     }\n   }\n \n   /**\n"
                },
                {
                    "date": 1752552249470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,8 +187,32 @@\n     console.log('🗑️ 配置缓存已清除')\n   }\n \n   /**\n+   * 强制刷新配置并清除所有相关缓存\n+   */\n+  async forceRefresh() {\n+    console.log('🔄 强制刷新配置和服务器列表...')\n+\n+    // 清除配置缓存\n+    this.clearCache()\n+\n+    // 重新获取配置\n+    const config = await this.getConfig(true)\n+\n+    // 通知负载均衡器重新加载服务器列表\n+    try {\n+      const { default: loadBalancer } = await import('./loadBalancer.js')\n+      await loadBalancer.loadServerList()\n+      console.log('✅ 负载均衡器服务器列表已刷新')\n+    } catch (error) {\n+      console.warn('⚠️ 刷新负载均衡器失败:', error)\n+    }\n+\n+    return config\n+  }\n+\n+  /**\n    * 初始化配置服务\n    */\n   async initialize() {\n     try {\n"
                },
                {
                    "date": 1752552330982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,8 +211,32 @@\n     return config\n   }\n \n   /**\n+   * 强制刷新配置并清除所有相关缓存\n+   */\n+  async forceRefresh() {\n+    console.log('🔄 强制刷新配置和服务器列表...')\n+\n+    // 清除配置缓存\n+    this.clearCache()\n+\n+    // 重新获取配置\n+    const config = await this.getConfig(true)\n+\n+    // 通知负载均衡器重新加载服务器列表\n+    try {\n+      const { default: loadBalancer } = await import('./loadBalancer.js')\n+      await loadBalancer.loadServerList()\n+      console.log('✅ 负载均衡器服务器列表已刷新')\n+    } catch (error) {\n+      console.warn('⚠️ 刷新负载均衡器失败:', error)\n+    }\n+\n+    return config\n+  }\n+\n+  /**\n    * 初始化配置服务\n    */\n   async initialize() {\n     try {\n"
                },
                {
                    "date": 1752552527955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,56 +187,8 @@\n     console.log('🗑️ 配置缓存已清除')\n   }\n \n   /**\n-   * 强制刷新配置并清除所有相关缓存\n-   */\n-  async forceRefresh() {\n-    console.log('🔄 强制刷新配置和服务器列表...')\n-\n-    // 清除配置缓存\n-    this.clearCache()\n-\n-    // 重新获取配置\n-    const config = await this.getConfig(true)\n-\n-    // 通知负载均衡器重新加载服务器列表\n-    try {\n-      const { default: loadBalancer } = await import('./loadBalancer.js')\n-      await loadBalancer.loadServerList()\n-      console.log('✅ 负载均衡器服务器列表已刷新')\n-    } catch (error) {\n-      console.warn('⚠️ 刷新负载均衡器失败:', error)\n-    }\n-\n-    return config\n-  }\n-\n-  /**\n-   * 强制刷新配置并清除所有相关缓存\n-   */\n-  async forceRefresh() {\n-    console.log('🔄 强制刷新配置和服务器列表...')\n-\n-    // 清除配置缓存\n-    this.clearCache()\n-\n-    // 重新获取配置\n-    const config = await this.getConfig(true)\n-\n-    // 通知负载均衡器重新加载服务器列表\n-    try {\n-      const { default: loadBalancer } = await import('./loadBalancer.js')\n-      await loadBalancer.loadServerList()\n-      console.log('✅ 负载均衡器服务器列表已刷新')\n-    } catch (error) {\n-      console.warn('⚠️ 刷新负载均衡器失败:', error)\n-    }\n-\n-    return config\n-  }\n-\n-  /**\n    * 初始化配置服务\n    */\n   async initialize() {\n     try {\n"
                },
                {
                    "date": 1752811577361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -210,5 +210,9 @@\n \n // 创建单例实例\n const configService = new ConfigService()\n \n+// 导出便捷函数\n+export const getPublicConfig = () => configService.getConfig()\n+export const getConfig = () => configService.getConfig()\n+\n export default configService\n"
                }
            ],
            "date": 1752330171943,
            "name": "Commit-0",
            "content": "// 配置服务 - 从服务端API获取配置数据\nimport { updateComfyUIConfig, getCurrentConfig } from './comfyui.js'\nimport { updateAPIConfig } from './api.js'\n\n// 配置服务类\nclass ConfigService {\n  constructor() {\n    this.configCache = null\n    this.lastFetchTime = 0\n    this.cacheTimeout = 5 * 60 * 1000 // 5分钟缓存\n  }\n\n  /**\n   * 从服务端获取公开配置\n   */\n  async fetchServerConfig() {\n    try {\n      console.log('🔄 从服务端获取配置...')\n\n      const response = await fetch('/api/public-config', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n      }\n\n      const result = await response.json()\n\n      if (result.success && result.data) {\n        console.log('✅ 服务端配置获取成功:', result.data)\n        this.configCache = result.data\n        this.lastFetchTime = Date.now()\n        return result.data\n      } else {\n        throw new Error(result.message || '获取配置失败')\n      }\n    } catch (error) {\n      console.error('❌ 获取服务端配置失败:', error)\n      throw error\n    }\n  }\n\n  /**\n   * 获取配置（带缓存）\n   */\n  async getConfig(forceRefresh = false) {\n    const now = Date.now()\n\n    // 如果有缓存且未过期，直接返回缓存\n    if (!forceRefresh && this.configCache && (now - this.lastFetchTime) < this.cacheTimeout) {\n      console.log('📋 使用缓存的配置')\n      return this.configCache\n    }\n\n    try {\n      // 从服务端获取最新配置\n      return await this.fetchServerConfig()\n    } catch (error) {\n      // 如果获取失败，返回缓存的配置（如果有）\n      if (this.configCache) {\n        console.warn('⚠️ 使用缓存配置作为备用')\n        return this.configCache\n      }\n      throw error\n    }\n  }\n\n  /**\n   * 同步ComfyUI配置到本地\n   */\n  async syncComfyUIConfig() {\n    try {\n      const serverConfig = await this.getConfig()\n\n      // 提取ComfyUI相关配置\n      const comfyuiConfig = {\n        COMFYUI_SERVER_URL: serverConfig['comfyui.server_url'],\n        CLIENT_ID: serverConfig['comfyui.client_id'],\n        TIMEOUT: serverConfig['comfyui.timeout'] || 300000\n      }\n\n      // 过滤掉空值\n      const filteredConfig = Object.fromEntries(\n        Object.entries(comfyuiConfig).filter(([key, value]) => value != null && value !== '')\n      )\n\n      if (Object.keys(filteredConfig).length > 0) {\n        console.log('🔄 同步ComfyUI配置到本地:', filteredConfig)\n        await updateComfyUIConfig(filteredConfig)\n        console.log('✅ ComfyUI配置同步完成')\n        return filteredConfig\n      } else {\n        console.warn('⚠️ 服务端未提供有效的ComfyUI配置')\n        return null\n      }\n    } catch (error) {\n      console.error('❌ 同步ComfyUI配置失败:', error)\n      throw error\n    }\n  }\n\n  /**\n   * 获取AI功能积分配置\n   */\n  async getAIPointsConfig() {\n    try {\n      const config = await this.getConfig()\n      return {\n        textToImage: config['ai.text_to_image_points'] || 20,\n        faceSwap: config['ai.face_swap_points'] || 20,\n        undress: config['ai.undress_points'] || 20\n      }\n    } catch (error) {\n      console.error('❌ 获取AI积分配置失败:', error)\n      // 返回默认值\n      return {\n        textToImage: 20,\n        faceSwap: 20,\n        undress: 20\n      }\n    }\n  }\n\n  /**\n   * 获取前端配置\n   */\n  async getFrontendConfig() {\n    try {\n      const config = await this.getConfig()\n      return {\n        title: config['frontend.title'] || 'AI Magic - AI图像处理平台',\n        apiBaseUrl: config['frontend.api_base_url'],\n        version: config['frontend.version'] || '1.0.0'\n      }\n    } catch (error) {\n      console.error('❌ 获取前端配置失败:', error)\n      // 返回默认值\n      return {\n        title: 'AI Magic - AI图像处理平台',\n        apiBaseUrl: '',\n        version: '1.0.0'\n      }\n    }\n  }\n\n  /**\n   * 清除配置缓存\n   */\n  clearCache() {\n    this.configCache = null\n    this.lastFetchTime = 0\n    console.log('🗑️ 配置缓存已清除')\n  }\n\n  /**\n   * 初始化配置服务\n   */\n  async initialize() {\n    try {\n      console.log('🚀 初始化配置服务...')\n\n      // 获取服务端配置\n      await this.getConfig()\n\n      // 同步ComfyUI配置\n      await this.syncComfyUIConfig()\n\n      console.log('✅ 配置服务初始化完成')\n    } catch (error) {\n      console.error('❌ 配置服务初始化失败:', error)\n      // 不抛出错误，允许应用继续运行\n    }\n  }\n}\n\n// 创建单例实例\nconst configService = new ConfigService()\n\nexport default configService\n"
        }
    ]
}
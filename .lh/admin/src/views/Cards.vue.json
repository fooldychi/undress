{
    "sourceFile": "admin/src/views/Cards.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752314235686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752314268560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,27 +88,38 @@\n const showGenerateDialog = () => {\n   generateDialogVisible.value = true\n }\n \n-const handleGenerate = () => {\n-  ElMessage.success(`已生成 ${generateForm.count} 张体验卡`)\n-  generateDialogVisible.value = false\n-  loadCards()\n+const handleGenerate = async () => {\n+  try {\n+    const response = await generateExperienceCards({\n+      count: generateForm.count,\n+      points: generateForm.points\n+    })\n+    if (response.success) {\n+      ElMessage.success(`已生成 ${generateForm.count} 张体验卡`)\n+      generateDialogVisible.value = false\n+      loadCards()\n+    }\n+  } catch (error) {\n+    console.error('生成体验卡失败:', error)\n+    ElMessage.error('生成体验卡失败')\n+  }\n }\n \n-const loadCards = () => {\n-  // 模拟数据\n-  cardList.value = [\n-    {\n-      id: 1,\n-      card_number: 'EXP001',\n-      type_name: '体验卡',\n-      total_points: 100,\n-      remaining_points: 100,\n-      status: 'unused',\n-      created_at: new Date().toISOString()\n+const loadCards = async () => {\n+  loading.value = true\n+  try {\n+    const response = await getCardList({ page: 1, pageSize: 50 })\n+    if (response.success) {\n+      cardList.value = response.data.items\n     }\n-  ]\n+  } catch (error) {\n+    console.error('加载等级卡列表失败:', error)\n+    ElMessage.error('加载等级卡列表失败')\n+  } finally {\n+    loading.value = false\n+  }\n }\n \n onMounted(() => {\n   loadCards()\n"
                }
            ],
            "date": 1752314235686,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"cards-page\">\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">等级卡管理</h1>\n      <el-button type=\"primary\" @click=\"showGenerateDialog\">\n        <el-icon><Plus /></el-icon>\n        生成体验卡\n      </el-button>\n    </div>\n\n    <el-card>\n      <el-table :data=\"cardList\" v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n        <el-table-column prop=\"card_number\" label=\"卡号\" width=\"200\" />\n        <el-table-column prop=\"type_name\" label=\"类型\" width=\"120\" />\n        <el-table-column prop=\"total_points\" label=\"总积分\" width=\"100\" />\n        <el-table-column prop=\"remaining_points\" label=\"剩余积分\" width=\"100\" />\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"getStatusType(row.status)\">\n              {{ getStatusText(row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"created_at\" label=\"创建时间\" width=\"180\">\n          <template #default=\"{ row }\">\n            {{ formatDate(row.created_at) }}\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 生成体验卡对话框 -->\n    <el-dialog v-model=\"generateDialogVisible\" title=\"生成体验卡\" width=\"500px\">\n      <el-form :model=\"generateForm\" label-width=\"100px\">\n        <el-form-item label=\"卡片数量\">\n          <el-input-number v-model=\"generateForm.count\" :min=\"1\" :max=\"100\" />\n        </el-form-item>\n        <el-form-item label=\"积分数量\">\n          <el-input-number v-model=\"generateForm.points\" :min=\"10\" :max=\"1000\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"generateDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleGenerate\">生成</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { getCardList, generateExperienceCards } from '@/api/cards'\n\nconst loading = ref(false)\nconst cardList = ref([])\nconst generateDialogVisible = ref(false)\n\nconst generateForm = reactive({\n  count: 10,\n  points: 100\n})\n\nconst formatDate = (date) => {\n  if (!date) return ''\n  return new Date(date).toLocaleString()\n}\n\nconst getStatusType = (status) => {\n  const types = {\n    'unused': 'success',\n    'used': 'info',\n    'bound': 'warning'\n  }\n  return types[status] || 'info'\n}\n\nconst getStatusText = (status) => {\n  const texts = {\n    'unused': '未使用',\n    'used': '已使用',\n    'bound': '已绑定'\n  }\n  return texts[status] || status\n}\n\nconst showGenerateDialog = () => {\n  generateDialogVisible.value = true\n}\n\nconst handleGenerate = () => {\n  ElMessage.success(`已生成 ${generateForm.count} 张体验卡`)\n  generateDialogVisible.value = false\n  loadCards()\n}\n\nconst loadCards = () => {\n  // 模拟数据\n  cardList.value = [\n    {\n      id: 1,\n      card_number: 'EXP001',\n      type_name: '体验卡',\n      total_points: 100,\n      remaining_points: 100,\n      status: 'unused',\n      created_at: new Date().toISOString()\n    }\n  ]\n}\n\nonMounted(() => {\n  loadCards()\n})\n</script>\n\n<style scoped>\n.cards-page {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0;\n}\n</style>\n"
        }
    ]
}
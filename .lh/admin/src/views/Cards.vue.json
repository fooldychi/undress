{
    "sourceFile": "admin/src/views/Cards.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1752314235686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752314268560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,27 +88,38 @@\n const showGenerateDialog = () => {\n   generateDialogVisible.value = true\n }\n \n-const handleGenerate = () => {\n-  ElMessage.success(`已生成 ${generateForm.count} 张体验卡`)\n-  generateDialogVisible.value = false\n-  loadCards()\n+const handleGenerate = async () => {\n+  try {\n+    const response = await generateExperienceCards({\n+      count: generateForm.count,\n+      points: generateForm.points\n+    })\n+    if (response.success) {\n+      ElMessage.success(`已生成 ${generateForm.count} 张体验卡`)\n+      generateDialogVisible.value = false\n+      loadCards()\n+    }\n+  } catch (error) {\n+    console.error('生成体验卡失败:', error)\n+    ElMessage.error('生成体验卡失败')\n+  }\n }\n \n-const loadCards = () => {\n-  // 模拟数据\n-  cardList.value = [\n-    {\n-      id: 1,\n-      card_number: 'EXP001',\n-      type_name: '体验卡',\n-      total_points: 100,\n-      remaining_points: 100,\n-      status: 'unused',\n-      created_at: new Date().toISOString()\n+const loadCards = async () => {\n+  loading.value = true\n+  try {\n+    const response = await getCardList({ page: 1, pageSize: 50 })\n+    if (response.success) {\n+      cardList.value = response.data.items\n     }\n-  ]\n+  } catch (error) {\n+    console.error('加载等级卡列表失败:', error)\n+    ElMessage.error('加载等级卡列表失败')\n+  } finally {\n+    loading.value = false\n+  }\n }\n \n onMounted(() => {\n   loadCards()\n"
                },
                {
                    "date": 1752316911534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,13 +21,42 @@\n               {{ getStatusText(row.status) }}\n             </el-tag>\n           </template>\n         </el-table-column>\n+        <el-table-column label=\"绑定状态\" width=\"150\">\n+          <template #default=\"{ row }\">\n+            <el-tag v-if=\"row.bound_username\" type=\"success\">\n+              已绑定: {{ row.bound_username }}\n+            </el-tag>\n+            <el-tag v-else type=\"info\">未绑定</el-tag>\n+          </template>\n+        </el-table-column>\n         <el-table-column prop=\"created_at\" label=\"创建时间\" width=\"180\">\n           <template #default=\"{ row }\">\n             {{ formatDate(row.created_at) }}\n           </template>\n         </el-table-column>\n+        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n+          <template #default=\"{ row }\">\n+            <el-button\n+              v-if=\"row.bound_username\"\n+              type=\"text\"\n+              size=\"small\"\n+              class=\"danger\"\n+              @click=\"handleUnbind(row)\"\n+            >\n+              解绑\n+            </el-button>\n+            <el-button\n+              type=\"text\"\n+              size=\"small\"\n+              :class=\"row.status === 'active' ? 'danger' : 'success'\"\n+              @click=\"toggleCardStatus(row)\"\n+            >\n+              {{ row.status === 'active' ? '禁用' : '启用' }}\n+            </el-button>\n+          </template>\n+        </el-table-column>\n       </el-table>\n     </el-card>\n \n     <!-- 生成体验卡对话框 -->\n"
                },
                {
                    "date": 1752316935961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,10 +78,10 @@\n </template>\n \n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n-import { ElMessage } from 'element-plus'\n-import { getCardList, generateExperienceCards } from '@/api/cards'\n+import { ElMessage, ElMessageBox } from 'element-plus'\n+import { getCardList, generateExperienceCards, updateCardStatus, unbindCard } from '@/api/cards'\n \n const loading = ref(false)\n const cardList = ref([])\n const generateDialogVisible = ref(false)\n"
                },
                {
                    "date": 1752316957337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,8 +149,58 @@\n     loading.value = false\n   }\n }\n \n+// 解绑等级卡\n+const handleUnbind = async (card) => {\n+  try {\n+    await ElMessageBox.confirm(\n+      `确定要解绑用户 \"${card.bound_username}\" 的等级卡吗？`,\n+      '确认解绑',\n+      {\n+        confirmButtonText: '确定',\n+        cancelButtonText: '取消',\n+        type: 'warning'\n+      }\n+    )\n+\n+    await unbindCard(card.id)\n+    ElMessage.success('解绑成功')\n+    loadCards()\n+  } catch (error) {\n+    if (error !== 'cancel') {\n+      console.error('解绑等级卡失败:', error)\n+      ElMessage.error('解绑失败')\n+    }\n+  }\n+}\n+\n+// 切换等级卡状态\n+const toggleCardStatus = async (card) => {\n+  const action = card.status === 'active' ? '禁用' : '启用'\n+  try {\n+    await ElMessageBox.confirm(\n+      `确定要${action}等级卡 \"${card.card_number}\" 吗？`,\n+      '确认操作',\n+      {\n+        confirmButtonText: '确定',\n+        cancelButtonText: '取消',\n+        type: 'warning'\n+      }\n+    )\n+\n+    const newStatus = card.status === 'active' ? 'disabled' : 'active'\n+    await updateCardStatus(card.id, newStatus)\n+    ElMessage.success(`${action}成功`)\n+    loadCards()\n+  } catch (error) {\n+    if (error !== 'cancel') {\n+      console.error('更新等级卡状态失败:', error)\n+      ElMessage.error(`${action}失败`)\n+    }\n+  }\n+}\n+\n onMounted(() => {\n   loadCards()\n })\n </script>\n"
                },
                {
                    "date": 1752316970313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,9 @@\n \n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n+import { Plus } from '@element-plus/icons-vue'\n import { getCardList, generateExperienceCards, updateCardStatus, unbindCard } from '@/api/cards'\n \n const loading = ref(false)\n const cardList = ref([])\n"
                },
                {
                    "date": 1752318516754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,15 +14,8 @@\n         <el-table-column prop=\"card_number\" label=\"卡号\" width=\"200\" />\n         <el-table-column prop=\"type_name\" label=\"类型\" width=\"120\" />\n         <el-table-column prop=\"total_points\" label=\"总积分\" width=\"100\" />\n         <el-table-column prop=\"remaining_points\" label=\"剩余积分\" width=\"100\" />\n-        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n-          <template #default=\"{ row }\">\n-            <el-tag :type=\"getStatusType(row.status)\">\n-              {{ getStatusText(row.status) }}\n-            </el-tag>\n-          </template>\n-        </el-table-column>\n         <el-table-column label=\"绑定状态\" width=\"150\">\n           <template #default=\"{ row }\">\n             <el-tag v-if=\"row.bound_username\" type=\"success\">\n               已绑定: {{ row.bound_username }}\n"
                },
                {
                    "date": 1752318533114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n           <template #default=\"{ row }\">\n             {{ formatDate(row.created_at) }}\n           </template>\n         </el-table-column>\n-        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n+        <el-table-column label=\"操作\" width=\"100\" fixed=\"right\">\n           <template #default=\"{ row }\">\n             <el-button\n               v-if=\"row.bound_username\"\n               type=\"text\"\n@@ -38,16 +38,9 @@\n               @click=\"handleUnbind(row)\"\n             >\n               解绑\n             </el-button>\n-            <el-button\n-              type=\"text\"\n-              size=\"small\"\n-              :class=\"row.status === 'active' ? 'danger' : 'success'\"\n-              @click=\"toggleCardStatus(row)\"\n-            >\n-              {{ row.status === 'active' ? '禁用' : '启用' }}\n-            </el-button>\n+            <span v-else class=\"no-action\">-</span>\n           </template>\n         </el-table-column>\n       </el-table>\n     </el-card>\n"
                },
                {
                    "date": 1752318547648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n import { Plus } from '@element-plus/icons-vue'\n-import { getCardList, generateExperienceCards, updateCardStatus, unbindCard } from '@/api/cards'\n+import { getCardList, generateExperienceCards, unbindCard } from '@/api/cards'\n \n const loading = ref(false)\n const cardList = ref([])\n const generateDialogVisible = ref(false)\n"
                },
                {
                    "date": 1752318565674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,25 +82,9 @@\n   if (!date) return ''\n   return new Date(date).toLocaleString()\n }\n \n-const getStatusType = (status) => {\n-  const types = {\n-    'unused': 'success',\n-    'used': 'info',\n-    'bound': 'warning'\n-  }\n-  return types[status] || 'info'\n-}\n \n-const getStatusText = (status) => {\n-  const texts = {\n-    'unused': '未使用',\n-    'used': '已使用',\n-    'bound': '已绑定'\n-  }\n-  return texts[status] || status\n-}\n \n const showGenerateDialog = () => {\n   generateDialogVisible.value = true\n }\n"
                },
                {
                    "date": 1752318592482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,34 +144,8 @@\n     }\n   }\n }\n \n-// 切换等级卡状态\n-const toggleCardStatus = async (card) => {\n-  const action = card.status === 'active' ? '禁用' : '启用'\n-  try {\n-    await ElMessageBox.confirm(\n-      `确定要${action}等级卡 \"${card.card_number}\" 吗？`,\n-      '确认操作',\n-      {\n-        confirmButtonText: '确定',\n-        cancelButtonText: '取消',\n-        type: 'warning'\n-      }\n-    )\n-\n-    const newStatus = card.status === 'active' ? 'disabled' : 'active'\n-    await updateCardStatus(card.id, newStatus)\n-    ElMessage.success(`${action}成功`)\n-    loadCards()\n-  } catch (error) {\n-    if (error !== 'cancel') {\n-      console.error('更新等级卡状态失败:', error)\n-      ElMessage.error(`${action}失败`)\n-    }\n-  }\n-}\n-\n onMounted(() => {\n   loadCards()\n })\n </script>\n"
                },
                {
                    "date": 1752318605949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,5 +168,10 @@\n   font-weight: 600;\n   color: #303133;\n   margin: 0;\n }\n+\n+.no-action {\n+  color: #c0c4cc;\n+  font-size: 12px;\n+}\n </style>\n"
                },
                {
                    "date": 1752321903732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,18 @@\n <template>\n   <div class=\"cards-page\">\n     <div class=\"page-header\">\n       <h1 class=\"page-title\">等级卡管理</h1>\n-      <el-button type=\"primary\" @click=\"showGenerateDialog\">\n-        <el-icon><Plus /></el-icon>\n-        生成体验卡\n-      </el-button>\n+      <div class=\"header-actions\">\n+        <el-button type=\"success\" @click=\"showGenerateDialog\">\n+          <el-icon><Plus /></el-icon>\n+          生成体验卡\n+        </el-button>\n+        <el-button type=\"primary\" @click=\"showBatchGenerateDialog\">\n+          <el-icon><Plus /></el-icon>\n+          批量生成等级卡\n+        </el-button>\n+      </div>\n     </div>\n \n     <el-card>\n       <el-table :data=\"cardList\" v-loading=\"loading\">\n"
                },
                {
                    "date": 1752321940086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,96 @@\n         <el-button @click=\"generateDialogVisible = false\">取消</el-button>\n         <el-button type=\"primary\" @click=\"handleGenerate\">生成</el-button>\n       </template>\n     </el-dialog>\n+\n+    <!-- 批量生成等级卡弹窗 -->\n+    <el-dialog\n+      v-model=\"batchGenerateDialogVisible\"\n+      title=\"批量生成等级卡\"\n+      width=\"500px\"\n+      :close-on-click-modal=\"false\"\n+    >\n+      <el-form :model=\"batchGenerateForm\" label-width=\"100px\">\n+        <el-form-item label=\"等级卡类型\" required>\n+          <el-select\n+            v-model=\"batchGenerateForm.cardTypeId\"\n+            placeholder=\"请选择等级卡类型\"\n+            style=\"width: 100%\"\n+            :loading=\"cardTypesLoading\"\n+          >\n+            <el-option\n+              v-for=\"cardType in cardTypes\"\n+              :key=\"cardType.id\"\n+              :label=\"`${cardType.icon} ${cardType.name} (${cardType.points}积分 - ¥${cardType.price})`\"\n+              :value=\"cardType.id\"\n+            />\n+          </el-select>\n+        </el-form-item>\n+        <el-form-item label=\"生成数量\" required>\n+          <el-input-number\n+            v-model=\"batchGenerateForm.count\"\n+            :min=\"1\"\n+            :max=\"100\"\n+            style=\"width: 100%\"\n+          />\n+        </el-form-item>\n+      </el-form>\n+      <template #footer>\n+        <el-button @click=\"batchGenerateDialogVisible = false\">取消</el-button>\n+        <el-button\n+          type=\"primary\"\n+          @click=\"handleBatchGenerate\"\n+          :loading=\"batchGenerating\"\n+        >\n+          生成\n+        </el-button>\n+      </template>\n+    </el-dialog>\n+\n+    <!-- 生成结果弹窗 -->\n+    <el-dialog\n+      v-model=\"resultDialogVisible\"\n+      :title=\"resultDialogTitle\"\n+      width=\"80%\"\n+      :close-on-click-modal=\"false\"\n+      class=\"result-dialog\"\n+    >\n+      <div class=\"result-content\">\n+        <div class=\"result-summary\">\n+          <el-alert\n+            :title=\"`成功生成 ${generatedCards.length} 张${selectedCardTypeName}！`\"\n+            type=\"success\"\n+            :closable=\"false\"\n+            show-icon\n+          />\n+        </div>\n+\n+        <div class=\"cards-table\">\n+          <el-table :data=\"generatedCards\" border style=\"width: 100%\">\n+            <el-table-column prop=\"cardNumber\" label=\"卡号\" width=\"200\" />\n+            <el-table-column prop=\"cardPassword\" label=\"卡密\" width=\"200\" />\n+            <el-table-column prop=\"typeName\" label=\"类型\" width=\"120\" />\n+            <el-table-column prop=\"points\" label=\"积分\" width=\"100\" />\n+            <el-table-column prop=\"price\" label=\"价格\" width=\"100\">\n+              <template #default=\"{ row }\">\n+                ¥{{ row.price }}\n+              </template>\n+            </el-table-column>\n+          </el-table>\n+        </div>\n+      </div>\n+\n+      <template #footer>\n+        <div class=\"dialog-footer\">\n+          <el-button @click=\"resultDialogVisible = false\">关闭</el-button>\n+          <el-button type=\"primary\" @click=\"copyAllCards\">\n+            <el-icon><DocumentCopy /></el-icon>\n+            一键复制所有卡号卡密\n+          </el-button>\n+        </div>\n+      </template>\n+    </el-dialog>\n   </div>\n </template>\n \n <script setup>\n"
                },
                {
                    "date": 1752321959699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,20 +159,37 @@\n \n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n-import { Plus } from '@element-plus/icons-vue'\n-import { getCardList, generateExperienceCards, unbindCard } from '@/api/cards'\n+import { Plus, DocumentCopy } from '@element-plus/icons-vue'\n+import { getCardList, generateExperienceCards, unbindCard, getCardTypes, generateCards } from '@/api/cards'\n \n const loading = ref(false)\n const cardList = ref([])\n const generateDialogVisible = ref(false)\n \n+// 批量生成相关\n+const batchGenerateDialogVisible = ref(false)\n+const cardTypes = ref([])\n+const cardTypesLoading = ref(false)\n+const batchGenerating = ref(false)\n+\n+// 结果弹窗相关\n+const resultDialogVisible = ref(false)\n+const resultDialogTitle = ref('')\n+const generatedCards = ref([])\n+const selectedCardTypeName = ref('')\n+\n const generateForm = reactive({\n   count: 10,\n   points: 100\n })\n \n+const batchGenerateForm = reactive({\n+  cardTypeId: null,\n+  count: 5\n+})\n+\n const formatDate = (date) => {\n   if (!date) return ''\n   return new Date(date).toLocaleString()\n }\n"
                },
                {
                    "date": 1752321975484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,8 +199,30 @@\n const showGenerateDialog = () => {\n   generateDialogVisible.value = true\n }\n \n+// 显示批量生成弹窗\n+const showBatchGenerateDialog = async () => {\n+  await loadCardTypes()\n+  batchGenerateDialogVisible.value = true\n+}\n+\n+// 加载等级卡类型\n+const loadCardTypes = async () => {\n+  cardTypesLoading.value = true\n+  try {\n+    const response = await getCardTypes()\n+    if (response.success) {\n+      cardTypes.value = response.data.cardTypes\n+    }\n+  } catch (error) {\n+    console.error('加载等级卡类型失败:', error)\n+    ElMessage.error('加载等级卡类型失败')\n+  } finally {\n+    cardTypesLoading.value = false\n+  }\n+}\n+\n const handleGenerate = async () => {\n   try {\n     const response = await generateExperienceCards({\n       count: generateForm.count,\n"
                },
                {
                    "date": 1752322008204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,8 +238,95 @@\n     ElMessage.error('生成体验卡失败')\n   }\n }\n \n+// 批量生成等级卡\n+const handleBatchGenerate = async () => {\n+  if (!batchGenerateForm.cardTypeId) {\n+    ElMessage.warning('请选择等级卡类型')\n+    return\n+  }\n+\n+  if (!batchGenerateForm.count || batchGenerateForm.count <= 0) {\n+    ElMessage.warning('请输入有效的生成数量')\n+    return\n+  }\n+\n+  batchGenerating.value = true\n+  try {\n+    const response = await generateCards({\n+      cardTypeId: batchGenerateForm.cardTypeId,\n+      count: batchGenerateForm.count\n+    })\n+\n+    if (response.success) {\n+      // 获取选中的卡类型名称\n+      const selectedCardType = cardTypes.value.find(type => type.id === batchGenerateForm.cardTypeId)\n+      selectedCardTypeName.value = selectedCardType?.name || '等级卡'\n+\n+      // 显示生成结果\n+      generatedCards.value = response.data.cards\n+      resultDialogTitle.value = `生成结果 - ${selectedCardTypeName.value}`\n+\n+      // 关闭生成弹窗，显示结果弹窗\n+      batchGenerateDialogVisible.value = false\n+      resultDialogVisible.value = true\n+\n+      // 刷新列表\n+      loadCards()\n+\n+      ElMessage.success(response.message)\n+    }\n+  } catch (error) {\n+    console.error('批量生成等级卡失败:', error)\n+    ElMessage.error('批量生成等级卡失败')\n+  } finally {\n+    batchGenerating.value = false\n+  }\n+}\n+\n+// 一键复制所有卡号卡密\n+const copyAllCards = async () => {\n+  if (generatedCards.value.length === 0) {\n+    ElMessage.warning('没有可复制的卡片信息')\n+    return\n+  }\n+\n+  try {\n+    let copyText = `${selectedCardTypeName.value} - 共${generatedCards.value.length}张\\n\\n`\n+    copyText += '卡号\\t卡密\\t类型\\t积分\\t价格\\n'\n+    copyText += '----------------------------------------\\n'\n+\n+    generatedCards.value.forEach(card => {\n+      copyText += `${card.cardNumber}\\t${card.cardPassword}\\t${card.typeName}\\t${card.points}\\t¥${card.price}\\n`\n+    })\n+\n+    copyText += '\\n生成时间: ' + new Date().toLocaleString()\n+\n+    // 使用现代浏览器的 Clipboard API\n+    if (navigator.clipboard && window.isSecureContext) {\n+      await navigator.clipboard.writeText(copyText)\n+    } else {\n+      // 降级方案：使用传统的 document.execCommand\n+      const textArea = document.createElement('textarea')\n+      textArea.value = copyText\n+      textArea.style.position = 'fixed'\n+      textArea.style.left = '-999999px'\n+      textArea.style.top = '-999999px'\n+      document.body.appendChild(textArea)\n+      textArea.focus()\n+      textArea.select()\n+      document.execCommand('copy')\n+      document.body.removeChild(textArea)\n+    }\n+\n+    ElMessage.success('卡号卡密信息已复制到剪贴板')\n+  } catch (error) {\n+    console.error('复制失败:', error)\n+    ElMessage.error('复制失败，请手动复制')\n+  }\n+}\n+\n const loadCards = async () => {\n   loading.value = true\n   try {\n     const response = await getCardList({ page: 1, pageSize: 50 })\n"
                },
                {
                    "date": 1752322028285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -382,8 +382,13 @@\n   align-items: center;\n   margin-bottom: 20px;\n }\n \n+.header-actions {\n+  display: flex;\n+  gap: 12px;\n+}\n+\n .page-title {\n   font-size: 24px;\n   font-weight: 600;\n   color: #303133;\n@@ -393,5 +398,33 @@\n .no-action {\n   color: #c0c4cc;\n   font-size: 12px;\n }\n+\n+/* 结果弹窗样式 */\n+.result-dialog {\n+  .el-dialog__body {\n+    padding: 20px;\n+  }\n+}\n+\n+.result-content {\n+  display: flex;\n+  flex-direction: column;\n+  gap: 20px;\n+}\n+\n+.result-summary {\n+  margin-bottom: 16px;\n+}\n+\n+.cards-table {\n+  max-height: 400px;\n+  overflow-y: auto;\n+}\n+\n+.dialog-footer {\n+  display: flex;\n+  justify-content: flex-end;\n+  gap: 12px;\n+}\n </style>\n"
                },
                {
                    "date": 1752324339211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,8 @@\n   <div class=\"cards-page\">\n     <div class=\"page-header\">\n       <h1 class=\"page-title\">等级卡管理</h1>\n       <div class=\"header-actions\">\n-        <el-button type=\"success\" @click=\"showGenerateDialog\">\n-          <el-icon><Plus /></el-icon>\n-          生成体验卡\n-        </el-button>\n         <el-button type=\"primary\" @click=\"showBatchGenerateDialog\">\n           <el-icon><Plus /></el-icon>\n           批量生成等级卡\n         </el-button>\n"
                },
                {
                    "date": 1752324361805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,11 +13,20 @@\n     <el-card>\n       <el-table :data=\"cardList\" v-loading=\"loading\">\n         <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n         <el-table-column prop=\"card_number\" label=\"卡号\" width=\"200\" />\n-        <el-table-column prop=\"type_name\" label=\"类型\" width=\"120\" />\n+        <el-table-column label=\"类型\" width=\"120\">\n+          <template #default=\"{ row }\">\n+            <span>{{ row.icon }} {{ row.type_name }}</span>\n+          </template>\n+        </el-table-column>\n         <el-table-column prop=\"total_points\" label=\"总积分\" width=\"100\" />\n         <el-table-column prop=\"remaining_points\" label=\"剩余积分\" width=\"100\" />\n+        <el-table-column prop=\"price\" label=\"价格\" width=\"100\">\n+          <template #default=\"{ row }\">\n+            ¥{{ row.price }}\n+          </template>\n+        </el-table-column>\n         <el-table-column label=\"绑定状态\" width=\"150\">\n           <template #default=\"{ row }\">\n             <el-tag v-if=\"row.bound_username\" type=\"success\">\n               已绑定: {{ row.bound_username }}\n@@ -29,20 +38,27 @@\n           <template #default=\"{ row }\">\n             {{ formatDate(row.created_at) }}\n           </template>\n         </el-table-column>\n-        <el-table-column label=\"操作\" width=\"100\" fixed=\"right\">\n+        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n           <template #default=\"{ row }\">\n             <el-button\n+              type=\"text\"\n+              size=\"small\"\n+              @click=\"copyCardInfo(row)\"\n+            >\n+              <el-icon><DocumentCopy /></el-icon>\n+              复制卡密\n+            </el-button>\n+            <el-button\n               v-if=\"row.bound_username\"\n               type=\"text\"\n               size=\"small\"\n               class=\"danger\"\n               @click=\"handleUnbind(row)\"\n             >\n               解绑\n             </el-button>\n-            <span v-else class=\"no-action\">-</span>\n           </template>\n         </el-table-column>\n       </el-table>\n     </el-card>\n"
                },
                {
                    "date": 1752324377246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,24 +62,10 @@\n         </el-table-column>\n       </el-table>\n     </el-card>\n \n-    <!-- 生成体验卡对话框 -->\n-    <el-dialog v-model=\"generateDialogVisible\" title=\"生成体验卡\" width=\"500px\">\n-      <el-form :model=\"generateForm\" label-width=\"100px\">\n-        <el-form-item label=\"卡片数量\">\n-          <el-input-number v-model=\"generateForm.count\" :min=\"1\" :max=\"100\" />\n-        </el-form-item>\n-        <el-form-item label=\"积分数量\">\n-          <el-input-number v-model=\"generateForm.points\" :min=\"10\" :max=\"1000\" />\n-        </el-form-item>\n-      </el-form>\n-      <template #footer>\n-        <el-button @click=\"generateDialogVisible = false\">取消</el-button>\n-        <el-button type=\"primary\" @click=\"handleGenerate\">生成</el-button>\n-      </template>\n-    </el-dialog>\n \n+\n     <!-- 批量生成等级卡弹窗 -->\n     <el-dialog\n       v-model=\"batchGenerateDialogVisible\"\n       title=\"批量生成等级卡\"\n"
                },
                {
                    "date": 1752324404710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,13 +158,12 @@\n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n import { Plus, DocumentCopy } from '@element-plus/icons-vue'\n-import { getCardList, generateExperienceCards, unbindCard, getCardTypes, generateCards } from '@/api/cards'\n+import { getCardList, unbindCard, getCardTypes, generateCards } from '@/api/cards'\n \n const loading = ref(false)\n const cardList = ref([])\n-const generateDialogVisible = ref(false)\n \n // 批量生成相关\n const batchGenerateDialogVisible = ref(false)\n const cardTypes = ref([])\n"
                },
                {
                    "date": 1752324417901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,13 +175,8 @@\n const resultDialogTitle = ref('')\n const generatedCards = ref([])\n const selectedCardTypeName = ref('')\n \n-const generateForm = reactive({\n-  count: 10,\n-  points: 100\n-})\n-\n const batchGenerateForm = reactive({\n   cardTypeId: null,\n   count: 5\n })\n"
                },
                {
                    "date": 1752324436046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,10 +187,35 @@\n }\n \n \n \n-const showGenerateDialog = () => {\n-  generateDialogVisible.value = true\n+// 复制卡号卡密\n+const copyCardInfo = async (row) => {\n+  try {\n+    const copyText = `卡号: ${row.card_number}\\n卡密: ${row.card_password}\\n类型: ${row.type_name}\\n积分: ${row.remaining_points}/${row.total_points}\\n价格: ¥${row.price}`\n+\n+    // 使用现代浏览器的 Clipboard API\n+    if (navigator.clipboard && window.isSecureContext) {\n+      await navigator.clipboard.writeText(copyText)\n+    } else {\n+      // 降级方案：使用传统的 document.execCommand\n+      const textArea = document.createElement('textarea')\n+      textArea.value = copyText\n+      textArea.style.position = 'fixed'\n+      textArea.style.left = '-999999px'\n+      textArea.style.top = '-999999px'\n+      document.body.appendChild(textArea)\n+      textArea.focus()\n+      textArea.select()\n+      document.execCommand('copy')\n+      document.body.removeChild(textArea)\n+    }\n+\n+    ElMessage.success('卡号卡密已复制到剪贴板')\n+  } catch (error) {\n+    console.error('复制失败:', error)\n+    ElMessage.error('复制失败，请手动复制')\n+  }\n }\n \n // 显示批量生成弹窗\n const showBatchGenerateDialog = async () => {\n"
                },
                {
                    "date": 1752324460833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,25 +238,8 @@\n     cardTypesLoading.value = false\n   }\n }\n \n-const handleGenerate = async () => {\n-  try {\n-    const response = await generateExperienceCards({\n-      count: generateForm.count,\n-      points: generateForm.points\n-    })\n-    if (response.success) {\n-      ElMessage.success(`已生成 ${generateForm.count} 张体验卡`)\n-      generateDialogVisible.value = false\n-      loadCards()\n-    }\n-  } catch (error) {\n-    console.error('生成体验卡失败:', error)\n-    ElMessage.error('生成体验卡失败')\n-  }\n-}\n-\n // 批量生成等级卡\n const handleBatchGenerate = async () => {\n   if (!batchGenerateForm.cardTypeId) {\n     ElMessage.warning('请选择等级卡类型')\n"
                }
            ],
            "date": 1752314235686,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"cards-page\">\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">等级卡管理</h1>\n      <el-button type=\"primary\" @click=\"showGenerateDialog\">\n        <el-icon><Plus /></el-icon>\n        生成体验卡\n      </el-button>\n    </div>\n\n    <el-card>\n      <el-table :data=\"cardList\" v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n        <el-table-column prop=\"card_number\" label=\"卡号\" width=\"200\" />\n        <el-table-column prop=\"type_name\" label=\"类型\" width=\"120\" />\n        <el-table-column prop=\"total_points\" label=\"总积分\" width=\"100\" />\n        <el-table-column prop=\"remaining_points\" label=\"剩余积分\" width=\"100\" />\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"getStatusType(row.status)\">\n              {{ getStatusText(row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"created_at\" label=\"创建时间\" width=\"180\">\n          <template #default=\"{ row }\">\n            {{ formatDate(row.created_at) }}\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 生成体验卡对话框 -->\n    <el-dialog v-model=\"generateDialogVisible\" title=\"生成体验卡\" width=\"500px\">\n      <el-form :model=\"generateForm\" label-width=\"100px\">\n        <el-form-item label=\"卡片数量\">\n          <el-input-number v-model=\"generateForm.count\" :min=\"1\" :max=\"100\" />\n        </el-form-item>\n        <el-form-item label=\"积分数量\">\n          <el-input-number v-model=\"generateForm.points\" :min=\"10\" :max=\"1000\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"generateDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleGenerate\">生成</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { getCardList, generateExperienceCards } from '@/api/cards'\n\nconst loading = ref(false)\nconst cardList = ref([])\nconst generateDialogVisible = ref(false)\n\nconst generateForm = reactive({\n  count: 10,\n  points: 100\n})\n\nconst formatDate = (date) => {\n  if (!date) return ''\n  return new Date(date).toLocaleString()\n}\n\nconst getStatusType = (status) => {\n  const types = {\n    'unused': 'success',\n    'used': 'info',\n    'bound': 'warning'\n  }\n  return types[status] || 'info'\n}\n\nconst getStatusText = (status) => {\n  const texts = {\n    'unused': '未使用',\n    'used': '已使用',\n    'bound': '已绑定'\n  }\n  return texts[status] || status\n}\n\nconst showGenerateDialog = () => {\n  generateDialogVisible.value = true\n}\n\nconst handleGenerate = () => {\n  ElMessage.success(`已生成 ${generateForm.count} 张体验卡`)\n  generateDialogVisible.value = false\n  loadCards()\n}\n\nconst loadCards = () => {\n  // 模拟数据\n  cardList.value = [\n    {\n      id: 1,\n      card_number: 'EXP001',\n      type_name: '体验卡',\n      total_points: 100,\n      remaining_points: 100,\n      status: 'unused',\n      created_at: new Date().toISOString()\n    }\n  ]\n}\n\nonMounted(() => {\n  loadCards()\n})\n</script>\n\n<style scoped>\n.cards-page {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0;\n}\n</style>\n"
        }
    ]
}
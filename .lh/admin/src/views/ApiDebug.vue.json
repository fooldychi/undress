{
    "sourceFile": "admin/src/views/ApiDebug.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752405758207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752405786690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,8 +169,60 @@\n     testing.value = false\n   }\n }\n \n+// 测试代理\n+const testProxy = async () => {\n+  testing.value = true\n+  try {\n+    console.log('🔗 测试代理配置...')\n+\n+    // 测试多个端点\n+    const endpoints = [\n+      '/api/health',\n+      '/api/admin-auth/login',\n+      '/api/admin/config'\n+    ]\n+\n+    const results = []\n+\n+    for (const endpoint of endpoints) {\n+      try {\n+        console.log(`🧪 测试端点: ${endpoint}`)\n+\n+        const response = await fetch(endpoint, {\n+          method: 'GET',\n+          headers: {\n+            'Content-Type': 'application/json'\n+          }\n+        })\n+\n+        console.log(`📊 ${endpoint} 响应状态:`, response.status)\n+\n+        results.push({\n+          endpoint,\n+          status: response.status,\n+          ok: response.ok,\n+          url: response.url\n+        })\n+      } catch (error) {\n+        console.error(`❌ ${endpoint} 测试失败:`, error)\n+        results.push({\n+          endpoint,\n+          error: error.message\n+        })\n+      }\n+    }\n+\n+    testResult.value = { type: 'proxy', success: true, results }\n+  } catch (error) {\n+    console.error('❌ 代理测试失败:', error)\n+    testResult.value = { type: 'proxy', success: false, error: error.message, details: error }\n+  } finally {\n+    testing.value = false\n+  }\n+}\n+\n onMounted(() => {\n   checkAuth()\n   baseURL.value = request.defaults.baseURL || '未设置'\n })\n"
                }
            ],
            "date": 1752405758207,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"api-debug-page\">\n    <h1>API调试页面</h1>\n\n    <el-card style=\"margin-bottom: 20px;\">\n      <template #header>\n        <span>认证状态</span>\n      </template>\n      <div>\n        <p><strong>Token:</strong> {{ authToken || '未找到' }}</p>\n        <p><strong>用户:</strong> {{ userInfo ? JSON.stringify(userInfo) : '未登录' }}</p>\n        <el-button @click=\"checkAuth\">刷新认证状态</el-button>\n        <el-button @click=\"forceLogin\" type=\"primary\">强制登录</el-button>\n      </div>\n    </el-card>\n\n    <el-card style=\"margin-bottom: 20px;\">\n      <template #header>\n        <span>API测试</span>\n      </template>\n      <div>\n        <el-button @click=\"testGetConfig\" :loading=\"testing\">测试获取配置</el-button>\n        <el-button @click=\"testSaveConfig\" :loading=\"testing\">测试保存配置</el-button>\n        <el-button @click=\"testDirectFetch\" :loading=\"testing\">直接Fetch测试</el-button>\n        <el-button @click=\"testProxy\" :loading=\"testing\">测试代理</el-button>\n      </div>\n\n      <div v-if=\"testResult\" style=\"margin-top: 20px;\">\n        <h3>测试结果:</h3>\n        <pre style=\"background: #f5f5f5; padding: 10px; border-radius: 4px; overflow-x: auto;\">{{ JSON.stringify(testResult, null, 2) }}</pre>\n      </div>\n    </el-card>\n\n    <el-card>\n      <template #header>\n        <span>网络信息</span>\n      </template>\n      <div>\n        <p><strong>当前URL:</strong> {{ window.location.href }}</p>\n        <p><strong>Base URL:</strong> {{ baseURL }}</p>\n        <p><strong>API Base:</strong> /api</p>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { getToken, getUser, setToken, setUser } from '@/utils/auth'\nimport { getSystemConfig, saveSystemConfig } from '@/api/config'\nimport request from '@/utils/request'\n\nconst authToken = ref('')\nconst userInfo = ref(null)\nconst testing = ref(false)\nconst testResult = ref(null)\nconst baseURL = ref('')\n\n// 检查认证状态\nconst checkAuth = () => {\n  authToken.value = getToken()\n  userInfo.value = getUser()\n  console.log('🔑 认证状态:', { token: authToken.value, user: userInfo.value })\n}\n\n// 强制登录\nconst forceLogin = async () => {\n  try {\n    console.log('🔐 强制登录...')\n    const response = await request({\n      url: '/admin-auth/login',\n      method: 'post',\n      data: {\n        username: 'admin',\n        password: 'admin123456'\n      }\n    })\n\n    if (response.success) {\n      setToken(response.data.token)\n      setUser(response.data.admin)\n      checkAuth()\n      testResult.value = { type: 'login', success: true, data: response }\n    } else {\n      testResult.value = { type: 'login', success: false, error: response.message }\n    }\n  } catch (error) {\n    console.error('❌ 强制登录失败:', error)\n    testResult.value = { type: 'login', success: false, error: error.message, details: error }\n  }\n}\n\n// 测试获取配置\nconst testGetConfig = async () => {\n  testing.value = true\n  try {\n    console.log('🔍 测试获取配置...')\n    const response = await getSystemConfig()\n    console.log('📊 获取配置响应:', response)\n    testResult.value = { type: 'getConfig', success: true, data: response }\n  } catch (error) {\n    console.error('❌ 获取配置失败:', error)\n    testResult.value = { type: 'getConfig', success: false, error: error.message, details: error }\n  } finally {\n    testing.value = false\n  }\n}\n\n// 测试保存配置\nconst testSaveConfig = async () => {\n  testing.value = true\n  try {\n    console.log('💾 测试保存配置...')\n\n    const configs = [\n      {\n        config_key: 'comfyui.server_url',\n        config_value: 'https://l6ur4u3zbw-8188.cnb.run/',\n        config_type: 'string',\n        config_group: 'comfyui'\n      }\n    ]\n\n    console.log('📋 要保存的配置:', configs)\n    const response = await saveSystemConfig(configs)\n    console.log('📊 保存配置响应:', response)\n    testResult.value = { type: 'saveConfig', success: true, data: response }\n  } catch (error) {\n    console.error('❌ 保存配置失败:', error)\n    testResult.value = { type: 'saveConfig', success: false, error: error.message, details: error }\n  } finally {\n    testing.value = false\n  }\n}\n\n// 直接Fetch测试\nconst testDirectFetch = async () => {\n  testing.value = true\n  try {\n    console.log('🧪 直接Fetch测试...')\n\n    const token = getToken()\n    console.log('🔑 使用Token:', token)\n\n    const response = await fetch('/api/admin/config', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    })\n\n    console.log('📊 Fetch响应状态:', response.status)\n    console.log('📊 Fetch响应头:', Object.fromEntries(response.headers.entries()))\n\n    if (response.ok) {\n      const data = await response.json()\n      console.log('📋 Fetch响应数据:', data)\n      testResult.value = { type: 'directFetch', success: true, status: response.status, data }\n    } else {\n      const errorText = await response.text()\n      console.log('❌ Fetch响应错误:', errorText)\n      testResult.value = { type: 'directFetch', success: false, status: response.status, error: errorText }\n    }\n  } catch (error) {\n    console.error('❌ 直接Fetch失败:', error)\n    testResult.value = { type: 'directFetch', success: false, error: error.message, details: error }\n  } finally {\n    testing.value = false\n  }\n}\n\nonMounted(() => {\n  checkAuth()\n  baseURL.value = request.defaults.baseURL || '未设置'\n})\n</script>\n\n<style scoped>\n.api-debug-page {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\npre {\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  max-height: 400px;\n  overflow-y: auto;\n}\n</style>\n"
        }
    ]
}
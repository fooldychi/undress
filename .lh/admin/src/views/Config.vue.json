{
    "sourceFile": "admin/src/views/Config.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1752325471997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752325524355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,23 +121,196 @@\n   </div>\n </template>\n \n <script setup>\n-import { reactive } from 'vue'\n-import { ElMessage } from 'element-plus'\n+import { ref, reactive, onMounted } from 'vue'\n+import { ElMessage, ElMessageBox } from 'element-plus'\n+import { Check, Connection } from '@element-plus/icons-vue'\n+import { getSystemConfig, saveSystemConfig } from '@/api/config'\n \n+const loading = ref(false)\n+const saving = ref(false)\n+const testing = ref(false)\n+const configForm = ref(null)\n+const connectionStatus = ref(null)\n+\n+// 配置数据\n const config = reactive({\n-  systemName: 'iComfy AI图像处理平台',\n-  systemDesc: '专业的AI图像处理服务平台',\n-  defaultPoints: 100,\n-  faceSwapEnabled: true,\n-  clothingSwapEnabled: true,\n-  textToImageEnabled: true\n+  serverUrl: '',\n+  backupServers: '',\n+  requestTimeout: 30000,\n+  healthCheckTimeout: 10000,\n+  autoSwitch: true,\n+  clientId: '',\n+  maxRetries: 3\n })\n \n-const saveConfig = () => {\n-  ElMessage.success('配置保存成功')\n+// 表单验证规则\n+const rules = {\n+  serverUrl: [\n+    { required: true, message: '请输入主服务器地址', trigger: 'blur' },\n+    {\n+      pattern: /^https?:\\/\\/.+/,\n+      message: '请输入有效的URL地址',\n+      trigger: 'blur'\n+    }\n+  ],\n+  requestTimeout: [\n+    { required: true, message: '请设置请求超时时间', trigger: 'blur' },\n+    {\n+      type: 'number',\n+      min: 5000,\n+      max: 600000,\n+      message: '请求超时时间应在5000-600000毫秒之间',\n+      trigger: 'blur'\n+    }\n+  ],\n+  healthCheckTimeout: [\n+    { required: true, message: '请设置健康检查超时时间', trigger: 'blur' },\n+    {\n+      type: 'number',\n+      min: 1000,\n+      max: 30000,\n+      message: '健康检查超时时间应在1000-30000毫秒之间',\n+      trigger: 'blur'\n+    }\n+  ]\n }\n+\n+// 加载配置\n+const loadConfig = async () => {\n+  loading.value = true\n+  try {\n+    const response = await getSystemConfig()\n+    if (response.success && response.data) {\n+      const configData = response.data\n+\n+      // 映射配置数据到表单\n+      config.serverUrl = configData['comfyui.server_url'] || ''\n+      config.backupServers = configData['comfyui.backup_servers'] || ''\n+      config.requestTimeout = parseInt(configData['comfyui.request_timeout']) || 30000\n+      config.healthCheckTimeout = parseInt(configData['comfyui.health_check_timeout']) || 10000\n+      config.autoSwitch = configData['comfyui.auto_switch'] === 'true' || configData['comfyui.auto_switch'] === true\n+      config.clientId = configData['comfyui.client_id'] || ''\n+      config.maxRetries = parseInt(configData['comfyui.max_retries']) || 3\n+\n+      ElMessage.success('配置加载成功')\n+    }\n+  } catch (error) {\n+    console.error('加载配置失败:', error)\n+    ElMessage.error('加载配置失败')\n+  } finally {\n+    loading.value = false\n+  }\n+}\n+\n+// 保存配置\n+const saveConfig = async () => {\n+  if (!configForm.value) return\n+\n+  try {\n+    await configForm.value.validate()\n+  } catch (error) {\n+    ElMessage.warning('请检查表单输入')\n+    return\n+  }\n+\n+  saving.value = true\n+  try {\n+    // 构建配置数据\n+    const configs = [\n+      {\n+        config_key: 'comfyui.server_url',\n+        config_value: config.serverUrl,\n+        config_type: 'string',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.backup_servers',\n+        config_value: config.backupServers,\n+        config_type: 'string',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.request_timeout',\n+        config_value: config.requestTimeout.toString(),\n+        config_type: 'number',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.health_check_timeout',\n+        config_value: config.healthCheckTimeout.toString(),\n+        config_type: 'number',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.auto_switch',\n+        config_value: config.autoSwitch.toString(),\n+        config_type: 'boolean',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.client_id',\n+        config_value: config.clientId,\n+        config_type: 'string',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.max_retries',\n+        config_value: config.maxRetries.toString(),\n+        config_type: 'number',\n+        config_group: 'comfyui'\n+      }\n+    ]\n+\n+    const response = await saveSystemConfig(configs)\n+    if (response.success) {\n+      ElMessage.success('配置保存成功')\n+      connectionStatus.value = null // 重置连接状态\n+    } else {\n+      ElMessage.error(response.message || '配置保存失败')\n+    }\n+  } catch (error) {\n+    console.error('保存配置失败:', error)\n+    ElMessage.error('保存配置失败')\n+  } finally {\n+    saving.value = false\n+  }\n+}\n+\n+// 测试连接\n+const testConnection = async () => {\n+  if (!config.serverUrl) {\n+    ElMessage.warning('请先输入主服务器地址')\n+    return\n+  }\n+\n+  testing.value = true\n+  connectionStatus.value = { type: 'warning', text: '测试中...' }\n+\n+  try {\n+    // 模拟测试连接（实际应该调用后端API）\n+    await new Promise(resolve => setTimeout(resolve, 2000))\n+\n+    // 这里应该调用实际的测试连接API\n+    // const response = await testComfyUIConnection(config.serverUrl)\n+\n+    // 模拟成功结果\n+    connectionStatus.value = { type: 'success', text: '连接正常' }\n+    ElMessage.success('ComfyUI服务器连接测试成功')\n+  } catch (error) {\n+    console.error('连接测试失败:', error)\n+    connectionStatus.value = { type: 'danger', text: '连接失败' }\n+    ElMessage.error('ComfyUI服务器连接测试失败')\n+  } finally {\n+    testing.value = false\n+  }\n+}\n+\n+// 页面加载时获取配置\n+onMounted(() => {\n+  loadConfig()\n+})\n </script>\n \n <style scoped>\n .config-page {\n"
                },
                {
                    "date": 1752325551808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,8 +315,9 @@\n <style scoped>\n .config-page {\n   max-width: 1200px;\n   margin: 0 auto;\n+  padding: 20px;\n }\n \n .page-header {\n   display: flex;\n@@ -324,11 +325,50 @@\n   align-items: center;\n   margin-bottom: 20px;\n }\n \n+.header-actions {\n+  display: flex;\n+  gap: 12px;\n+}\n+\n .page-title {\n   font-size: 24px;\n   font-weight: 600;\n   color: #303133;\n   margin: 0;\n }\n+\n+.card-header {\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+  width: 100%;\n+}\n+\n+.form-tip {\n+  font-size: 12px;\n+  color: #909399;\n+  margin-top: 4px;\n+  line-height: 1.4;\n+}\n+\n+:deep(.el-form-item__label) {\n+  font-weight: 500;\n+}\n+\n+:deep(.el-input-group__prepend) {\n+  background-color: #f5f7fa;\n+  color: #909399;\n+  border-color: #dcdfe6;\n+}\n+\n+:deep(.el-divider__text) {\n+  font-weight: 500;\n+  color: #606266;\n+}\n+\n+.el-card {\n+  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n+  border-radius: 8px;\n+}\n </style>\n"
                },
                {
                    "date": 1752325660995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n import { Check, Connection } from '@element-plus/icons-vue'\n-import { getSystemConfig, saveSystemConfig } from '@/api/config'\n+import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n \n const loading = ref(false)\n const saving = ref(false)\n const testing = ref(false)\n"
                },
                {
                    "date": 1752325684460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -287,17 +287,17 @@\n   testing.value = true\n   connectionStatus.value = { type: 'warning', text: '测试中...' }\n \n   try {\n-    // 模拟测试连接（实际应该调用后端API）\n-    await new Promise(resolve => setTimeout(resolve, 2000))\n+    const response = await testComfyUIConnection(config.serverUrl, config.healthCheckTimeout)\n \n-    // 这里应该调用实际的测试连接API\n-    // const response = await testComfyUIConnection(config.serverUrl)\n-\n-    // 模拟成功结果\n-    connectionStatus.value = { type: 'success', text: '连接正常' }\n-    ElMessage.success('ComfyUI服务器连接测试成功')\n+    if (response.success) {\n+      connectionStatus.value = { type: 'success', text: '连接正常' }\n+      ElMessage.success(response.message || 'ComfyUI服务器连接测试成功')\n+    } else {\n+      connectionStatus.value = { type: 'danger', text: '连接失败' }\n+      ElMessage.error(response.message || 'ComfyUI服务器连接测试失败')\n+    }\n   } catch (error) {\n     console.error('连接测试失败:', error)\n     connectionStatus.value = { type: 'danger', text: '连接失败' }\n     ElMessage.error('ComfyUI服务器连接测试失败')\n"
                }
            ],
            "date": 1752325471997,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"config-page\">\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">系统配置</h1>\n      <div class=\"header-actions\">\n        <el-button @click=\"testConnection\" :loading=\"testing\">\n          <el-icon><Connection /></el-icon>\n          测试连接\n        </el-button>\n        <el-button type=\"primary\" @click=\"saveConfig\" :loading=\"saving\">\n          <el-icon><Check /></el-icon>\n          保存配置\n        </el-button>\n      </div>\n    </div>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>🖥️ ComfyUI服务器配置</span>\n          <el-tag v-if=\"connectionStatus\" :type=\"connectionStatus.type\" size=\"small\">\n            {{ connectionStatus.text }}\n          </el-tag>\n        </div>\n      </template>\n\n      <el-form\n        :model=\"config\"\n        :rules=\"rules\"\n        ref=\"configForm\"\n        label-width=\"180px\"\n        v-loading=\"loading\"\n      >\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"主服务器地址\" prop=\"serverUrl\" required>\n              <el-input\n                v-model=\"config.serverUrl\"\n                placeholder=\"https://your-comfyui-server.com\"\n                clearable\n              >\n                <template #prepend>HTTPS://</template>\n              </el-input>\n              <div class=\"form-tip\">ComfyUI主服务器的完整地址</div>\n            </el-form-item>\n\n            <el-form-item label=\"备用服务器地址\" prop=\"backupServers\">\n              <el-input\n                v-model=\"config.backupServers\"\n                type=\"textarea\"\n                :rows=\"3\"\n                placeholder=\"https://backup1.example.com&#10;https://backup2.example.com\"\n                clearable\n              />\n              <div class=\"form-tip\">每行一个备用服务器地址，主服务器不可用时自动切换</div>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"请求超时时间\" prop=\"requestTimeout\" required>\n              <el-input-number\n                v-model=\"config.requestTimeout\"\n                :min=\"5000\"\n                :max=\"600000\"\n                :step=\"1000\"\n                style=\"width: 100%\"\n              />\n              <div class=\"form-tip\">单位：毫秒，建议设置为30000-300000</div>\n            </el-form-item>\n\n            <el-form-item label=\"健康检查超时时间\" prop=\"healthCheckTimeout\" required>\n              <el-input-number\n                v-model=\"config.healthCheckTimeout\"\n                :min=\"1000\"\n                :max=\"30000\"\n                :step=\"1000\"\n                style=\"width: 100%\"\n              />\n              <div class=\"form-tip\">单位：毫秒，建议设置为5000-15000</div>\n            </el-form-item>\n\n            <el-form-item label=\"自动切换备用服务器\">\n              <el-switch\n                v-model=\"config.autoSwitch\"\n                active-text=\"启用\"\n                inactive-text=\"禁用\"\n              />\n              <div class=\"form-tip\">主服务器故障时自动切换到备用服务器</div>\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n        <el-divider content-position=\"left\">高级设置</el-divider>\n\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"客户端ID\" prop=\"clientId\">\n              <el-input\n                v-model=\"config.clientId\"\n                placeholder=\"your-comfyui-client-id\"\n                clearable\n              />\n              <div class=\"form-tip\">ComfyUI客户端标识符（可选）</div>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"最大重试次数\" prop=\"maxRetries\">\n              <el-input-number\n                v-model=\"config.maxRetries\"\n                :min=\"0\"\n                :max=\"10\"\n                style=\"width: 100%\"\n              />\n              <div class=\"form-tip\">请求失败时的最大重试次数</div>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { reactive } from 'vue'\nimport { ElMessage } from 'element-plus'\n\nconst config = reactive({\n  systemName: 'iComfy AI图像处理平台',\n  systemDesc: '专业的AI图像处理服务平台',\n  defaultPoints: 100,\n  faceSwapEnabled: true,\n  clothingSwapEnabled: true,\n  textToImageEnabled: true\n})\n\nconst saveConfig = () => {\n  ElMessage.success('配置保存成功')\n}\n</script>\n\n<style scoped>\n.config-page {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0;\n}\n</style>\n"
        }
    ]
}
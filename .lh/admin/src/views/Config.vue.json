{
    "sourceFile": "admin/src/views/Config.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 38,
            "patches": [
                {
                    "date": 1752325471997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752325524355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,23 +121,196 @@\n   </div>\n </template>\n \n <script setup>\n-import { reactive } from 'vue'\n-import { ElMessage } from 'element-plus'\n+import { ref, reactive, onMounted } from 'vue'\n+import { ElMessage, ElMessageBox } from 'element-plus'\n+import { Check, Connection } from '@element-plus/icons-vue'\n+import { getSystemConfig, saveSystemConfig } from '@/api/config'\n \n+const loading = ref(false)\n+const saving = ref(false)\n+const testing = ref(false)\n+const configForm = ref(null)\n+const connectionStatus = ref(null)\n+\n+// 配置数据\n const config = reactive({\n-  systemName: 'iComfy AI图像处理平台',\n-  systemDesc: '专业的AI图像处理服务平台',\n-  defaultPoints: 100,\n-  faceSwapEnabled: true,\n-  clothingSwapEnabled: true,\n-  textToImageEnabled: true\n+  serverUrl: '',\n+  backupServers: '',\n+  requestTimeout: 30000,\n+  healthCheckTimeout: 10000,\n+  autoSwitch: true,\n+  clientId: '',\n+  maxRetries: 3\n })\n \n-const saveConfig = () => {\n-  ElMessage.success('配置保存成功')\n+// 表单验证规则\n+const rules = {\n+  serverUrl: [\n+    { required: true, message: '请输入主服务器地址', trigger: 'blur' },\n+    {\n+      pattern: /^https?:\\/\\/.+/,\n+      message: '请输入有效的URL地址',\n+      trigger: 'blur'\n+    }\n+  ],\n+  requestTimeout: [\n+    { required: true, message: '请设置请求超时时间', trigger: 'blur' },\n+    {\n+      type: 'number',\n+      min: 5000,\n+      max: 600000,\n+      message: '请求超时时间应在5000-600000毫秒之间',\n+      trigger: 'blur'\n+    }\n+  ],\n+  healthCheckTimeout: [\n+    { required: true, message: '请设置健康检查超时时间', trigger: 'blur' },\n+    {\n+      type: 'number',\n+      min: 1000,\n+      max: 30000,\n+      message: '健康检查超时时间应在1000-30000毫秒之间',\n+      trigger: 'blur'\n+    }\n+  ]\n }\n+\n+// 加载配置\n+const loadConfig = async () => {\n+  loading.value = true\n+  try {\n+    const response = await getSystemConfig()\n+    if (response.success && response.data) {\n+      const configData = response.data\n+\n+      // 映射配置数据到表单\n+      config.serverUrl = configData['comfyui.server_url'] || ''\n+      config.backupServers = configData['comfyui.backup_servers'] || ''\n+      config.requestTimeout = parseInt(configData['comfyui.request_timeout']) || 30000\n+      config.healthCheckTimeout = parseInt(configData['comfyui.health_check_timeout']) || 10000\n+      config.autoSwitch = configData['comfyui.auto_switch'] === 'true' || configData['comfyui.auto_switch'] === true\n+      config.clientId = configData['comfyui.client_id'] || ''\n+      config.maxRetries = parseInt(configData['comfyui.max_retries']) || 3\n+\n+      ElMessage.success('配置加载成功')\n+    }\n+  } catch (error) {\n+    console.error('加载配置失败:', error)\n+    ElMessage.error('加载配置失败')\n+  } finally {\n+    loading.value = false\n+  }\n+}\n+\n+// 保存配置\n+const saveConfig = async () => {\n+  if (!configForm.value) return\n+\n+  try {\n+    await configForm.value.validate()\n+  } catch (error) {\n+    ElMessage.warning('请检查表单输入')\n+    return\n+  }\n+\n+  saving.value = true\n+  try {\n+    // 构建配置数据\n+    const configs = [\n+      {\n+        config_key: 'comfyui.server_url',\n+        config_value: config.serverUrl,\n+        config_type: 'string',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.backup_servers',\n+        config_value: config.backupServers,\n+        config_type: 'string',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.request_timeout',\n+        config_value: config.requestTimeout.toString(),\n+        config_type: 'number',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.health_check_timeout',\n+        config_value: config.healthCheckTimeout.toString(),\n+        config_type: 'number',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.auto_switch',\n+        config_value: config.autoSwitch.toString(),\n+        config_type: 'boolean',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.client_id',\n+        config_value: config.clientId,\n+        config_type: 'string',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.max_retries',\n+        config_value: config.maxRetries.toString(),\n+        config_type: 'number',\n+        config_group: 'comfyui'\n+      }\n+    ]\n+\n+    const response = await saveSystemConfig(configs)\n+    if (response.success) {\n+      ElMessage.success('配置保存成功')\n+      connectionStatus.value = null // 重置连接状态\n+    } else {\n+      ElMessage.error(response.message || '配置保存失败')\n+    }\n+  } catch (error) {\n+    console.error('保存配置失败:', error)\n+    ElMessage.error('保存配置失败')\n+  } finally {\n+    saving.value = false\n+  }\n+}\n+\n+// 测试连接\n+const testConnection = async () => {\n+  if (!config.serverUrl) {\n+    ElMessage.warning('请先输入主服务器地址')\n+    return\n+  }\n+\n+  testing.value = true\n+  connectionStatus.value = { type: 'warning', text: '测试中...' }\n+\n+  try {\n+    // 模拟测试连接（实际应该调用后端API）\n+    await new Promise(resolve => setTimeout(resolve, 2000))\n+\n+    // 这里应该调用实际的测试连接API\n+    // const response = await testComfyUIConnection(config.serverUrl)\n+\n+    // 模拟成功结果\n+    connectionStatus.value = { type: 'success', text: '连接正常' }\n+    ElMessage.success('ComfyUI服务器连接测试成功')\n+  } catch (error) {\n+    console.error('连接测试失败:', error)\n+    connectionStatus.value = { type: 'danger', text: '连接失败' }\n+    ElMessage.error('ComfyUI服务器连接测试失败')\n+  } finally {\n+    testing.value = false\n+  }\n+}\n+\n+// 页面加载时获取配置\n+onMounted(() => {\n+  loadConfig()\n+})\n </script>\n \n <style scoped>\n .config-page {\n"
                },
                {
                    "date": 1752325551808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,8 +315,9 @@\n <style scoped>\n .config-page {\n   max-width: 1200px;\n   margin: 0 auto;\n+  padding: 20px;\n }\n \n .page-header {\n   display: flex;\n@@ -324,11 +325,50 @@\n   align-items: center;\n   margin-bottom: 20px;\n }\n \n+.header-actions {\n+  display: flex;\n+  gap: 12px;\n+}\n+\n .page-title {\n   font-size: 24px;\n   font-weight: 600;\n   color: #303133;\n   margin: 0;\n }\n+\n+.card-header {\n+  display: flex;\n+  justify-content: space-between;\n+  align-items: center;\n+  width: 100%;\n+}\n+\n+.form-tip {\n+  font-size: 12px;\n+  color: #909399;\n+  margin-top: 4px;\n+  line-height: 1.4;\n+}\n+\n+:deep(.el-form-item__label) {\n+  font-weight: 500;\n+}\n+\n+:deep(.el-input-group__prepend) {\n+  background-color: #f5f7fa;\n+  color: #909399;\n+  border-color: #dcdfe6;\n+}\n+\n+:deep(.el-divider__text) {\n+  font-weight: 500;\n+  color: #606266;\n+}\n+\n+.el-card {\n+  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n+  border-radius: 8px;\n+}\n </style>\n"
                },
                {
                    "date": 1752325660995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n import { Check, Connection } from '@element-plus/icons-vue'\n-import { getSystemConfig, saveSystemConfig } from '@/api/config'\n+import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n \n const loading = ref(false)\n const saving = ref(false)\n const testing = ref(false)\n"
                },
                {
                    "date": 1752325684460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -287,17 +287,17 @@\n   testing.value = true\n   connectionStatus.value = { type: 'warning', text: '测试中...' }\n \n   try {\n-    // 模拟测试连接（实际应该调用后端API）\n-    await new Promise(resolve => setTimeout(resolve, 2000))\n+    const response = await testComfyUIConnection(config.serverUrl, config.healthCheckTimeout)\n \n-    // 这里应该调用实际的测试连接API\n-    // const response = await testComfyUIConnection(config.serverUrl)\n-\n-    // 模拟成功结果\n-    connectionStatus.value = { type: 'success', text: '连接正常' }\n-    ElMessage.success('ComfyUI服务器连接测试成功')\n+    if (response.success) {\n+      connectionStatus.value = { type: 'success', text: '连接正常' }\n+      ElMessage.success(response.message || 'ComfyUI服务器连接测试成功')\n+    } else {\n+      connectionStatus.value = { type: 'danger', text: '连接失败' }\n+      ElMessage.error(response.message || 'ComfyUI服务器连接测试失败')\n+    }\n   } catch (error) {\n     console.error('连接测试失败:', error)\n     connectionStatus.value = { type: 'danger', text: '连接失败' }\n     ElMessage.error('ComfyUI服务器连接测试失败')\n"
                },
                {
                    "date": 1752402399700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,25 +180,56 @@\n const loadConfig = async () => {\n   loading.value = true\n   try {\n     const response = await getSystemConfig()\n+    console.log('🔍 API响应:', response)\n+\n     if (response.success && response.data) {\n       const configData = response.data\n+      console.log('📊 配置数据:', configData)\n \n+      // 将分组格式的配置数据转换为扁平的键值对格式\n+      const flatConfig = {}\n+\n+      // 遍历所有配置分组\n+      Object.keys(configData).forEach(groupName => {\n+        const groupConfigs = configData[groupName]\n+        if (Array.isArray(groupConfigs)) {\n+          groupConfigs.forEach(item => {\n+            flatConfig[item.config_key] = item.config_value\n+          })\n+        }\n+      })\n+\n+      console.log('🔧 转换后的配置:', flatConfig)\n+\n       // 映射配置数据到表单\n-      config.serverUrl = configData['comfyui.server_url'] || ''\n-      config.backupServers = configData['comfyui.backup_servers'] || ''\n-      config.requestTimeout = parseInt(configData['comfyui.request_timeout']) || 30000\n-      config.healthCheckTimeout = parseInt(configData['comfyui.health_check_timeout']) || 10000\n-      config.autoSwitch = configData['comfyui.auto_switch'] === 'true' || configData['comfyui.auto_switch'] === true\n-      config.clientId = configData['comfyui.client_id'] || ''\n-      config.maxRetries = parseInt(configData['comfyui.max_retries']) || 3\n+      config.serverUrl = flatConfig['comfyui.server_url'] || ''\n+      config.backupServers = flatConfig['comfyui.backup_servers'] || ''\n+      config.requestTimeout = parseInt(flatConfig['comfyui.request_timeout']) || 30000\n+      config.healthCheckTimeout = parseInt(flatConfig['comfyui.health_check_timeout']) || 10000\n+      config.autoSwitch = flatConfig['comfyui.auto_switch'] === 'true' || flatConfig['comfyui.auto_switch'] === true\n+      config.clientId = flatConfig['comfyui.client_id'] || ''\n+      config.maxRetries = parseInt(flatConfig['comfyui.max_retries']) || 3\n \n+      console.log('✅ 表单配置已更新:', {\n+        serverUrl: config.serverUrl,\n+        backupServers: config.backupServers,\n+        requestTimeout: config.requestTimeout,\n+        healthCheckTimeout: config.healthCheckTimeout,\n+        autoSwitch: config.autoSwitch,\n+        clientId: config.clientId,\n+        maxRetries: config.maxRetries\n+      })\n+\n       ElMessage.success('配置加载成功')\n+    } else {\n+      console.error('❌ API响应格式错误:', response)\n+      ElMessage.error('配置数据格式错误')\n     }\n   } catch (error) {\n-    console.error('加载配置失败:', error)\n-    ElMessage.error('加载配置失败')\n+    console.error('❌ 加载配置失败:', error)\n+    ElMessage.error('加载配置失败: ' + (error.message || '未知错误'))\n   } finally {\n     loading.value = false\n   }\n }\n"
                },
                {
                    "date": 1752403004590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,9 +338,14 @@\n }\n \n // 页面加载时获取配置\n onMounted(() => {\n-  loadConfig()\n+  console.log('🔄 Config页面已挂载，开始加载配置...')\n+\n+  // 延迟一点时间确保认证状态已经设置\n+  setTimeout(() => {\n+    loadConfig()\n+  }, 500)\n })\n </script>\n \n <style scoped>\n"
                },
                {
                    "date": 1752403021511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,12 @@\n   <div class=\"config-page\">\n     <div class=\"page-header\">\n       <h1 class=\"page-title\">系统配置</h1>\n       <div class=\"header-actions\">\n+        <el-button @click=\"loadConfig\" :loading=\"loading\">\n+          <el-icon><Refresh /></el-icon>\n+          刷新配置\n+        </el-button>\n         <el-button @click=\"testConnection\" :loading=\"testing\">\n           <el-icon><Connection /></el-icon>\n           测试连接\n         </el-button>\n"
                },
                {
                    "date": 1752403046730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n \n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n-import { Check, Connection } from '@element-plus/icons-vue'\n+import { Check, Connection, Refresh } from '@element-plus/icons-vue'\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n \n const loading = ref(false)\n const saving = ref(false)\n"
                },
                {
                    "date": 1752403740729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,8 @@\n   <div class=\"config-page\">\n     <div class=\"page-header\">\n       <h1 class=\"page-title\">系统配置</h1>\n       <div class=\"header-actions\">\n-        <el-button @click=\"loadConfig\" :loading=\"loading\">\n-          <el-icon><Refresh /></el-icon>\n-          刷新配置\n-        </el-button>\n         <el-button @click=\"testConnection\" :loading=\"testing\">\n           <el-icon><Connection /></el-icon>\n           测试连接\n         </el-button>\n@@ -127,9 +123,9 @@\n \n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n-import { Check, Connection, Refresh } from '@element-plus/icons-vue'\n+import { Check, Connection } from '@element-plus/icons-vue'\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n \n const loading = ref(false)\n const saving = ref(false)\n@@ -184,56 +180,25 @@\n const loadConfig = async () => {\n   loading.value = true\n   try {\n     const response = await getSystemConfig()\n-    console.log('🔍 API响应:', response)\n-\n     if (response.success && response.data) {\n       const configData = response.data\n-      console.log('📊 配置数据:', configData)\n \n-      // 将分组格式的配置数据转换为扁平的键值对格式\n-      const flatConfig = {}\n-\n-      // 遍历所有配置分组\n-      Object.keys(configData).forEach(groupName => {\n-        const groupConfigs = configData[groupName]\n-        if (Array.isArray(groupConfigs)) {\n-          groupConfigs.forEach(item => {\n-            flatConfig[item.config_key] = item.config_value\n-          })\n-        }\n-      })\n-\n-      console.log('🔧 转换后的配置:', flatConfig)\n-\n       // 映射配置数据到表单\n-      config.serverUrl = flatConfig['comfyui.server_url'] || ''\n-      config.backupServers = flatConfig['comfyui.backup_servers'] || ''\n-      config.requestTimeout = parseInt(flatConfig['comfyui.request_timeout']) || 30000\n-      config.healthCheckTimeout = parseInt(flatConfig['comfyui.health_check_timeout']) || 10000\n-      config.autoSwitch = flatConfig['comfyui.auto_switch'] === 'true' || flatConfig['comfyui.auto_switch'] === true\n-      config.clientId = flatConfig['comfyui.client_id'] || ''\n-      config.maxRetries = parseInt(flatConfig['comfyui.max_retries']) || 3\n+      config.serverUrl = configData['comfyui.server_url'] || ''\n+      config.backupServers = configData['comfyui.backup_servers'] || ''\n+      config.requestTimeout = parseInt(configData['comfyui.request_timeout']) || 30000\n+      config.healthCheckTimeout = parseInt(configData['comfyui.health_check_timeout']) || 10000\n+      config.autoSwitch = configData['comfyui.auto_switch'] === 'true' || configData['comfyui.auto_switch'] === true\n+      config.clientId = configData['comfyui.client_id'] || ''\n+      config.maxRetries = parseInt(configData['comfyui.max_retries']) || 3\n \n-      console.log('✅ 表单配置已更新:', {\n-        serverUrl: config.serverUrl,\n-        backupServers: config.backupServers,\n-        requestTimeout: config.requestTimeout,\n-        healthCheckTimeout: config.healthCheckTimeout,\n-        autoSwitch: config.autoSwitch,\n-        clientId: config.clientId,\n-        maxRetries: config.maxRetries\n-      })\n-\n       ElMessage.success('配置加载成功')\n-    } else {\n-      console.error('❌ API响应格式错误:', response)\n-      ElMessage.error('配置数据格式错误')\n     }\n   } catch (error) {\n-    console.error('❌ 加载配置失败:', error)\n-    ElMessage.error('加载配置失败: ' + (error.message || '未知错误'))\n+    console.error('加载配置失败:', error)\n+    ElMessage.error('加载配置失败')\n   } finally {\n     loading.value = false\n   }\n }\n@@ -342,14 +307,9 @@\n }\n \n // 页面加载时获取配置\n onMounted(() => {\n-  console.log('🔄 Config页面已挂载，开始加载配置...')\n-\n-  // 延迟一点时间确保认证状态已经设置\n-  setTimeout(() => {\n-    loadConfig()\n-  }, 500)\n+  loadConfig()\n })\n </script>\n \n <style scoped>\n"
                },
                {
                    "date": 1752403903614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,12 @@\n   <div class=\"config-page\">\n     <div class=\"page-header\">\n       <h1 class=\"page-title\">系统配置</h1>\n       <div class=\"header-actions\">\n+        <el-button @click=\"loadConfig\" :loading=\"loading\">\n+          <el-icon><Refresh /></el-icon>\n+          刷新配置\n+        </el-button>\n         <el-button @click=\"testConnection\" :loading=\"testing\">\n           <el-icon><Connection /></el-icon>\n           测试连接\n         </el-button>\n@@ -123,9 +127,9 @@\n \n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n-import { Check, Connection } from '@element-plus/icons-vue'\n+import { Check, Connection, Refresh } from '@element-plus/icons-vue'\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n \n const loading = ref(false)\n const saving = ref(false)\n@@ -180,25 +184,56 @@\n const loadConfig = async () => {\n   loading.value = true\n   try {\n     const response = await getSystemConfig()\n+    console.log('🔍 API响应:', response)\n+\n     if (response.success && response.data) {\n       const configData = response.data\n+      console.log('📊 配置数据:', configData)\n \n+      // 将分组格式的配置数据转换为扁平的键值对格式\n+      const flatConfig = {}\n+\n+      // 遍历所有配置分组\n+      Object.keys(configData).forEach(groupName => {\n+        const groupConfigs = configData[groupName]\n+        if (Array.isArray(groupConfigs)) {\n+          groupConfigs.forEach(item => {\n+            flatConfig[item.config_key] = item.config_value\n+          })\n+        }\n+      })\n+\n+      console.log('🔧 转换后的配置:', flatConfig)\n+\n       // 映射配置数据到表单\n-      config.serverUrl = configData['comfyui.server_url'] || ''\n-      config.backupServers = configData['comfyui.backup_servers'] || ''\n-      config.requestTimeout = parseInt(configData['comfyui.request_timeout']) || 30000\n-      config.healthCheckTimeout = parseInt(configData['comfyui.health_check_timeout']) || 10000\n-      config.autoSwitch = configData['comfyui.auto_switch'] === 'true' || configData['comfyui.auto_switch'] === true\n-      config.clientId = configData['comfyui.client_id'] || ''\n-      config.maxRetries = parseInt(configData['comfyui.max_retries']) || 3\n+      config.serverUrl = flatConfig['comfyui.server_url'] || ''\n+      config.backupServers = flatConfig['comfyui.backup_servers'] || ''\n+      config.requestTimeout = parseInt(flatConfig['comfyui.request_timeout']) || 30000\n+      config.healthCheckTimeout = parseInt(flatConfig['comfyui.health_check_timeout']) || 10000\n+      config.autoSwitch = flatConfig['comfyui.auto_switch'] === 'true' || flatConfig['comfyui.auto_switch'] === true\n+      config.clientId = flatConfig['comfyui.client_id'] || ''\n+      config.maxRetries = parseInt(flatConfig['comfyui.max_retries']) || 3\n \n+      console.log('✅ 表单配置已更新:', {\n+        serverUrl: config.serverUrl,\n+        backupServers: config.backupServers,\n+        requestTimeout: config.requestTimeout,\n+        healthCheckTimeout: config.healthCheckTimeout,\n+        autoSwitch: config.autoSwitch,\n+        clientId: config.clientId,\n+        maxRetries: config.maxRetries\n+      })\n+\n       ElMessage.success('配置加载成功')\n+    } else {\n+      console.error('❌ API响应格式错误:', response)\n+      ElMessage.error('配置数据格式错误')\n     }\n   } catch (error) {\n-    console.error('加载配置失败:', error)\n-    ElMessage.error('加载配置失败')\n+    console.error('❌ 加载配置失败:', error)\n+    ElMessage.error('加载配置失败: ' + (error.message || '未知错误'))\n   } finally {\n     loading.value = false\n   }\n }\n@@ -307,9 +342,14 @@\n }\n \n // 页面加载时获取配置\n onMounted(() => {\n-  loadConfig()\n+  console.log('🔄 Config页面已挂载，开始加载配置...')\n+\n+  // 延迟一点时间确保认证状态已经设置\n+  setTimeout(() => {\n+    loadConfig()\n+  }, 500)\n })\n </script>\n \n <style scoped>\n"
                },
                {
                    "date": 1752404134179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,15 +183,28 @@\n // 加载配置\n const loadConfig = async () => {\n   loading.value = true\n   try {\n+    console.log('🔄 开始加载配置...')\n+    console.log('🔑 当前Token:', getToken())\n+    console.log('👤 当前用户:', getUser())\n+\n     const response = await getSystemConfig()\n     console.log('🔍 API响应:', response)\n \n     if (response.success && response.data) {\n       const configData = response.data\n       console.log('📊 配置数据:', configData)\n \n+      // 检查ComfyUI配置是否存在\n+      if (!configData.comfyui) {\n+        console.error('❌ 没有找到ComfyUI配置分组')\n+        ElMessage.error('没有找到ComfyUI配置')\n+        return\n+      }\n+\n+      console.log('🔧 ComfyUI配置项:', configData.comfyui)\n+\n       // 将分组格式的配置数据转换为扁平的键值对格式\n       const flatConfig = {}\n \n       // 遍历所有配置分组\n@@ -227,9 +240,9 @@\n \n       ElMessage.success('配置加载成功')\n     } else {\n       console.error('❌ API响应格式错误:', response)\n-      ElMessage.error('配置数据格式错误')\n+      ElMessage.error('配置数据格式错误: ' + (response.message || '未知错误'))\n     }\n   } catch (error) {\n     console.error('❌ 加载配置失败:', error)\n     ElMessage.error('加载配置失败: ' + (error.message || '未知错误'))\n"
                },
                {
                    "date": 1752404148915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,8 +129,9 @@\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n import { Check, Connection, Refresh } from '@element-plus/icons-vue'\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n+import { getToken, getUser } from '@/utils/auth'\n \n const loading = ref(false)\n const saving = ref(false)\n const testing = ref(false)\n"
                },
                {
                    "date": 1752404181529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -358,8 +358,21 @@\n // 页面加载时获取配置\n onMounted(() => {\n   console.log('🔄 Config页面已挂载，开始加载配置...')\n \n+  // 检查认证状态\n+  const token = getToken()\n+  const user = getUser()\n+\n+  if (!token) {\n+    console.log('❌ 未找到认证Token，跳转到登录页面')\n+    ElMessage.warning('请先登录')\n+    router.push('/login')\n+    return\n+  }\n+\n+  console.log('✅ 认证状态正常，开始加载配置')\n+\n   // 延迟一点时间确保认证状态已经设置\n   setTimeout(() => {\n     loadConfig()\n   }, 500)\n"
                },
                {
                    "date": 1752404197385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,8 +130,9 @@\n import { ElMessage, ElMessageBox } from 'element-plus'\n import { Check, Connection, Refresh } from '@element-plus/icons-vue'\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n import { getToken, getUser } from '@/utils/auth'\n+import { useRouter } from 'vue-router'\n \n const loading = ref(false)\n const saving = ref(false)\n const testing = ref(false)\n"
                },
                {
                    "date": 1752404212326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,8 +132,9 @@\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n import { getToken, getUser } from '@/utils/auth'\n import { useRouter } from 'vue-router'\n \n+const router = useRouter()\n const loading = ref(false)\n const saving = ref(false)\n const testing = ref(false)\n const configForm = ref(null)\n"
                },
                {
                    "date": 1752404232816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,12 @@\n   <div class=\"config-page\">\n     <div class=\"page-header\">\n       <h1 class=\"page-title\">系统配置</h1>\n       <div class=\"header-actions\">\n+        <el-button @click=\"forceLogin\" type=\"warning\">\n+          <el-icon><User /></el-icon>\n+          强制登录\n+        </el-button>\n         <el-button @click=\"loadConfig\" :loading=\"loading\">\n           <el-icon><Refresh /></el-icon>\n           刷新配置\n         </el-button>\n"
                },
                {
                    "date": 1752404247421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n \n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n-import { Check, Connection, Refresh } from '@element-plus/icons-vue'\n+import { Check, Connection, Refresh, User } from '@element-plus/icons-vue'\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n import { getToken, getUser } from '@/utils/auth'\n import { useRouter } from 'vue-router'\n \n"
                },
                {
                    "date": 1752404264042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,10 +133,11 @@\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n import { Check, Connection, Refresh, User } from '@element-plus/icons-vue'\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n-import { getToken, getUser } from '@/utils/auth'\n+import { getToken, getUser, setToken, setUser } from '@/utils/auth'\n import { useRouter } from 'vue-router'\n+import request from '@/utils/request'\n \n const router = useRouter()\n const loading = ref(false)\n const saving = ref(false)\n"
                },
                {
                    "date": 1752404287266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,8 +332,36 @@\n     saving.value = false\n   }\n }\n \n+// 强制登录\n+const forceLogin = async () => {\n+  try {\n+    console.log('🔐 强制登录...')\n+    const response = await request({\n+      url: '/admin-auth/login',\n+      method: 'post',\n+      data: {\n+        username: 'admin',\n+        password: 'admin123456'\n+      }\n+    })\n+\n+    if (response.success) {\n+      setToken(response.data.token)\n+      setUser(response.data.admin)\n+      ElMessage.success('登录成功')\n+      console.log('✅ 登录成功，开始加载配置')\n+      await loadConfig()\n+    } else {\n+      ElMessage.error('登录失败: ' + response.message)\n+    }\n+  } catch (error) {\n+    console.error('❌ 强制登录失败:', error)\n+    ElMessage.error('登录失败')\n+  }\n+}\n+\n // 测试连接\n const testConnection = async () => {\n   if (!config.serverUrl) {\n     ElMessage.warning('请先输入主服务器地址')\n"
                },
                {
                    "date": 1752404723842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,8 +271,12 @@\n   }\n \n   saving.value = true\n   try {\n+    console.log('💾 开始保存配置...')\n+    console.log('🔑 当前Token:', getToken())\n+    console.log('👤 当前用户:', getUser())\n+\n     // 构建配置数据\n     const configs = [\n       {\n         config_key: 'comfyui.server_url',\n@@ -317,18 +321,23 @@\n         config_group: 'comfyui'\n       }\n     ]\n \n+    console.log('📋 要保存的配置:', configs)\n+\n     const response = await saveSystemConfig(configs)\n+    console.log('📊 保存响应:', response)\n+\n     if (response.success) {\n       ElMessage.success('配置保存成功')\n       connectionStatus.value = null // 重置连接状态\n     } else {\n       ElMessage.error(response.message || '配置保存失败')\n     }\n   } catch (error) {\n-    console.error('保存配置失败:', error)\n-    ElMessage.error('保存配置失败')\n+    console.error('❌ 保存配置失败:', error)\n+    console.error('❌ 错误详情:', error.response || error)\n+    ElMessage.error('保存配置失败: ' + (error.message || '未知错误'))\n   } finally {\n     saving.value = false\n   }\n }\n"
                },
                {
                    "date": 1752405122681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -406,12 +406,15 @@\n   // 检查认证状态\n   const token = getToken()\n   const user = getUser()\n \n+  console.log('🔑 当前Token:', token ? '存在' : '不存在')\n+  console.log('👤 当前用户:', user ? user.username : '未登录')\n+\n   if (!token) {\n-    console.log('❌ 未找到认证Token，跳转到登录页面')\n-    ElMessage.warning('请先登录')\n-    router.push('/login')\n+    console.log('❌ 未找到认证Token，显示强制登录提示')\n+    ElMessage.warning('请点击\"强制登录\"按钮进行登录')\n+    // 不跳转，让用户手动点击强制登录\n     return\n   }\n \n   console.log('✅ 认证状态正常，开始加载配置')\n"
                },
                {
                    "date": 1752405143648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,12 @@\n         <el-button @click=\"forceLogin\" type=\"warning\">\n           <el-icon><User /></el-icon>\n           强制登录\n         </el-button>\n+        <el-button @click=\"testAPI\" type=\"info\">\n+          <el-icon><Tools /></el-icon>\n+          测试API\n+        </el-button>\n         <el-button @click=\"loadConfig\" :loading=\"loading\">\n           <el-icon><Refresh /></el-icon>\n           刷新配置\n         </el-button>\n"
                },
                {
                    "date": 1752405159443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n \n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n-import { Check, Connection, Refresh, User } from '@element-plus/icons-vue'\n+import { Check, Connection, Refresh, User, Tools } from '@element-plus/icons-vue'\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n import { getToken, getUser, setToken, setUser } from '@/utils/auth'\n import { useRouter } from 'vue-router'\n import request from '@/utils/request'\n"
                },
                {
                    "date": 1752405182306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -373,8 +373,35 @@\n     ElMessage.error('登录失败')\n   }\n }\n \n+// 测试API连接\n+const testAPI = async () => {\n+  try {\n+    console.log('🧪 测试API连接...')\n+    console.log('🔑 当前Token:', getToken())\n+    console.log('👤 当前用户:', getUser())\n+\n+    // 测试简单的API调用\n+    const response = await request({\n+      url: '/admin/stats',\n+      method: 'get'\n+    })\n+\n+    console.log('📊 API测试响应:', response)\n+\n+    if (response.success) {\n+      ElMessage.success('API连接正常')\n+    } else {\n+      ElMessage.error('API连接失败: ' + response.message)\n+    }\n+  } catch (error) {\n+    console.error('❌ API测试失败:', error)\n+    console.error('❌ 错误详情:', error.response || error)\n+    ElMessage.error('API连接失败: ' + (error.message || '未知错误'))\n+  }\n+}\n+\n // 测试连接\n const testConnection = async () => {\n   if (!config.serverUrl) {\n     ElMessage.warning('请先输入主服务器地址')\n"
                },
                {
                    "date": 1752405426514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,14 +47,12 @@\n           <el-col :span=\"12\">\n             <el-form-item label=\"主服务器地址\" prop=\"serverUrl\" required>\n               <el-input\n                 v-model=\"config.serverUrl\"\n-                placeholder=\"https://your-comfyui-server.com\"\n+                placeholder=\"例如: https://your-server.com 或 http://localhost:8188\"\n                 clearable\n-              >\n-                <template #prepend>HTTPS://</template>\n-              </el-input>\n-              <div class=\"form-tip\">ComfyUI主服务器的完整地址</div>\n+              />\n+              <div class=\"form-tip\">ComfyUI服务器的完整地址，包含协议(http://或https://)</div>\n             </el-form-item>\n \n             <el-form-item label=\"备用服务器地址\" prop=\"backupServers\">\n               <el-input\n"
                },
                {
                    "date": 1752406022609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,12 @@\n         <el-button @click=\"testAPI\" type=\"info\">\n           <el-icon><Tools /></el-icon>\n           测试API\n         </el-button>\n+        <el-button @click=\"saveConfigDirect\" type=\"success\" :loading=\"saving\">\n+          <el-icon><Check /></el-icon>\n+          直接保存\n+        </el-button>\n         <el-button @click=\"loadConfig\" :loading=\"loading\">\n           <el-icon><Refresh /></el-icon>\n           刷新配置\n         </el-button>\n"
                },
                {
                    "date": 1752406038216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,8 +139,9 @@\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n import { Check, Connection, Refresh, User, Tools } from '@element-plus/icons-vue'\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n+import { saveSystemConfigDirect } from '@/api/direct-config'\n import { getToken, getUser, setToken, setUser } from '@/utils/auth'\n import { useRouter } from 'vue-router'\n import request from '@/utils/request'\n \n"
                },
                {
                    "date": 1752406063397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,8 +265,90 @@\n     loading.value = false\n   }\n }\n \n+// 直接保存配置（绕过代理）\n+const saveConfigDirect = async () => {\n+  if (!configForm.value) return\n+\n+  try {\n+    await configForm.value.validate()\n+  } catch (error) {\n+    ElMessage.warning('请检查表单输入')\n+    return\n+  }\n+\n+  saving.value = true\n+  try {\n+    console.log('💾 使用直接连接保存配置...')\n+    console.log('🔑 当前Token:', getToken())\n+\n+    // 构建配置数据\n+    const configs = [\n+      {\n+        config_key: 'comfyui.server_url',\n+        config_value: config.serverUrl,\n+        config_type: 'string',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.backup_servers',\n+        config_value: config.backupServers,\n+        config_type: 'string',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.request_timeout',\n+        config_value: config.requestTimeout.toString(),\n+        config_type: 'number',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.health_check_timeout',\n+        config_value: config.healthCheckTimeout.toString(),\n+        config_type: 'number',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.auto_switch',\n+        config_value: config.autoSwitch.toString(),\n+        config_type: 'boolean',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.client_id',\n+        config_value: config.clientId,\n+        config_type: 'string',\n+        config_group: 'comfyui'\n+      },\n+      {\n+        config_key: 'comfyui.max_retries',\n+        config_value: config.maxRetries.toString(),\n+        config_type: 'number',\n+        config_group: 'comfyui'\n+      }\n+    ]\n+\n+    console.log('📋 要保存的配置:', configs)\n+\n+    const response = await saveSystemConfigDirect(configs)\n+    console.log('📊 直接保存响应:', response)\n+\n+    if (response.success) {\n+      ElMessage.success('配置保存成功（直接连接）')\n+      connectionStatus.value = null // 重置连接状态\n+    } else {\n+      ElMessage.error(response.message || '配置保存失败')\n+    }\n+  } catch (error) {\n+    console.error('❌ 直接保存配置失败:', error)\n+    console.error('❌ 错误详情:', error.response || error)\n+    ElMessage.error('直接保存配置失败: ' + (error.message || '未知错误'))\n+  } finally {\n+    saving.value = false\n+  }\n+}\n+\n // 保存配置\n const saveConfig = async () => {\n   if (!configForm.value) return\n \n"
                },
                {
                    "date": 1752406876085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,24 +2,8 @@\n   <div class=\"config-page\">\n     <div class=\"page-header\">\n       <h1 class=\"page-title\">系统配置</h1>\n       <div class=\"header-actions\">\n-        <el-button @click=\"forceLogin\" type=\"warning\">\n-          <el-icon><User /></el-icon>\n-          强制登录\n-        </el-button>\n-        <el-button @click=\"testAPI\" type=\"info\">\n-          <el-icon><Tools /></el-icon>\n-          测试API\n-        </el-button>\n-        <el-button @click=\"saveConfigDirect\" type=\"success\" :loading=\"saving\">\n-          <el-icon><Check /></el-icon>\n-          直接保存\n-        </el-button>\n-        <el-button @click=\"loadConfig\" :loading=\"loading\">\n-          <el-icon><Refresh /></el-icon>\n-          刷新配置\n-        </el-button>\n         <el-button @click=\"testConnection\" :loading=\"testing\">\n           <el-icon><Connection /></el-icon>\n           测试连接\n         </el-button>\n@@ -51,12 +35,14 @@\n           <el-col :span=\"12\">\n             <el-form-item label=\"主服务器地址\" prop=\"serverUrl\" required>\n               <el-input\n                 v-model=\"config.serverUrl\"\n-                placeholder=\"例如: https://your-server.com 或 http://localhost:8188\"\n+                placeholder=\"https://your-comfyui-server.com\"\n                 clearable\n-              />\n-              <div class=\"form-tip\">ComfyUI服务器的完整地址，包含协议(http://或https://)</div>\n+              >\n+                <template #prepend>HTTPS://</template>\n+              </el-input>\n+              <div class=\"form-tip\">ComfyUI主服务器的完整地址</div>\n             </el-form-item>\n \n             <el-form-item label=\"备用服务器地址\" prop=\"backupServers\">\n               <el-input\n@@ -137,16 +123,11 @@\n \n <script setup>\n import { ref, reactive, onMounted } from 'vue'\n import { ElMessage, ElMessageBox } from 'element-plus'\n-import { Check, Connection, Refresh, User, Tools } from '@element-plus/icons-vue'\n+import { Check, Connection } from '@element-plus/icons-vue'\n import { getSystemConfig, saveSystemConfig, testComfyUIConnection } from '@/api/config'\n-import { saveSystemConfigDirect } from '@/api/direct-config'\n-import { getToken, getUser, setToken, setUser } from '@/utils/auth'\n-import { useRouter } from 'vue-router'\n-import request from '@/utils/request'\n \n-const router = useRouter()\n const loading = ref(false)\n const saving = ref(false)\n const testing = ref(false)\n const configForm = ref(null)\n@@ -198,157 +179,31 @@\n // 加载配置\n const loadConfig = async () => {\n   loading.value = true\n   try {\n-    console.log('🔄 开始加载配置...')\n-    console.log('🔑 当前Token:', getToken())\n-    console.log('👤 当前用户:', getUser())\n-\n     const response = await getSystemConfig()\n-    console.log('🔍 API响应:', response)\n-\n     if (response.success && response.data) {\n       const configData = response.data\n-      console.log('📊 配置数据:', configData)\n \n-      // 检查ComfyUI配置是否存在\n-      if (!configData.comfyui) {\n-        console.error('❌ 没有找到ComfyUI配置分组')\n-        ElMessage.error('没有找到ComfyUI配置')\n-        return\n-      }\n-\n-      console.log('🔧 ComfyUI配置项:', configData.comfyui)\n-\n-      // 将分组格式的配置数据转换为扁平的键值对格式\n-      const flatConfig = {}\n-\n-      // 遍历所有配置分组\n-      Object.keys(configData).forEach(groupName => {\n-        const groupConfigs = configData[groupName]\n-        if (Array.isArray(groupConfigs)) {\n-          groupConfigs.forEach(item => {\n-            flatConfig[item.config_key] = item.config_value\n-          })\n-        }\n-      })\n-\n-      console.log('🔧 转换后的配置:', flatConfig)\n-\n       // 映射配置数据到表单\n-      config.serverUrl = flatConfig['comfyui.server_url'] || ''\n-      config.backupServers = flatConfig['comfyui.backup_servers'] || ''\n-      config.requestTimeout = parseInt(flatConfig['comfyui.request_timeout']) || 30000\n-      config.healthCheckTimeout = parseInt(flatConfig['comfyui.health_check_timeout']) || 10000\n-      config.autoSwitch = flatConfig['comfyui.auto_switch'] === 'true' || flatConfig['comfyui.auto_switch'] === true\n-      config.clientId = flatConfig['comfyui.client_id'] || ''\n-      config.maxRetries = parseInt(flatConfig['comfyui.max_retries']) || 3\n+      config.serverUrl = configData['comfyui.server_url'] || ''\n+      config.backupServers = configData['comfyui.backup_servers'] || ''\n+      config.requestTimeout = parseInt(configData['comfyui.request_timeout']) || 30000\n+      config.healthCheckTimeout = parseInt(configData['comfyui.health_check_timeout']) || 10000\n+      config.autoSwitch = configData['comfyui.auto_switch'] === 'true' || configData['comfyui.auto_switch'] === true\n+      config.clientId = configData['comfyui.client_id'] || ''\n+      config.maxRetries = parseInt(configData['comfyui.max_retries']) || 3\n \n-      console.log('✅ 表单配置已更新:', {\n-        serverUrl: config.serverUrl,\n-        backupServers: config.backupServers,\n-        requestTimeout: config.requestTimeout,\n-        healthCheckTimeout: config.healthCheckTimeout,\n-        autoSwitch: config.autoSwitch,\n-        clientId: config.clientId,\n-        maxRetries: config.maxRetries\n-      })\n-\n       ElMessage.success('配置加载成功')\n-    } else {\n-      console.error('❌ API响应格式错误:', response)\n-      ElMessage.error('配置数据格式错误: ' + (response.message || '未知错误'))\n     }\n   } catch (error) {\n-    console.error('❌ 加载配置失败:', error)\n-    ElMessage.error('加载配置失败: ' + (error.message || '未知错误'))\n+    console.error('加载配置失败:', error)\n+    ElMessage.error('加载配置失败')\n   } finally {\n     loading.value = false\n   }\n }\n \n-// 直接保存配置（绕过代理）\n-const saveConfigDirect = async () => {\n-  if (!configForm.value) return\n-\n-  try {\n-    await configForm.value.validate()\n-  } catch (error) {\n-    ElMessage.warning('请检查表单输入')\n-    return\n-  }\n-\n-  saving.value = true\n-  try {\n-    console.log('💾 使用直接连接保存配置...')\n-    console.log('🔑 当前Token:', getToken())\n-\n-    // 构建配置数据\n-    const configs = [\n-      {\n-        config_key: 'comfyui.server_url',\n-        config_value: config.serverUrl,\n-        config_type: 'string',\n-        config_group: 'comfyui'\n-      },\n-      {\n-        config_key: 'comfyui.backup_servers',\n-        config_value: config.backupServers,\n-        config_type: 'string',\n-        config_group: 'comfyui'\n-      },\n-      {\n-        config_key: 'comfyui.request_timeout',\n-        config_value: config.requestTimeout.toString(),\n-        config_type: 'number',\n-        config_group: 'comfyui'\n-      },\n-      {\n-        config_key: 'comfyui.health_check_timeout',\n-        config_value: config.healthCheckTimeout.toString(),\n-        config_type: 'number',\n-        config_group: 'comfyui'\n-      },\n-      {\n-        config_key: 'comfyui.auto_switch',\n-        config_value: config.autoSwitch.toString(),\n-        config_type: 'boolean',\n-        config_group: 'comfyui'\n-      },\n-      {\n-        config_key: 'comfyui.client_id',\n-        config_value: config.clientId,\n-        config_type: 'string',\n-        config_group: 'comfyui'\n-      },\n-      {\n-        config_key: 'comfyui.max_retries',\n-        config_value: config.maxRetries.toString(),\n-        config_type: 'number',\n-        config_group: 'comfyui'\n-      }\n-    ]\n-\n-    console.log('📋 要保存的配置:', configs)\n-\n-    const response = await saveSystemConfigDirect(configs)\n-    console.log('📊 直接保存响应:', response)\n-\n-    if (response.success) {\n-      ElMessage.success('配置保存成功（直接连接）')\n-      connectionStatus.value = null // 重置连接状态\n-    } else {\n-      ElMessage.error(response.message || '配置保存失败')\n-    }\n-  } catch (error) {\n-    console.error('❌ 直接保存配置失败:', error)\n-    console.error('❌ 错误详情:', error.response || error)\n-    ElMessage.error('直接保存配置失败: ' + (error.message || '未知错误'))\n-  } finally {\n-    saving.value = false\n-  }\n-}\n-\n // 保存配置\n const saveConfig = async () => {\n   if (!configForm.value) return\n \n@@ -360,12 +215,8 @@\n   }\n \n   saving.value = true\n   try {\n-    console.log('💾 开始保存配置...')\n-    console.log('🔑 当前Token:', getToken())\n-    console.log('👤 当前用户:', getUser())\n-\n     // 构建配置数据\n     const configs = [\n       {\n         config_key: 'comfyui.server_url',\n@@ -410,83 +261,23 @@\n         config_group: 'comfyui'\n       }\n     ]\n \n-    console.log('📋 要保存的配置:', configs)\n-\n     const response = await saveSystemConfig(configs)\n-    console.log('📊 保存响应:', response)\n-\n     if (response.success) {\n       ElMessage.success('配置保存成功')\n       connectionStatus.value = null // 重置连接状态\n     } else {\n       ElMessage.error(response.message || '配置保存失败')\n     }\n   } catch (error) {\n-    console.error('❌ 保存配置失败:', error)\n-    console.error('❌ 错误详情:', error.response || error)\n-    ElMessage.error('保存配置失败: ' + (error.message || '未知错误'))\n+    console.error('保存配置失败:', error)\n+    ElMessage.error('保存配置失败')\n   } finally {\n     saving.value = false\n   }\n }\n \n-// 强制登录\n-const forceLogin = async () => {\n-  try {\n-    console.log('🔐 强制登录...')\n-    const response = await request({\n-      url: '/admin-auth/login',\n-      method: 'post',\n-      data: {\n-        username: 'admin',\n-        password: 'admin123456'\n-      }\n-    })\n-\n-    if (response.success) {\n-      setToken(response.data.token)\n-      setUser(response.data.admin)\n-      ElMessage.success('登录成功')\n-      console.log('✅ 登录成功，开始加载配置')\n-      await loadConfig()\n-    } else {\n-      ElMessage.error('登录失败: ' + response.message)\n-    }\n-  } catch (error) {\n-    console.error('❌ 强制登录失败:', error)\n-    ElMessage.error('登录失败')\n-  }\n-}\n-\n-// 测试API连接\n-const testAPI = async () => {\n-  try {\n-    console.log('🧪 测试API连接...')\n-    console.log('🔑 当前Token:', getToken())\n-    console.log('👤 当前用户:', getUser())\n-\n-    // 测试简单的API调用\n-    const response = await request({\n-      url: '/admin/stats',\n-      method: 'get'\n-    })\n-\n-    console.log('📊 API测试响应:', response)\n-\n-    if (response.success) {\n-      ElMessage.success('API连接正常')\n-    } else {\n-      ElMessage.error('API连接失败: ' + response.message)\n-    }\n-  } catch (error) {\n-    console.error('❌ API测试失败:', error)\n-    console.error('❌ 错误详情:', error.response || error)\n-    ElMessage.error('API连接失败: ' + (error.message || '未知错误'))\n-  }\n-}\n-\n // 测试连接\n const testConnection = async () => {\n   if (!config.serverUrl) {\n     ElMessage.warning('请先输入主服务器地址')\n@@ -516,30 +307,9 @@\n }\n \n // 页面加载时获取配置\n onMounted(() => {\n-  console.log('🔄 Config页面已挂载，开始加载配置...')\n-\n-  // 检查认证状态\n-  const token = getToken()\n-  const user = getUser()\n-\n-  console.log('🔑 当前Token:', token ? '存在' : '不存在')\n-  console.log('👤 当前用户:', user ? user.username : '未登录')\n-\n-  if (!token) {\n-    console.log('❌ 未找到认证Token，显示强制登录提示')\n-    ElMessage.warning('请点击\"强制登录\"按钮进行登录')\n-    // 不跳转，让用户手动点击强制登录\n-    return\n-  }\n-\n-  console.log('✅ 认证状态正常，开始加载配置')\n-\n-  // 延迟一点时间确保认证状态已经设置\n-  setTimeout(() => {\n-    loadConfig()\n-  }, 500)\n+  loadConfig()\n })\n </script>\n \n <style scoped>\n"
                },
                {
                    "date": 1752409400962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,13 +186,13 @@\n \n       // 映射配置数据到表单\n       config.serverUrl = configData['comfyui.server_url'] || ''\n       config.backupServers = configData['comfyui.backup_servers'] || ''\n-      config.requestTimeout = parseInt(configData['comfyui.request_timeout']) || 30000\n-      config.healthCheckTimeout = parseInt(configData['comfyui.health_check_timeout']) || 10000\n-      config.autoSwitch = configData['comfyui.auto_switch'] === 'true' || configData['comfyui.auto_switch'] === true\n+      config.requestTimeout = configData['comfyui.request_timeout'] || 30000\n+      config.healthCheckTimeout = configData['comfyui.health_check_timeout'] || 10000\n+      config.autoSwitch = Boolean(configData['comfyui.auto_switch'])\n       config.clientId = configData['comfyui.client_id'] || ''\n-      config.maxRetries = parseInt(configData['comfyui.max_retries']) || 3\n+      config.maxRetries = configData['comfyui.max_retries'] || 3\n \n       ElMessage.success('配置加载成功')\n     }\n   } catch (error) {\n"
                },
                {
                    "date": 1752410284026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,11 +37,9 @@\n               <el-input\n                 v-model=\"config.serverUrl\"\n                 placeholder=\"https://your-comfyui-server.com\"\n                 clearable\n-              >\n-                <template #prepend>HTTPS://</template>\n-              </el-input>\n+              />\n               <div class=\"form-tip\">ComfyUI主服务器的完整地址</div>\n             </el-form-item>\n \n             <el-form-item label=\"备用服务器地址\" prop=\"backupServers\">\n@@ -371,4 +369,5 @@\n   box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n   border-radius: 8px;\n }\n </style>\n+\n"
                },
                {
                    "date": 1752459510525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,14 @@\n       <h1 class=\"page-title\">系统配置</h1>\n       <div class=\"header-actions\">\n         <el-button @click=\"testConnection\" :loading=\"testing\">\n           <el-icon><Connection /></el-icon>\n-          测试连接\n+          测试主服务器\n         </el-button>\n+        <el-button @click=\"testAllServers\" :loading=\"testingAll\" type=\"success\">\n+          <el-icon><Connection /></el-icon>\n+          测试所有服务器\n+        </el-button>\n         <el-button type=\"primary\" @click=\"saveConfig\" :loading=\"saving\">\n           <el-icon><Check /></el-icon>\n           保存配置\n         </el-button>\n"
                },
                {
                    "date": 1752459525601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,10 +131,12 @@\n \n const loading = ref(false)\n const saving = ref(false)\n const testing = ref(false)\n+const testingAll = ref(false)\n const configForm = ref(null)\n const connectionStatus = ref(null)\n+const allServersStatus = ref([])\n \n // 配置数据\n const config = reactive({\n   serverUrl: '',\n"
                },
                {
                    "date": 1752459557476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,8 +309,115 @@\n     testing.value = false\n   }\n }\n \n+// 测试所有服务器\n+const testAllServers = async () => {\n+  // 收集所有服务器地址\n+  const servers = []\n+\n+  // 主服务器\n+  if (config.serverUrl) {\n+    servers.push({ url: config.serverUrl, type: 'primary', name: '主服务器' })\n+  }\n+\n+  // 备用服务器\n+  if (config.backupServers) {\n+    const backupUrls = config.backupServers.split('\\n')\n+      .map(url => url.trim())\n+      .filter(url => url && url.startsWith('http'))\n+\n+    backupUrls.forEach((url, index) => {\n+      servers.push({ url, type: 'backup', name: `备用服务器${index + 1}` })\n+    })\n+  }\n+\n+  if (servers.length === 0) {\n+    ElMessage.warning('请先配置服务器地址')\n+    return\n+  }\n+\n+  testingAll.value = true\n+  allServersStatus.value = []\n+\n+  ElMessage.info(`开始测试 ${servers.length} 个服务器...`)\n+\n+  // 并发测试所有服务器\n+  const testPromises = servers.map(async (server) => {\n+    try {\n+      const startTime = Date.now()\n+      const response = await testComfyUIConnection(server.url, config.healthCheckTimeout)\n+      const responseTime = Date.now() - startTime\n+\n+      return {\n+        ...server,\n+        success: response.success,\n+        message: response.message,\n+        responseTime,\n+        data: response.data\n+      }\n+    } catch (error) {\n+      return {\n+        ...server,\n+        success: false,\n+        message: error.message,\n+        responseTime: config.healthCheckTimeout,\n+        error: error.message\n+      }\n+    }\n+  })\n+\n+  try {\n+    const results = await Promise.all(testPromises)\n+    allServersStatus.value = results\n+\n+    const successCount = results.filter(r => r.success).length\n+    const failCount = results.length - successCount\n+\n+    if (successCount === results.length) {\n+      ElMessage.success(`所有 ${results.length} 个服务器连接正常`)\n+    } else if (successCount > 0) {\n+      ElMessage.warning(`${successCount} 个服务器正常，${failCount} 个服务器异常`)\n+    } else {\n+      ElMessage.error(`所有 ${results.length} 个服务器连接失败`)\n+    }\n+\n+    // 显示详细结果\n+    showServerTestResults(results)\n+\n+  } catch (error) {\n+    console.error('批量测试失败:', error)\n+    ElMessage.error('批量测试失败')\n+  } finally {\n+    testingAll.value = false\n+  }\n+}\n+\n+// 显示服务器测试结果\n+const showServerTestResults = (results) => {\n+  const resultHtml = results.map(result => {\n+    const statusIcon = result.success ? '✅' : '❌'\n+    const statusText = result.success ? '正常' : '异常'\n+    const responseTime = result.responseTime ? `${result.responseTime}ms` : '超时'\n+\n+    return `\n+      <div style=\"margin-bottom: 10px; padding: 8px; border-radius: 4px; background: ${result.success ? '#f0f9ff' : '#fef2f2'};\">\n+        <strong>${statusIcon} ${result.name}</strong><br>\n+        <small style=\"color: #666;\">\n+          地址: ${result.url}<br>\n+          状态: ${statusText} | 响应时间: ${responseTime}<br>\n+          ${result.message || ''}\n+        </small>\n+      </div>\n+    `\n+  }).join('')\n+\n+  ElMessageBox.alert(resultHtml, '服务器测试结果', {\n+    dangerouslyUseHTMLString: true,\n+    customClass: 'server-test-results'\n+  })\n+}\n+\n // 页面加载时获取配置\n onMounted(() => {\n   loadConfig()\n })\n"
                },
                {
                    "date": 1752459594555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,16 +80,9 @@\n               />\n               <div class=\"form-tip\">单位：毫秒，建议设置为5000-15000</div>\n             </el-form-item>\n \n-            <el-form-item label=\"自动切换备用服务器\">\n-              <el-switch\n-                v-model=\"config.autoSwitch\"\n-                active-text=\"启用\"\n-                inactive-text=\"禁用\"\n-              />\n-              <div class=\"form-tip\">主服务器故障时自动切换到备用服务器</div>\n-            </el-form-item>\n+\n           </el-col>\n         </el-row>\n \n         <el-divider content-position=\"left\">高级设置</el-divider>\n"
                },
                {
                    "date": 1752459611666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,8 @@\n   serverUrl: '',\n   backupServers: '',\n   requestTimeout: 30000,\n   healthCheckTimeout: 10000,\n-  autoSwitch: true,\n   clientId: '',\n   maxRetries: 3\n })\n \n"
                },
                {
                    "date": 1752459628069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,8 @@\n       config.serverUrl = configData['comfyui.server_url'] || ''\n       config.backupServers = configData['comfyui.backup_servers'] || ''\n       config.requestTimeout = configData['comfyui.request_timeout'] || 30000\n       config.healthCheckTimeout = configData['comfyui.health_check_timeout'] || 10000\n-      config.autoSwitch = Boolean(configData['comfyui.auto_switch'])\n       config.clientId = configData['comfyui.client_id'] || ''\n       config.maxRetries = configData['comfyui.max_retries'] || 3\n \n       ElMessage.success('配置加载成功')\n"
                },
                {
                    "date": 1752459645632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,14 +237,8 @@\n         config_type: 'number',\n         config_group: 'comfyui'\n       },\n       {\n-        config_key: 'comfyui.auto_switch',\n-        config_value: config.autoSwitch.toString(),\n-        config_type: 'boolean',\n-        config_group: 'comfyui'\n-      },\n-      {\n         config_key: 'comfyui.client_id',\n         config_value: config.clientId,\n         config_type: 'string',\n         config_group: 'comfyui'\n"
                }
            ],
            "date": 1752325471997,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"config-page\">\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">系统配置</h1>\n      <div class=\"header-actions\">\n        <el-button @click=\"testConnection\" :loading=\"testing\">\n          <el-icon><Connection /></el-icon>\n          测试连接\n        </el-button>\n        <el-button type=\"primary\" @click=\"saveConfig\" :loading=\"saving\">\n          <el-icon><Check /></el-icon>\n          保存配置\n        </el-button>\n      </div>\n    </div>\n\n    <el-card>\n      <template #header>\n        <div class=\"card-header\">\n          <span>🖥️ ComfyUI服务器配置</span>\n          <el-tag v-if=\"connectionStatus\" :type=\"connectionStatus.type\" size=\"small\">\n            {{ connectionStatus.text }}\n          </el-tag>\n        </div>\n      </template>\n\n      <el-form\n        :model=\"config\"\n        :rules=\"rules\"\n        ref=\"configForm\"\n        label-width=\"180px\"\n        v-loading=\"loading\"\n      >\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"主服务器地址\" prop=\"serverUrl\" required>\n              <el-input\n                v-model=\"config.serverUrl\"\n                placeholder=\"https://your-comfyui-server.com\"\n                clearable\n              >\n                <template #prepend>HTTPS://</template>\n              </el-input>\n              <div class=\"form-tip\">ComfyUI主服务器的完整地址</div>\n            </el-form-item>\n\n            <el-form-item label=\"备用服务器地址\" prop=\"backupServers\">\n              <el-input\n                v-model=\"config.backupServers\"\n                type=\"textarea\"\n                :rows=\"3\"\n                placeholder=\"https://backup1.example.com&#10;https://backup2.example.com\"\n                clearable\n              />\n              <div class=\"form-tip\">每行一个备用服务器地址，主服务器不可用时自动切换</div>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"请求超时时间\" prop=\"requestTimeout\" required>\n              <el-input-number\n                v-model=\"config.requestTimeout\"\n                :min=\"5000\"\n                :max=\"600000\"\n                :step=\"1000\"\n                style=\"width: 100%\"\n              />\n              <div class=\"form-tip\">单位：毫秒，建议设置为30000-300000</div>\n            </el-form-item>\n\n            <el-form-item label=\"健康检查超时时间\" prop=\"healthCheckTimeout\" required>\n              <el-input-number\n                v-model=\"config.healthCheckTimeout\"\n                :min=\"1000\"\n                :max=\"30000\"\n                :step=\"1000\"\n                style=\"width: 100%\"\n              />\n              <div class=\"form-tip\">单位：毫秒，建议设置为5000-15000</div>\n            </el-form-item>\n\n            <el-form-item label=\"自动切换备用服务器\">\n              <el-switch\n                v-model=\"config.autoSwitch\"\n                active-text=\"启用\"\n                inactive-text=\"禁用\"\n              />\n              <div class=\"form-tip\">主服务器故障时自动切换到备用服务器</div>\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n        <el-divider content-position=\"left\">高级设置</el-divider>\n\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"客户端ID\" prop=\"clientId\">\n              <el-input\n                v-model=\"config.clientId\"\n                placeholder=\"your-comfyui-client-id\"\n                clearable\n              />\n              <div class=\"form-tip\">ComfyUI客户端标识符（可选）</div>\n            </el-form-item>\n          </el-col>\n\n          <el-col :span=\"12\">\n            <el-form-item label=\"最大重试次数\" prop=\"maxRetries\">\n              <el-input-number\n                v-model=\"config.maxRetries\"\n                :min=\"0\"\n                :max=\"10\"\n                style=\"width: 100%\"\n              />\n              <div class=\"form-tip\">请求失败时的最大重试次数</div>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { reactive } from 'vue'\nimport { ElMessage } from 'element-plus'\n\nconst config = reactive({\n  systemName: 'iComfy AI图像处理平台',\n  systemDesc: '专业的AI图像处理服务平台',\n  defaultPoints: 100,\n  faceSwapEnabled: true,\n  clothingSwapEnabled: true,\n  textToImageEnabled: true\n})\n\nconst saveConfig = () => {\n  ElMessage.success('配置保存成功')\n}\n</script>\n\n<style scoped>\n.config-page {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0;\n}\n</style>\n"
        }
    ]
}
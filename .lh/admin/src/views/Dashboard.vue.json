{
    "sourceFile": "admin/src/views/Dashboard.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1752297708912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752297728225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,21 +139,22 @@\n \n // 加载统计数据\n const loadStats = async () => {\n   try {\n-    const response = await getDashboardStats()\n-    if (response.success) {\n-      stats.value = response.data\n-    }\n-  } catch (error) {\n-    console.error('加载统计数据失败:', error)\n+    // const response = await getDashboardStats()\n+    // if (response.success) {\n+    //   stats.value = response.data\n+    // }\n+\n     // 使用模拟数据\n     stats.value = {\n       totalUsers: 1234,\n       totalCards: 56,\n       totalPoints: 98765,\n       todayActiveUsers: 89\n     }\n+  } catch (error) {\n+    console.error('加载统计数据失败:', error)\n   }\n }\n \n // 初始化图表\n"
                },
                {
                    "date": 1752314035002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n \n <script setup>\n import { ref, onMounted, nextTick } from 'vue'\n import { ElMessage } from 'element-plus'\n-// import { getDashboardStats } from '@/api/dashboard'\n+import { getDashboardStats } from '@/api/dashboard'\n \n const stats = ref({\n   totalUsers: 0,\n   totalCards: 0,\n"
                },
                {
                    "date": 1752314054552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,22 +139,21 @@\n \n // 加载统计数据\n const loadStats = async () => {\n   try {\n-    // const response = await getDashboardStats()\n-    // if (response.success) {\n-    //   stats.value = response.data\n-    // }\n-\n-    // 使用模拟数据\n-    stats.value = {\n-      totalUsers: 1234,\n-      totalCards: 56,\n-      totalPoints: 98765,\n-      todayActiveUsers: 89\n+    const response = await getDashboardStats()\n+    if (response.success) {\n+      // 映射后端数据到前端显示格式\n+      stats.value = {\n+        totalUsers: response.data.users?.total_users || 0,\n+        totalCards: response.data.cards?.total_cards || 0,\n+        totalPoints: response.data.points?.total_points || 0,\n+        todayActiveUsers: response.data.users?.today_new_users || 0\n+      }\n     }\n   } catch (error) {\n     console.error('加载统计数据失败:', error)\n+    ElMessage.error('加载统计数据失败')\n   }\n }\n \n // 初始化图表\n"
                }
            ],
            "date": 1752297708912,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"dashboard\">\n    <h1 class=\"page-title\">仪表盘</h1>\n\n    <!-- 统计卡片 -->\n    <el-row :gutter=\"20\" class=\"stats-row\">\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\n        <div class=\"stat-card\">\n          <div class=\"stat-icon primary\">\n            <el-icon><User /></el-icon>\n          </div>\n          <div class=\"stat-value\">{{ stats.totalUsers || 0 }}</div>\n          <div class=\"stat-label\">总用户数</div>\n        </div>\n      </el-col>\n\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\n        <div class=\"stat-card\">\n          <div class=\"stat-icon success\">\n            <el-icon><CreditCard /></el-icon>\n          </div>\n          <div class=\"stat-value\">{{ stats.totalCards || 0 }}</div>\n          <div class=\"stat-label\">等级卡总数</div>\n        </div>\n      </el-col>\n\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\n        <div class=\"stat-card\">\n          <div class=\"stat-icon warning\">\n            <el-icon><Coin /></el-icon>\n          </div>\n          <div class=\"stat-value\">{{ formatNumber(stats.totalPoints) || 0 }}</div>\n          <div class=\"stat-label\">总积分数</div>\n        </div>\n      </el-col>\n\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\n        <div class=\"stat-card\">\n          <div class=\"stat-icon danger\">\n            <el-icon><TrendCharts /></el-icon>\n          </div>\n          <div class=\"stat-value\">{{ stats.todayActiveUsers || 0 }}</div>\n          <div class=\"stat-label\">今日活跃用户</div>\n        </div>\n      </el-col>\n    </el-row>\n\n    <!-- 图表区域 -->\n    <el-row :gutter=\"20\" class=\"charts-row\">\n      <el-col :xs=\"24\" :lg=\"12\">\n        <el-card class=\"chart-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>用户注册趋势</span>\n              <el-button type=\"text\" @click=\"refreshCharts\">\n                <el-icon><Refresh /></el-icon>\n              </el-button>\n            </div>\n          </template>\n          <div class=\"chart-container\" ref=\"userChartRef\"></div>\n        </el-card>\n      </el-col>\n\n      <el-col :xs=\"24\" :lg=\"12\">\n        <el-card class=\"chart-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>积分消费统计</span>\n              <el-button type=\"text\" @click=\"refreshCharts\">\n                <el-icon><Refresh /></el-icon>\n              </el-button>\n            </div>\n          </template>\n          <div class=\"chart-container\" ref=\"pointsChartRef\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 最近活动 -->\n    <el-card class=\"activity-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>最近活动</span>\n          <el-button type=\"text\" @click=\"loadStats\">\n            <el-icon><Refresh /></el-icon>\n          </el-button>\n        </div>\n      </template>\n\n      <el-timeline>\n        <el-timeline-item\n          v-for=\"(activity, index) in recentActivities\"\n          :key=\"index\"\n          :timestamp=\"activity.time\"\n          placement=\"top\"\n        >\n          <el-card>\n            <h4>{{ activity.title }}</h4>\n            <p>{{ activity.description }}</p>\n          </el-card>\n        </el-timeline-item>\n      </el-timeline>\n\n      <div v-if=\"recentActivities.length === 0\" class=\"no-data\">\n        <el-empty description=\"暂无最近活动\" />\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, nextTick } from 'vue'\nimport { ElMessage } from 'element-plus'\n// import { getDashboardStats } from '@/api/dashboard'\n\nconst stats = ref({\n  totalUsers: 0,\n  totalCards: 0,\n  totalPoints: 0,\n  todayActiveUsers: 0\n})\n\nconst recentActivities = ref([\n  {\n    title: '系统启动',\n    description: 'iComfy管理系统已成功启动',\n    time: new Date().toLocaleString()\n  }\n])\n\nconst userChartRef = ref()\nconst pointsChartRef = ref()\n\n// 格式化数字\nconst formatNumber = (num) => {\n  if (!num) return 0\n  return num.toLocaleString()\n}\n\n// 加载统计数据\nconst loadStats = async () => {\n  try {\n    const response = await getDashboardStats()\n    if (response.success) {\n      stats.value = response.data\n    }\n  } catch (error) {\n    console.error('加载统计数据失败:', error)\n    // 使用模拟数据\n    stats.value = {\n      totalUsers: 1234,\n      totalCards: 56,\n      totalPoints: 98765,\n      todayActiveUsers: 89\n    }\n  }\n}\n\n// 初始化图表\nconst initCharts = async () => {\n  await nextTick()\n\n  // 这里可以使用 ECharts 初始化图表\n  // 由于依赖安装问题，暂时显示占位内容\n  if (userChartRef.value) {\n    userChartRef.value.innerHTML = '<div style=\"height: 300px; display: flex; align-items: center; justify-content: center; color: #909399;\">用户注册趋势图表</div>'\n  }\n\n  if (pointsChartRef.value) {\n    pointsChartRef.value.innerHTML = '<div style=\"height: 300px; display: flex; align-items: center; justify-content: center; color: #909399;\">积分消费统计图表</div>'\n  }\n}\n\n// 刷新图表\nconst refreshCharts = () => {\n  ElMessage.success('图表已刷新')\n  initCharts()\n}\n\nonMounted(() => {\n  loadStats()\n  initCharts()\n})\n</script>\n\n<style scoped>\n.dashboard {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n  margin-bottom: 24px;\n}\n\n.stats-row {\n  margin-bottom: 24px;\n}\n\n.charts-row {\n  margin-bottom: 24px;\n}\n\n.chart-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.chart-container {\n  height: 300px;\n  background: #fafafa;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #909399;\n}\n\n.activity-card {\n  .el-timeline {\n    padding: 0 20px;\n  }\n}\n\n.no-data {\n  text-align: center;\n  padding: 40px 0;\n}\n\n@media (max-width: 768px) {\n  .stats-row .el-col {\n    margin-bottom: 16px;\n  }\n\n  .charts-row .el-col {\n    margin-bottom: 16px;\n  }\n}\n</style>\n"
        }
    ]
}
{
    "sourceFile": "admin/src/views/Points.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1752314297287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752314328928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,30 +44,25 @@\n   if (!date) return ''\n   return new Date(date).toLocaleString()\n }\n \n-const loadPoints = () => {\n-  // 模拟数据\n-  pointsList.value = [\n-    {\n-      id: 1,\n-      user_id: 1,\n-      username: 'user001',\n-      type: 'earn',\n-      points: 100,\n-      description: '绑定等级卡获得积分',\n-      created_at: new Date().toISOString()\n-    },\n-    {\n-      id: 2,\n-      user_id: 1,\n-      username: 'user001',\n-      type: 'spend',\n-      points: 50,\n-      description: 'AI换脸服务消费',\n-      created_at: new Date().toISOString()\n+const loadPoints = async () => {\n+  loading.value = true\n+  try {\n+    const response = await getPointsList({ page: 1, pageSize: 50 })\n+    if (response.success) {\n+      pointsList.value = response.data.items.map(item => ({\n+        ...item,\n+        type: item.action_type === 'consume' ? 'spend' : 'earn',\n+        points: item.points_amount\n+      }))\n     }\n-  ]\n+  } catch (error) {\n+    console.error('加载积分记录失败:', error)\n+    ElMessage.error('加载积分记录失败')\n+  } finally {\n+    loading.value = false\n+  }\n }\n \n onMounted(() => {\n   loadPoints()\n"
                },
                {
                    "date": 1752317004277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,21 @@\n           <template #default=\"{ row }\">\n             {{ formatDate(row.created_at) }}\n           </template>\n         </el-table-column>\n+        <el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\n+          <template #default=\"{ row }\">\n+            <el-button\n+              v-if=\"row.url && row.type === 'spend'\"\n+              type=\"text\"\n+              size=\"small\"\n+              @click=\"viewResult(row.url)\"\n+            >\n+              查看结果\n+            </el-button>\n+            <span v-else-if=\"row.type === 'spend'\" class=\"no-result\">无结果</span>\n+          </template>\n+        </el-table-column>\n       </el-table>\n     </el-card>\n   </div>\n </template>\n"
                },
                {
                    "date": 1752317016454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n \n <script setup>\n import { ref, onMounted } from 'vue'\n import { ElMessage } from 'element-plus'\n+import { Refresh } from '@element-plus/icons-vue'\n import { getPointsList } from '@/api/points'\n \n const loading = ref(false)\n const pointsList = ref([])\n"
                },
                {
                    "date": 1752317031380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,8 +77,30 @@\n     loading.value = false\n   }\n }\n \n+// 查看结果\n+const viewResult = (url) => {\n+  if (!url) {\n+    ElMessage.warning('暂无结果可查看')\n+    return\n+  }\n+\n+  // 判断URL类型并处理\n+  if (url.startsWith('http://') || url.startsWith('https://')) {\n+    // 网络URL，在新窗口打开\n+    window.open(url, '_blank')\n+  } else if (url.startsWith('/') || url.includes('uploads/')) {\n+    // 相对路径，构建完整URL\n+    const baseUrl = import.meta.env.VITE_API_BASE_URL || 'http://localhost:3000'\n+    const fullUrl = url.startsWith('/') ? `${baseUrl}${url}` : `${baseUrl}/${url}`\n+    window.open(fullUrl, '_blank')\n+  } else {\n+    // 其他格式，尝试直接打开\n+    window.open(url, '_blank')\n+  }\n+}\n+\n onMounted(() => {\n   loadPoints()\n })\n </script>\n"
                },
                {
                    "date": 1752317050262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,5 +123,10 @@\n   font-weight: 600;\n   color: #303133;\n   margin: 0;\n }\n+\n+.no-result {\n+  color: #909399;\n+  font-size: 12px;\n+}\n </style>\n"
                },
                {
                    "date": 1752321058225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,17 +32,79 @@\n             <el-button\n               v-if=\"row.url && row.type === 'spend'\"\n               type=\"text\"\n               size=\"small\"\n-              @click=\"viewResult(row.url)\"\n+              @click=\"viewResult(row)\"\n             >\n               查看结果\n             </el-button>\n             <span v-else-if=\"row.type === 'spend'\" class=\"no-result\">无结果</span>\n           </template>\n         </el-table-column>\n       </el-table>\n     </el-card>\n+\n+    <!-- 结果查看弹窗 -->\n+    <el-dialog\n+      v-model=\"resultDialogVisible\"\n+      :title=\"resultDialogTitle\"\n+      width=\"80%\"\n+      :close-on-click-modal=\"false\"\n+      class=\"result-dialog\"\n+    >\n+      <div class=\"result-content\">\n+        <div class=\"result-info\">\n+          <p><strong>描述:</strong> {{ currentResult.description }}</p>\n+          <p><strong>时间:</strong> {{ formatDate(currentResult.created_at) }}</p>\n+          <p><strong>积分:</strong> {{ currentResult.points }}</p>\n+        </div>\n+\n+        <div class=\"result-preview\" v-loading=\"previewLoading\">\n+          <!-- 图片预览 -->\n+          <div v-if=\"isImage(currentResult.url)\" class=\"image-preview\">\n+            <img\n+              :src=\"getFullUrl(currentResult.url)\"\n+              alt=\"结果图片\"\n+              @load=\"previewLoading = false\"\n+              @error=\"handlePreviewError\"\n+            />\n+          </div>\n+\n+          <!-- 视频预览 -->\n+          <div v-else-if=\"isVideo(currentResult.url)\" class=\"video-preview\">\n+            <video\n+              :src=\"getFullUrl(currentResult.url)\"\n+              controls\n+              @loadeddata=\"previewLoading = false\"\n+              @error=\"handlePreviewError\"\n+            >\n+              您的浏览器不支持视频播放\n+            </video>\n+          </div>\n+\n+          <!-- 其他文件类型 -->\n+          <div v-else class=\"file-preview\">\n+            <el-icon size=\"48\"><Document /></el-icon>\n+            <p>{{ getFileName(currentResult.url) }}</p>\n+            <p class=\"file-type\">{{ getFileType(currentResult.url) }}</p>\n+          </div>\n+        </div>\n+      </div>\n+\n+      <template #footer>\n+        <div class=\"dialog-footer\">\n+          <el-button @click=\"resultDialogVisible = false\">关闭</el-button>\n+          <el-button type=\"primary\" @click=\"downloadResult\">\n+            <el-icon><Download /></el-icon>\n+            下载\n+          </el-button>\n+          <el-button type=\"success\" @click=\"openInNewTab\">\n+            <el-icon><View /></el-icon>\n+            新窗口打开\n+          </el-button>\n+        </div>\n+      </template>\n+    </el-dialog>\n   </div>\n </template>\n \n <script setup>\n"
                },
                {
                    "date": 1752321074839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,13 +109,17 @@\n \n <script setup>\n import { ref, onMounted } from 'vue'\n import { ElMessage } from 'element-plus'\n-import { Refresh } from '@element-plus/icons-vue'\n+import { Refresh, Download, View, Document } from '@element-plus/icons-vue'\n import { getPointsList } from '@/api/points'\n \n const loading = ref(false)\n const pointsList = ref([])\n+const resultDialogVisible = ref(false)\n+const resultDialogTitle = ref('')\n+const currentResult = ref({})\n+const previewLoading = ref(false)\n \n const formatDate = (date) => {\n   if (!date) return ''\n   return new Date(date).toLocaleString()\n"
                },
                {
                    "date": 1752321100384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,29 +144,102 @@\n   }\n }\n \n // 查看结果\n-const viewResult = (url) => {\n-  if (!url) {\n+const viewResult = (row) => {\n+  if (!row.url) {\n     ElMessage.warning('暂无结果可查看')\n     return\n   }\n \n-  // 判断URL类型并处理\n+  currentResult.value = row\n+  resultDialogTitle.value = `查看结果 - ${row.description}`\n+  resultDialogVisible.value = true\n+  previewLoading.value = true\n+}\n+\n+// 获取完整URL\n+const getFullUrl = (url) => {\n+  if (!url) return ''\n+\n   if (url.startsWith('http://') || url.startsWith('https://')) {\n-    // 网络URL，在新窗口打开\n-    window.open(url, '_blank')\n-  } else if (url.startsWith('/') || url.includes('uploads/')) {\n-    // 相对路径，构建完整URL\n+    return url\n+  } else if (url.startsWith('/')) {\n     const baseUrl = import.meta.env.VITE_API_BASE_URL || 'http://localhost:3000'\n-    const fullUrl = url.startsWith('/') ? `${baseUrl}${url}` : `${baseUrl}/${url}`\n-    window.open(fullUrl, '_blank')\n+    return `${baseUrl}${url}`\n   } else {\n-    // 其他格式，尝试直接打开\n-    window.open(url, '_blank')\n+    const baseUrl = import.meta.env.VITE_API_BASE_URL || 'http://localhost:3000'\n+    return `${baseUrl}/${url}`\n   }\n }\n \n+// 判断是否为图片\n+const isImage = (url) => {\n+  if (!url) return false\n+  const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.svg']\n+  return imageExtensions.some(ext => url.toLowerCase().includes(ext))\n+}\n+\n+// 判断是否为视频\n+const isVideo = (url) => {\n+  if (!url) return false\n+  const videoExtensions = ['.mp4', '.avi', '.mov', '.wmv', '.flv', '.webm', '.mkv']\n+  return videoExtensions.some(ext => url.toLowerCase().includes(ext))\n+}\n+\n+// 获取文件名\n+const getFileName = (url) => {\n+  if (!url) return '未知文件'\n+  const parts = url.split('/')\n+  return parts[parts.length - 1] || '未知文件'\n+}\n+\n+// 获取文件类型\n+const getFileType = (url) => {\n+  if (!url) return '未知类型'\n+  const extension = url.split('.').pop()?.toLowerCase()\n+  return extension ? `.${extension}` : '未知类型'\n+}\n+\n+// 处理预览错误\n+const handlePreviewError = () => {\n+  previewLoading.value = false\n+  ElMessage.error('预览加载失败')\n+}\n+\n+// 下载文件\n+const downloadResult = () => {\n+  if (!currentResult.value.url) {\n+    ElMessage.warning('无法下载，文件URL不存在')\n+    return\n+  }\n+\n+  const fullUrl = getFullUrl(currentResult.value.url)\n+  const fileName = getFileName(currentResult.value.url)\n+\n+  // 创建下载链接\n+  const link = document.createElement('a')\n+  link.href = fullUrl\n+  link.download = fileName\n+  link.target = '_blank'\n+  document.body.appendChild(link)\n+  link.click()\n+  document.body.removeChild(link)\n+\n+  ElMessage.success('开始下载')\n+}\n+\n+// 在新窗口打开\n+const openInNewTab = () => {\n+  if (!currentResult.value.url) {\n+    ElMessage.warning('无法打开，文件URL不存在')\n+    return\n+  }\n+\n+  const fullUrl = getFullUrl(currentResult.value.url)\n+  window.open(fullUrl, '_blank')\n+}\n+\n onMounted(() => {\n   loadPoints()\n })\n </script>\n"
                },
                {
                    "date": 1752321119562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,5 +267,78 @@\n .no-result {\n   color: #909399;\n   font-size: 12px;\n }\n+\n+/* 结果弹窗样式 */\n+.result-dialog {\n+  .el-dialog__body {\n+    padding: 20px;\n+  }\n+}\n+\n+.result-content {\n+  display: flex;\n+  flex-direction: column;\n+  gap: 20px;\n+}\n+\n+.result-info {\n+  background: #f8f9fa;\n+  padding: 16px;\n+  border-radius: 8px;\n+  border-left: 4px solid #409eff;\n+}\n+\n+.result-info p {\n+  margin: 8px 0;\n+  color: #606266;\n+}\n+\n+.result-info strong {\n+  color: #303133;\n+  margin-right: 8px;\n+}\n+\n+.result-preview {\n+  min-height: 200px;\n+  display: flex;\n+  align-items: center;\n+  justify-content: center;\n+  border: 2px dashed #dcdfe6;\n+  border-radius: 8px;\n+  background: #fafafa;\n+}\n+\n+.image-preview img {\n+  max-width: 100%;\n+  max-height: 500px;\n+  border-radius: 8px;\n+  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n+}\n+\n+.video-preview video {\n+  max-width: 100%;\n+  max-height: 500px;\n+  border-radius: 8px;\n+}\n+\n+.file-preview {\n+  text-align: center;\n+  color: #606266;\n+}\n+\n+.file-preview p {\n+  margin: 8px 0;\n+}\n+\n+.file-type {\n+  color: #909399;\n+  font-size: 14px;\n+}\n+\n+.dialog-footer {\n+  display: flex;\n+  justify-content: flex-end;\n+  gap: 12px;\n+}\n </style>\n"
                }
            ],
            "date": 1752314297287,
            "name": "Commit-0",
            "content": "<template>\n  <div class=\"points-page\">\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">积分记录</h1>\n      <el-button type=\"primary\" @click=\"loadPoints\">\n        <el-icon><Refresh /></el-icon>\n        刷新\n      </el-button>\n    </div>\n\n    <el-card>\n      <el-table :data=\"pointsList\" v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n        <el-table-column prop=\"user_id\" label=\"用户ID\" width=\"100\" />\n        <el-table-column prop=\"username\" label=\"用户名\" width=\"120\" />\n        <el-table-column prop=\"type\" label=\"类型\" width=\"100\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"row.type === 'earn' ? 'success' : 'warning'\">\n              {{ row.type === 'earn' ? '获得' : '消费' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"points\" label=\"积分\" width=\"100\" />\n        <el-table-column prop=\"description\" label=\"描述\" min-width=\"200\" />\n        <el-table-column prop=\"created_at\" label=\"时间\" width=\"180\">\n          <template #default=\"{ row }\">\n            {{ formatDate(row.created_at) }}\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { getPointsList } from '@/api/points'\n\nconst loading = ref(false)\nconst pointsList = ref([])\n\nconst formatDate = (date) => {\n  if (!date) return ''\n  return new Date(date).toLocaleString()\n}\n\nconst loadPoints = () => {\n  // 模拟数据\n  pointsList.value = [\n    {\n      id: 1,\n      user_id: 1,\n      username: 'user001',\n      type: 'earn',\n      points: 100,\n      description: '绑定等级卡获得积分',\n      created_at: new Date().toISOString()\n    },\n    {\n      id: 2,\n      user_id: 1,\n      username: 'user001',\n      type: 'spend',\n      points: 50,\n      description: 'AI换脸服务消费',\n      created_at: new Date().toISOString()\n    }\n  ]\n}\n\nonMounted(() => {\n  loadPoints()\n})\n</script>\n\n<style scoped>\n.points-page {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #303133;\n  margin: 0;\n}\n</style>\n"
        }
    ]
}
{
    "sourceFile": "admin/README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752329635161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752329635161,
            "name": "Commit-0",
            "content": "# AI Magic 后台管理系统\n\n基于 Vue 3 + Element Plus 的现代化后台管理系统，用于管理 AI Magic AI图像处理平台。\n\n## 🚀 功能特色\n\n### 核心功能\n- **用户管理** - 查看、搜索、启用/禁用用户\n- **等级卡管理** - 生成体验卡、查看卡片状态\n- **积分记录** - 查看用户积分获得和消费记录\n- **系统配置** - 管理系统基础配置和AI服务开关\n- **数据统计** - 仪表盘展示关键业务指标\n\n### 技术特色\n- **Vue 3** + **Composition API** - 现代化前端框架\n- **Element Plus** - 企业级UI组件库\n- **Vue Router** - 单页面应用路由\n- **Axios** - HTTP请求库\n- **响应式设计** - 完美适配桌面端和移动端\n\n## 📁 项目结构\n\n```\nadmin/\n├── src/\n│   ├── api/              # API接口\n│   │   ├── auth.js       # 认证相关\n│   │   ├── users.js      # 用户管理\n│   │   ├── cards.js      # 等级卡管理\n│   │   ├── points.js     # 积分记录\n│   │   └── dashboard.js  # 仪表盘统计\n│   ├── components/       # 公共组件\n│   ├── router/           # 路由配置\n│   ├── utils/            # 工具函数\n│   │   ├── auth.js       # 认证工具\n│   │   └── request.js    # 请求拦截器\n│   ├── views/            # 页面组件\n│   │   ├── Login.vue     # 登录页\n│   │   ├── Layout.vue    # 布局组件\n│   │   ├── Dashboard.vue # 仪表盘\n│   │   ├── Users.vue     # 用户管理\n│   │   ├── Cards.vue     # 等级卡管理\n│   │   ├── Points.vue    # 积分记录\n│   │   └── Config.vue    # 系统配置\n│   ├── styles/           # 样式文件\n│   ├── App.vue           # 根组件\n│   └── main.js           # 入口文件\n├── index.html            # HTML模板\n├── vite.config.js        # Vite配置\n└── package.json          # 项目配置\n```\n\n## 🛠️ 快速开始\n\n### 环境要求\n- Node.js >= 16.0.0\n- npm 或 yarn\n\n### 安装依赖\n```bash\ncd admin\nnpm install\n```\n\n### 启动开发服务器\n```bash\nnpm run dev\n```\n\n访问地址: http://localhost:3002\n\n### 构建生产版本\n```bash\nnpm run build\n```\n\n## 🔐 认证系统\n\n### 登录流程\n1. 用户输入用户名和密码\n2. 调用 `/api/admin-auth/login` 接口\n3. 成功后保存 token 到 Cookie\n4. 后续请求自动携带 token\n\n### 权限控制\n- 路由守卫检查登录状态\n- API请求自动添加认证头\n- token过期自动跳转登录页\n\n### 演示账号\n- 用户名: `admin`\n- 密码: `admin123`\n\n## 📊 API接口\n\n### 认证接口\n- `POST /api/admin-auth/login` - 管理员登录\n- `GET /api/admin-auth/me` - 获取当前管理员信息\n- `POST /api/admin-auth/logout` - 管理员登出\n\n### 用户管理\n- `GET /api/admin/users` - 获取用户列表\n- `GET /api/admin/users/:id` - 获取用户详情\n- `PUT /api/admin/users/:id/status` - 更新用户状态\n\n### 等级卡管理\n- `GET /api/admin/cards` - 获取等级卡列表\n- `POST /api/admin/generate-experience-cards` - 生成体验卡\n- `GET /api/admin/experience-cards-stats` - 获取体验卡统计\n\n### 积分记录\n- `GET /api/admin/points-logs` - 获取积分记录列表\n\n### 统计数据\n- `GET /api/admin/stats` - 获取仪表盘统计数据\n\n## 🎨 UI设计规范\n\n### 色彩方案\n- 主色调: `#409eff` (Element Plus 蓝)\n- 成功色: `#67c23a`\n- 警告色: `#e6a23c`\n- 危险色: `#f56c6c`\n\n### 布局规范\n- 侧边栏宽度: 200px (展开) / 64px (收起)\n- 内容区域最大宽度: 1200px\n- 卡片圆角: 8px\n- 间距单位: 8px 的倍数\n\n### 响应式断点\n- 移动端: < 768px\n- 平板端: 768px - 1024px\n- 桌面端: > 1024px\n\n## 🔧 开发指南\n\n### 添加新页面\n1. 在 `src/views/` 创建 Vue 组件\n2. 在 `src/router/index.js` 添加路由\n3. 在 `src/api/` 添加对应的API接口\n4. 更新侧边栏菜单\n\n### 状态管理\n- 使用 Vue 3 Composition API\n- 认证状态通过 Cookie 和 localStorage 管理\n- 页面状态使用 reactive/ref 管理\n\n### 错误处理\n- API请求统一错误处理\n- 全局错误边界\n- 用户友好的错误提示\n\n## 🚀 部署\n\n### 开发环境\n```bash\nnpm run dev\n```\n\n### 生产环境\n```bash\nnpm run build\nnpm run preview\n```\n\n### Docker部署\n```dockerfile\nFROM node:16-alpine\nWORKDIR /app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nRUN npm run build\nEXPOSE 3002\nCMD [\"npm\", \"run\", \"preview\"]\n```\n\n## 📝 更新日志\n\n### v1.0.0 (2024-01-20)\n- ✨ 初始版本发布\n- 🎯 完整的用户管理功能\n- 📊 等级卡和积分管理\n- 🎨 现代化UI设计\n- 📱 响应式布局支持\n\n## 🤝 贡献指南\n\n1. Fork 项目\n2. 创建功能分支\n3. 提交更改\n4. 推送到分支\n5. 创建 Pull Request\n\n## 📄 许可证\n\nMIT License\n\n---\n\n**AI Magic Admin** - 让后台管理更简单 ✨\n\n"
        }
    ]
}
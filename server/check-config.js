require('dotenv').config();
const mysql = require('mysql2/promise');

async function checkDatabase() {
  let connection;
  try {
    console.log('üîç ËøûÊé•Êï∞ÊçÆÂ∫ì...');
    console.log('Êï∞ÊçÆÂ∫ìÈÖçÁΩÆ:', {
      host: process.env.DB_HOST,
      port: process.env.DB_PORT,
      user: process.env.DB_USER,
      database: process.env.DB_NAME
    });
    
    connection = await mysql.createConnection({
      host: process.env.DB_HOST,
      port: process.env.DB_PORT,
      user: process.env.DB_USER,
      password: process.env.DB_PASSWORD,
      database: process.env.DB_NAME
    });
    
    console.log('‚úÖ Êï∞ÊçÆÂ∫ìËøûÊé•ÊàêÂäü');
    
    console.log('üîç Ê£ÄÊü• system_config Ë°®...');
    const [tables] = await connection.execute('SHOW TABLES LIKE "system_config"');
    if (tables.length === 0) {
      console.log('‚ùå system_config Ë°®‰∏çÂ≠òÂú®');
      await connection.end();
      return;
    }
    console.log('‚úÖ system_config Ë°®Â≠òÂú®');
    
    console.log('üîç Ê£ÄÊü•ÈÖçÁΩÆÊï∞ÊçÆ...');
    const [configs] = await connection.execute('SELECT config_key, config_value, config_group FROM system_config ORDER BY config_group, config_key');
    console.log(`üìä ÈÖçÁΩÆË°®‰∏≠ÂÖ±Êúâ ${configs.length} Êù°ËÆ∞ÂΩï`);
    
    if (configs.length === 0) {
      console.log('‚ùå ÈÖçÁΩÆË°®‰∏∫Á©∫ÔºåÈúÄË¶ÅÂàùÂßãÂåñÊï∞ÊçÆ');
    } else {
      console.log('üìã Áé∞ÊúâÈÖçÁΩÆ:');
      configs.forEach(config => {
        console.log(`   ${config.config_group}.${config.config_key} = ${config.config_value}`);
      });
    }
    
    await connection.end();
    
  } catch (error) {
    console.error('‚ùå Ê£ÄÊü•Â§±Ë¥•:', error.message);
    if (connection) {
      await connection.end();
    }
  }
}

checkDatabase();

const t={UPLOADING:"uploading",SUBMITTING:"submitting",QUEUING:"queuing",PROCESSING:"processing",COMPLETED:"completed",ERROR:"error"},o={[t.UPLOADING]:"图片上传中...",[t.SUBMITTING]:"提交任务中...",[t.QUEUING]:"队列中...",[t.PROCESSING]:"工作流执行中...",[t.COMPLETED]:"处理完成",[t.ERROR]:"处理失败"};class l{constructor(){this.currentStage=null,this.workflowProgress={currentNode:0,totalNodes:0,percentage:0},this.callbacks=new Set,this.executedNodes=new Set,this.allNodeIds=[]}addCallback(e){this.callbacks.add(e)}removeCallback(e){this.callbacks.delete(e)}_notifyCallbacks(){const e=this.getCurrentMessage();setTimeout(()=>{this.callbacks.forEach(s=>{try{s(this.currentStage,e,{...this.workflowProgress})}catch(r){console.error("进度回调执行错误:",r)}})},0)}setStage(e){this.currentStage!==e&&(this.currentStage=e,console.log(`🔄 进度阶段更新: ${e}`),e!==t.PROCESSING&&(this.workflowProgress={currentNode:0,totalNodes:0,percentage:0},this.executedNodes.clear()),this._notifyCallbacks())}updateWorkflowProgress(e,s){this.currentStage=t.PROCESSING,this.workflowProgress={currentNode:Math.max(0,e),totalNodes:Math.max(0,s),percentage:s>0?Math.round(e/s*100):0},console.log(`📊 工作流进度: ${e}/${s} (${this.workflowProgress.percentage}%)`),this._notifyCallbacks()}setWorkflowNodes(e){this.allNodeIds=[...e],this.workflowProgress.totalNodes=e.length,console.log(`📊 设置工作流节点列表: ${e.length}个节点`,e)}updateFromNodeExecution(e){if(!e)return;this.executedNodes.add(e);const s=this.executedNodes.size,r=this.workflowProgress.totalNodes||this.allNodeIds.length;r>0?this.updateWorkflowProgress(s,r):(this.currentStage=t.PROCESSING,this.workflowProgress.currentNode=s,console.log(`📊 工作流执行节点: ${e} (已执行: ${s})`),this._notifyCallbacks())}getCurrentMessage(){if(this.currentStage===t.PROCESSING&&this.workflowProgress.totalNodes>0){const{currentNode:e,totalNodes:s,percentage:r}=this.workflowProgress;return`${r}%（${e}/${s}）`}else return o[this.currentStage]||"处理中..."}getCurrentState(){return{stage:this.currentStage,message:this.getCurrentMessage(),workflowProgress:{...this.workflowProgress},isWorkflowStage:this.currentStage===t.PROCESSING&&this.workflowProgress.totalNodes>0}}reset(){this.currentStage=null,this.workflowProgress={currentNode:0,totalNodes:0,percentage:0},this.executedNodes.clear(),this.allNodeIds=[],console.log("🔄 进度状态已重置")}setError(e="处理失败"){this.currentStage=t.ERROR,this.errorMessage=e,console.log(`❌ 进度错误: ${e}`),this._notifyCallbacks()}setCompleted(){this.currentStage=t.COMPLETED,console.log("✅ 进度完成"),this._notifyCallbacks()}}function c(){return new l}export{t as PROGRESS_STAGES,l as ProgressStageManager,o as STAGE_TEXTS,c as createProgressStageManager};
